<?xml version="1.0" encoding="UTF-8"?> 
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2full.xsl"?> 
<?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?> 
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0"> 
<channel> 
<title>Wesley Hales</title> 
<link>http://www.jroller.com/wesleyhales/</link> 
<description>Java UI Recipes, notes, tips and tricks...</description> 
<language>en-us</language> 
<copyright>Copyright 2011</copyright> 
<lastBuildDate>Sat, 29 Oct 2011 21:44:33 -0400</lastBuildDate> 
<generator>Apache Roller (incubating) 3.1 (20070421020349:dave)</generator> 
<atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/WesleyHales" /> 
<feedburner:info uri="wesleyhales" /> 
<atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/fixing_ajax_on_mobile_devices</guid>
<title>Fixing Ajax on Mobile Devices (with HTML5)</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/qy9Q-pGe_m0/fixing_ajax_on_mobile_devices</link> 
<pubDate>Mon, 29 Aug 2011 09:46:33 -0400</pubDate> 
<category>Java</category> 
<category>ajax</category> 
<category>html5</category> 
<category>innerhtml</category> 
<description>&lt;p&gt;&lt;p&gt;&amp;#8220;Not only is innerHTML bad, it is the root cause of many problems&amp;#8230; from browser memory leaks (it destroys/replaces existing elements that may have event handlers attached) to failing completely on iOS’s Mobile Safari. Yes, that&amp;#8216;s right, it just flakes out.&amp;#8221;&lt;/p&gt; 

&lt;p&gt;&lt;a href="http://community.jboss.org/people/wesleyhales/blog/2011/08/28/fixing-ajax-on-mobile-devices"&gt;Read on...&lt;/a&gt;&lt;br /&gt; 
&lt;/p&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/qy9Q-pGe_m0" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/fixing_ajax_on_mobile_devices</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/richfaces_mobile_designs_day3</guid>
<title>RichFaces Mobile Designs - Day 3</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/VTo0Amik5lI/richfaces_mobile_designs_day3</link>
<pubDate>Wed, 3 Aug 2011 12:31:57 -0400</pubDate> 
<category>Java</category> 
<category>java</category> 
<category>mobile</category> 
<category>richfaces</category> 
<description>&lt;p&gt;&lt;p&gt;So I made it over the hump of this mobile design week of madness. Below you will find a dark theme with a component skin for the rich:accordion component.&lt;/p&gt;&lt;p&gt;&lt;br /&gt; 
&lt;p class="pTitle"&gt;Day 3: About The Design&lt;/p&gt;&lt;br /&gt; 
Here we have another phone based design broke out into 3 pages.&lt;br /&gt; 
&lt;a href="http://www.wesleyhales.com/resource/rf.phone.day3.page1.JPG"&gt;The first page&lt;/a&gt; is a standard menu so not much to say there. The bottom menu bar is a little different from &lt;a href="http://www.wesleyhales.com/entry/going_mobile_with_richfaces_we"&gt;my first design&lt;/a&gt; &amp;#8211; following the lead of the native twitter iPhone app.&lt;br /&gt; 
&lt;a href="http://www.wesleyhales.com/resource/rf.phone.day3.page1.JPG"&gt;&lt;img alt="RichFace Mobile Skin1" src="http://www.wesleyhales.com/resource/rf.phone.day3.page1.JPG"/&gt;&lt;/a&gt;&lt;br /&gt; 
&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;&lt;br /&gt; 
As you can see with the &lt;a href="http://www.wesleyhales.com/resource/rf.phone.day3.page2.JPG"&gt;second page&lt;/a&gt; (below), this is not a standard accordion panel type of component. When you touch an option from page one, the accordion expands on a different page and only focuses on that specific panel. Not sure if it could work, but accordion collapse/expand style of components don&amp;#8216;t make a ton of sense to me on limited screen real estate.&lt;br /&gt; 
&lt;a href="http://www.wesleyhales.com/resource/rf.phone.day3.page2.JPG"&gt;&lt;img style="margin:0 7px 0 0;" alt="RichFace Mobile Skin1" src="http://www.wesleyhales.com/resource/rf.phone.day3.page2.JPG"/&gt;&lt;/a&gt;&lt;br /&gt; 
&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;&lt;br /&gt; 
So after you go through the menu options and decide on a component, you are taken to the &lt;a href="http://www.wesleyhales.com/resource/rf.phone.day3.page3.JPG"&gt;detail/demo screen&lt;/a&gt;(below) where you can play around with your component of choice.&lt;/p&gt; 

&lt;p&gt;Note the small orange page marker dots at the bottom. The user would have the ability to flip through each component in the given section by swiping horizontally.&lt;br /&gt; 
&lt;a href="http://www.wesleyhales.com/resource/rf.phone.day3.page3.JPG"&gt;&lt;img style="margin:0 7px 0 0;" alt="RichFace Mobile Skin1" src="http://www.wesleyhales.com/resource/rf.phone.day3.page3.JPG"/&gt;&lt;/a&gt;&lt;br /&gt; 
&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br /&gt; 
&lt;/p&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/VTo0Amik5lI" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/richfaces_mobile_designs_day3</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/going_mobile_with_richfaces_design</guid>
<title>Going Mobile With RichFaces! Design Proposals - Day2</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/hZmIZnolnzo/going_mobile_with_richfaces_design</link>
<pubDate>Tue, 2 Aug 2011 08:46:46 -0400</pubDate> 
<category>Java</category> 
<category>java</category> 
<category>jsf</category> 
<category>mobile</category> 
<category>richfaces</category> 
<category>web</category> 
<description>&lt;p&gt;&lt;p&gt;Day 2 of the RichFaces skinning and we have the first approach for tablet devices. Tablets are a little harder to design for because of a few reasons:&lt;/p&gt; 

&lt;p&gt;1) Your design sits on the fine line between desktop and mobile. You are designing your app for a max 1024 pixel resolution (in landscape mode) but you must also take advantage of mobile usability (which you will see in page2)&lt;/p&gt; 

&lt;p&gt;2) Similar to the iPad Mail.app, it&amp;#8216;s almost like you are designing 2 different UI&amp;#8216;s for landscape and portrait modes. For portrait you need more drop down menus, and for landscape you can try to fit everything on one page without the drop downs.&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;&lt;a href="http://www.wesleyhales.com/resource/rf.tablet.day2.page1.jpg"&gt;&lt;img alt="RichFace Mobile Skin1" align="right" width="225px" src="http://www.wesleyhales.com/resource/rf.tablet.day2.page1-small.JPG"/&gt;&lt;/a&gt;&lt;br /&gt; 
&lt;p class="pTitle"&gt;Day 2: About The Design&lt;/p&gt;&lt;br /&gt; 
Here we have the interaction broken out into 2 pages. The first page shows the primary menu and isn&amp;#8216;t all that exciting.&lt;/p&gt; 

&lt;p&gt;Notice how, unlike the &lt;a href="http://www.wesleyhales.com/entry/going_mobile_with_richfaces_we"&gt;iphone design from Day 1&lt;/a&gt;, I left the browser button overrides within the app itself. Tablet web apps are completely use case driven so this will vary. But since we have so much more real estate, we can play around with standard navigation options that keep the user's attention focused on the app itself.&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;&lt;br /&gt; 
&lt;a href="http://www.wesleyhales.com/resource/rf.tablet.day2.page2.jpg"&gt;&lt;img style="margin:0 7px 0 0;" alt="RichFace Mobile Skin1" align="left" width="225px" src="http://www.wesleyhales.com/resource/rf.tablet.day2.page2-small.JPG"/&gt;&lt;/a&gt;&lt;/p&gt; 

&lt;p&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br /&gt; 
The second page is what you see after selecting a menu item from page 1 (click to enlarge). Here we have the title bar at the top left with a built in back button which takes the user back to the first screen.&lt;/p&gt; 

&lt;p&gt;To the right of the title you see the secondary menu represented by rounded rectangles. Next is the main content of the page broken out into content and actionable panels.&lt;/p&gt;

&lt;p&gt;And finally you have the big arrows to the right and left. These arrows are &amp;#8220;thumb reachable&amp;#8221; which is a common usability pattern in portrait mode tablets. It provides an easy page flip access to all of the RichFaces components within the top level category.&lt;br /&gt; 
&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;The great thing about CSS3 transitions is that you can really make a UI like this scream and flow seamlessly. So you can imagine how tapping an arrow with your thumb will slide in a new component demo and gracefully highlight the secondary menu option at the top.&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;So this concludes our design for Day 2. As I said earlier, this is more of a use case driven design. WE could spawn a very minimalistic skin and component look and feel from this. However, It would be more to display the power behind RichFaces ajax and templating features as the user moves through the app.&lt;/p&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/hZmIZnolnzo" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/going_mobile_with_richfaces_design</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/going_mobile_with_richfaces_we</guid>
<title>Going Mobile With RichFaces! Design Proposals - Day1</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/UF7LnE0R50o/going_mobile_with_richfaces_we</link>
<pubDate>Mon, 1 Aug 2011 11:02:32 -0400</pubDate> 
<category>Java</category> 
<category>java</category> 
<category>jsf</category> 
<category>mobile</category> 
<category>richfaces</category> 
<category>web</category> 
<description>&lt;p&gt;&lt;p&gt;Today marks an important day in the &lt;a href="http://www.jboss.org/richfaces"&gt;RichFaces project&lt;/a&gt; as we continue to head down the mobile web road. Since we have such a great community of users and followers, we want you to be involved with the design process.&lt;br /&gt; 
So each day this week, I will come up with a new proposed design/theme for RichFaces Mobile and we want to hear your feedback. &lt;/p&gt;&lt;p&gt;I will announce each new design (both for tablet and phone) via &lt;a href="https://twitter.com/#!/richfaces"&gt;twitter&lt;/a&gt; with a link back to this article. I will try my best to pick apart each design and describe why I did what I did, and hope you can give me some real world feedback. We want this project to actually make sense and be usable to what you guys are facing in the real world. Without further adieu....&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;&lt;a href="http://www.wesleyhales.com/resource/rf-mobile-skin1.JPG"&gt;&lt;img alt="RichFace Mobile Skin1" align="right" width="200px" src="http://www.wesleyhales.com/resource/rf-mobile-skin1-small.jpg"/&gt;&lt;/a&gt;Our first task is to tackle the RichFaces showcase of components. Classifying what is mobile ready and which components may need a little work.&lt;br /&gt; 
&lt;p class="pTitle"&gt;Day 1: About The Design&lt;/p&gt;&lt;br /&gt; 
Here we have what could be the RichFaces component showcase skin. This is what I will be posting a new version of each day this week.&lt;/p&gt; 

&lt;p&gt;In this design we have the standard browser “functionality take over” at the top header. The custom back button is essential to mobile web design and must be overridden here &amp;#8211; following the pattern of previous designs.&lt;/p&gt; 

&lt;p&gt;Nothing too different about the standard menu options and detail options (center stage). Following convention here as well. One thing I am adhering too are the usability guidelines set forth by Jakob Nielsen&amp;#8216;s &lt;a href="http://www.nngroup.com/reports/mobile/ipad/"&gt;Usability of iPad Apps and Websites&lt;/a&gt;&lt;/p&gt; 

&lt;p&gt;To get the full tab bar at the bottom (and to replicate the native feel) the user must bookmark the application. I think it makes sense for this menu to be contextual to the app and provide other alternate routes.&lt;br /&gt; 
&lt;/p&gt;&lt;br /&gt; 
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/UF7LnE0R50o" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/going_mobile_with_richfaces_we</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/my_new_career_choice_at</guid>
<title>My New Career Choice at Red Hat</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/zudN8EU2C14/my_new_career_choice_at</link>
<pubDate>Mon, 4 Jul 2011 22:18:47 -0400</pubDate> 
<category>Life</category> 
<category>jboss</category> 
<description>&lt;p&gt;&lt;p&gt;July 1st marked my first day on the &lt;a href="http://www.jboss.org/richfaces"&gt;JBoss RichFaces&lt;/a&gt; team. I've decided to push myself and get out of my comfort zone. It seems that a developer only has so many years that he or she can sustain the same position doing the same thing and dealing with the same technology.&lt;/p&gt;&lt;p&gt;I’ve been with Red Hat almost 4 years now and have enjoyed every second of it, and this is the first time in my career that I have chosen the position for myself while working within a company. It’s usually the other way around - as you are either picked for your skills and talent to work on a specific team or for whatever reason you are just told to move to another team.&lt;/p&gt;&lt;p&gt;As for my new position, I have been designated to serve on JBoss’ mobile working group (see &lt;a href="http://en.wikipedia.org/wiki/Tiger_team"&gt;Tiger Team&lt;/a&gt;). I will be part time on the actual RichFaces project (making the project work on mobile devices) and the other part heavily focused on HTML5 and the &lt;a href="http://en.wikipedia.org/wiki/Mobile_Web"&gt;Mobile Web&lt;/a&gt;. This is a new frontier for developers as we try to create HTML5/CSS3 based web apps that not only match the native app feel but also answer the question “How can we make the mobile web faster using JBoss middleware?”.&lt;/p&gt;&lt;p&gt;As things grow, so will the project and the team. I find excitement in bringing grass roots projects &lt;a href="http://www.jboss.org/portletbridge"&gt;from nothing into full blown enterprise supported products&lt;/a&gt; &lt;img src="http://www.jroller.com/images/smileys/wink.gif" class="smiley" alt=";)" title=";)" /&gt; Luckily I was in the right place at the right time and I must say that it was quite an honor to be allowed to make such a move. I’m looking forward to making good stuff happen.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;Stay tuned&amp;#8230;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/zudN8EU2C14" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/my_new_career_choice_at</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/runtime_type_detection_and_usage</guid>
<title>Runtime Type Detection and Usage with Weld</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/x6Q0dTLD5BE/runtime_type_detection_and_usage</link>
<pubDate>Wed, 4 May 2011 16:01:17 -0400</pubDate> 
<category>Java</category> 
<category>cdi</category> 
<category>hornetq</category> 
<category>infinispan</category> 
<category>jms</category> 
<category>jsf</category> 
<category>richfaces</category> 
<category>seam</category> 
<category>weld</category> 
<description>&lt;p&gt;&lt;p&gt;&lt;p class="pTitle"&gt;About TweetStream&lt;/p&gt;&lt;br /&gt; 
&lt;img alt="tweetstream" align="right" width="200px" src="/wesleyhales/resource/tweetstream-phone.png"/&gt;In developing the &lt;a href="https://github.com/richfaces/tweetstream"&gt;TweetStream&lt;/a&gt; demo for the JBoss World keynote and &lt;span class="caps"&gt;JUD&lt;/span&gt;Con presentation, I wanted to use &lt;span class="caps"&gt;CDI&lt;/span&gt; in a way that would choose the implementation of a given type at runtime. With Qualifiers and Producers, &lt;span class="caps"&gt;CDI&lt;/span&gt; gives you the power to do this.&lt;br /&gt; 
A little bit about the usecase: The &lt;a href="https://github.com/richfaces/tweetstream"&gt;TweetStream&lt;/a&gt; application is an app that Jay Balunas and I developed over the past few months for our presentation at &lt;span class="caps"&gt;JUD&lt;/span&gt;Con and JBoss World 2011. It was purposely developed with a myriad of JBoss community projects to showcase how you can build a mobile &lt;span class="caps"&gt;HTML5&lt;/span&gt; web application (which runs on Android and iOS devices) with things like scalable data grid, &lt;span class="caps"&gt;JMS&lt;/span&gt;, JSF2, &lt;span class="caps"&gt;HTML5&lt;/span&gt;/CSS3 and other middleware technologies. This application (TweetStream) was also chosen to be part of the literally incredible JBoss World 2011 keynote.&lt;br /&gt; 
So, we had 2 scenarios &amp;#8211; 1) for our presentation we needed a mobile app that could run solely on it’s own so that users could pull the &lt;a href="https://github.com/richfaces/tweetstream"&gt;source code&lt;/a&gt;, see how we did things, and run it. 2) For the keynote, we had to make our app integrate with the Infinispan datagrid that was already setup as part of the keynote demo. The data stored on this grid utilized Drools and complex event processing as part of the keynote, so our app had to consume that data for that environment.&lt;br /&gt; 
So we got our tweet data from the true source (twitter4j) during our &lt;span class="caps"&gt;JUD&lt;/span&gt;Con presentation, and then from the data grid during the keynote. We could have used &lt;span class="caps"&gt;CDI&lt;/span&gt; alternatives, but I wanted a true solution with no &lt;span class="caps"&gt;XML&lt;/span&gt; configuration and runtime detection.&lt;br /&gt; 
&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;&lt;p class="pTitle"&gt;The Code...&lt;/p&gt;&lt;br /&gt; 
So we have 2 Qualifier Types:&lt;br /&gt; 
@TwitterLocal for the &lt;span class="caps"&gt;JUD&lt;/span&gt;Con demo impl&lt;br /&gt; 
@TwitterServer for the keynote impl&lt;/p&gt; 

&lt;p&gt;We used infinispan in both instances, but our @TwitterLocal is a single node caching a direct twitter stream from Twitter4J.&lt;/p&gt; 

&lt;p&gt;Now that we have our types defined as follows&amp;#8230;&lt;/p&gt; 

&lt;p&gt;&lt;div class="java" style="font-family:monospace;color: #006; border: 1px solid #d0d0d0; background-color: #f0f0f0;"&gt;@Qualifier&lt;br /&gt; 
&lt;br /&gt; 
@Retention&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;RetentionPolicy.&lt;span style="color: #006633;"&gt;RUNTIME&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
@Target&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;ElementType.&lt;span style="color: #006633;"&gt;TYPE&lt;/span&gt;, ElementType.&lt;span style="color: #006633;"&gt;METHOD&lt;/span&gt;, ElementType.&lt;span style="color: #006633;"&gt;FIELD&lt;/span&gt;, ElementType.&lt;span style="color: #006633;"&gt;PARAMETER&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;span style="color: #000000; font-weight: bold;"&gt;public&lt;/span&gt; @&lt;span style="color: #000000; font-weight: bold;"&gt;interface&lt;/span&gt; TwitterServer&lt;br /&gt; 
&lt;br /&gt; 
&lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
@Qualifier&lt;br /&gt; 
&lt;br /&gt; 
@Retention&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;RetentionPolicy.&lt;span style="color: #006633;"&gt;RUNTIME&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
@Target&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;ElementType.&lt;span style="color: #006633;"&gt;TYPE&lt;/span&gt;, ElementType.&lt;span style="color: #006633;"&gt;METHOD&lt;/span&gt;, ElementType.&lt;span style="color: #006633;"&gt;FIELD&lt;/span&gt;, ElementType.&lt;span style="color: #006633;"&gt;PARAMETER&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;span style="color: #000000; font-weight: bold;"&gt;public&lt;/span&gt; @&lt;span style="color: #000000; font-weight: bold;"&gt;interface&lt;/span&gt; TwitterLocal&lt;br /&gt; 
&lt;br /&gt; 
&lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/p&gt; 

&lt;p&gt;We need not only an implementation of each, but also a deciding bean that tells us which type to use.&lt;/p&gt; 

&lt;p&gt;First, our implementation of each Type implements an interface:&lt;/p&gt; 

&lt;p&gt;&lt;div class="java" style="font-family:monospace;color: #006; border: 1px solid #d0d0d0; background-color: #f0f0f0;"&gt;&lt;span style="color: #000000; font-weight: bold;"&gt;public&lt;/span&gt; &lt;span style="color: #000000; font-weight: bold;"&gt;interface&lt;/span&gt; TwitterSource &lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #000000; font-weight: bold;"&gt;public&lt;/span&gt; &lt;span style="color: #000066; font-weight: bold;"&gt;void&lt;/span&gt; init&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
…&lt;/div&gt;&lt;/p&gt; 

&lt;p&gt;And our implementations have a different usage of the init method. &lt;code&gt;TwitterLocal starts the stream coming from twitter and updates the infinispan cache. &lt;/code&gt;TwitterServer starts a method which allows us to start receiving data from the keynote which uses complex event processing and a datagrid with 6&amp;#8211;8 nodes.&lt;/p&gt; 

&lt;p&gt;So now, how do we decide which Type to use? There are a few different ways to do it, but in the case of this being a demo and not a lot of time on my part. I used this approach:&lt;/p&gt;

&lt;p&gt;&lt;div class="java" style="font-family:monospace;color: #006; border: 1px solid #d0d0d0; background-color: #f0f0f0;"&gt;&lt;span style="color: #000000; font-weight: bold;"&gt;public&lt;/span&gt; &lt;span style="color: #000000; font-weight: bold;"&gt;class&lt;/span&gt; TweetStream &lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; @Inject&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; @&lt;a style="color: #000060;" href="http://www.google.com/search?hl=en&amp;q=allinurl%3Aany+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky"&gt;&lt;span style="color: #003399;"&gt;Any&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt; 
&amp;nbsp; Instance&lt;span style="color: #339933;"&gt;&lt;&lt;/span&gt;TwitterSource&lt;span style="color: #339933;"&gt;&gt;&lt;/span&gt; twitterSource&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #000000; font-weight: bold;"&gt;class&lt;/span&gt; TwitterLocalQualifier &lt;span style="color: #000000; font-weight: bold;"&gt;extends&lt;/span&gt; AnnotationLiteral&lt;span style="color: #339933;"&gt;&lt;&lt;/span&gt;TwitterLocal&lt;span style="color: #339933;"&gt;&gt;&lt;/span&gt; &lt;span style="color: #000000; font-weight: bold;"&gt;implements&lt;/span&gt; TwitterLocal&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #000000; font-weight: bold;"&gt;class&lt;/span&gt; TwitterServerQualifier &lt;span style="color: #000000; font-weight: bold;"&gt;extends&lt;/span&gt; AnnotationLiteral&lt;span style="color: #339933;"&gt;&lt;&lt;/span&gt;TwitterServer&lt;span style="color: #339933;"&gt;&gt;&lt;/span&gt; &lt;span style="color: #000000; font-weight: bold;"&gt;implements&lt;/span&gt; TwitterServer&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #000066; font-weight: bold;"&gt;boolean&lt;/span&gt; initialCheck &lt;span style="color: #339933;"&gt;=&lt;/span&gt; &lt;span style="color: #000066; font-weight: bold;"&gt;true&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #000066; font-weight: bold;"&gt;boolean&lt;/span&gt; demoexists &lt;span style="color: #339933;"&gt;=&lt;/span&gt; &lt;span style="color: #000066; font-weight: bold;"&gt;false&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; @PostConstruct&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #000000; font-weight: bold;"&gt;private&lt;/span&gt; &lt;span style="color: #000066; font-weight: bold;"&gt;void&lt;/span&gt; init&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp;getTwitterSource&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;.&lt;span style="color: #006633;"&gt;init&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; @Produces&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #000000; font-weight: bold;"&gt;public&lt;/span&gt; TwitterSource getTwitterSource&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: #000000; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;initialCheck&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style="color: #000000; font-weight: bold;"&gt;try&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: #000000; font-weight: bold;"&gt;Class&lt;/span&gt;.&lt;span style="color: #006633;"&gt;forName&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;quot;org.jboss.jbw2011.keynote.demo.model.TweetAggregate&amp;quot;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;log.&lt;span style="color: #006633;"&gt;info&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;quot;Running in JBW2011 Demo Mode.&amp;quot;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;demoexists &lt;span style="color: #339933;"&gt;=&lt;/span&gt; &lt;span style="color: #000066; font-weight: bold;"&gt;true&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style="color: #000000; font-weight: bold;"&gt;catch&lt;/span&gt; &lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;a style="color: #000060;" href="http://www.google.com/search?hl=en&amp;q=allinurl%3Aclassnotfoundexception+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky"&gt;&lt;span style="color: #003399;"&gt;ClassNotFoundException&lt;/span&gt;&lt;/a&gt; ex&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#123;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;log.&lt;span style="color: #006633;"&gt;info&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #0000ff;"&gt;&amp;quot;Running in local JUDCon2011 Demo Mode.&amp;quot;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; initialCheck &lt;span style="color: #339933;"&gt;=&lt;/span&gt; &lt;span style="color: #000066; font-weight: bold;"&gt;false&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;a style="color: #000060;" href="http://www.google.com/search?hl=en&amp;q=allinurl%3Aannotation+java.sun.com&amp;btnI=I%27m%20Feeling%20Lucky"&gt;&lt;span style="color: #003399;"&gt;Annotation&lt;/span&gt;&lt;/a&gt; qualifier &lt;span style="color: #339933;"&gt;=&lt;/span&gt; demoexists &lt;span style="color: #339933;"&gt;?&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style="color: #000000; font-weight: bold;"&gt;new&lt;/span&gt; TwitterServerQualifier&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt; &lt;span style="color: #339933;"&gt;:&lt;/span&gt; &lt;span style="color: #000000; font-weight: bold;"&gt;new&lt;/span&gt; TwitterLocalQualifier&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: #000000; font-weight: bold;"&gt;return&lt;/span&gt; twitterSource.&lt;span style="color: #006633;"&gt;select&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;qualifier&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;.&lt;span style="color: #006633;"&gt;get&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#40;&lt;/span&gt;&lt;span style="color: #009900;"&gt;&amp;#41;&lt;/span&gt;&lt;span style="color: #339933;"&gt;;&lt;/span&gt;&lt;br /&gt; 
&lt;br /&gt; 
&amp;nbsp; &lt;span style="color: #009900;"&gt;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;/p&gt; 

&lt;p&gt;This is all in the &lt;a href="https://github.com/richfaces/tweetstream"&gt;source code&lt;/a&gt;. Feel free to pull it and make improvements or run it to see it in action. There are many more blog posts to come from this demo, so stay tuned&amp;#8230;&lt;br /&gt; 
&lt;/p&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/x6Q0dTLD5BE" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/runtime_type_detection_and_usage</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/does_developing_portlets_make_you</guid>
<title>Does Developing Portlets Make You a Better Developer?</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/YQ8myffQAcs/does_developing_portlets_make_you</link>
<pubDate>Tue, 5 Apr 2011 10:27:25 -0400</pubDate> 
<category>Java</category> 
<category>java</category> 
<category>jsf</category> 
<category>portal</category> 
<category>portlets</category> 
<description>&lt;p&gt;&lt;p&gt;Working with portlet technology is often discredited for it’s seemingly complex &lt;span class="caps"&gt;API&lt;/span&gt; and development hoops one must jump through. But if you have worked on a portlet project for a considerable amount of time, and then jump back to a servlet based project, you have a feeling that life just got easier.&lt;br /&gt; 
This is all within the context of which servlet-based framework you might be working with, but overall things are a bit easier when dealing with one request and response.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;What if you didn’t have to worry about portlet development gotchas anymore? What if you could develop portlets with the ease and hassle free life that you have with good ol’ servlets? Well, I’m here to tell you that this can be partly achieved with JSR-301 portlet bridge technology.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;I encourage (actually I dare you) to those who have never even touched a portal to take the JBoss Portlet Bridge for a test drive. It takes &lt;a href="http://downloads.sourceforge.net/project/jboss/GateIn/Portal/3.1.0-FINAL/GateIn-3.1.0-FINAL-jbossas.zip"&gt;1 download (GateIn bundled with JBoss)&lt;/a&gt; and one maven archetype to get started. You can choose from any combination of plain &lt;span class="caps"&gt;JSF&lt;/span&gt;, Richfaces, and Seam with&lt;br /&gt; 
&lt;code style="color:white"&gt;mvn archetype:generate -DarchetypeCatalog=http://bit.ly/jbossportletbridge&lt;/code&gt; from the command line.&lt;br /&gt; 
&lt;img src="/wesleyhales/resource/jbw2011/archetype.gif" alt=""/&gt;&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;If you run into any questions or special usecases, we have 7 videos which demo and walk you through just about anything you could think up.&lt;br /&gt; 
&lt;a href="http://vimeo.com/wesleyhales/videos/sort:date"&gt;&lt;img src="/wesleyhales/resource/jbw2011/vimeo.gif" alt="" align="center"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;&lt;a href="http://refcardz.dzone.com/refcardz/mastering-portals-portlet"&gt;&lt;img src="/wesleyhales/resource/jbw2011/refcard.gif" alt="" align="right"/&gt;&lt;/a&gt;And for those that like to have a refcard by their side, you can get all the information you need about the story of portal technology and configuration drill downs here: &lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;From &lt;a href="http://refcardz.dzone.com/refcardz/mastering-portals-portlet"&gt;“Mastering Portals with a Portlet Bridge”&lt;/a&gt; DZone Refcard:&lt;br /&gt; 
“A portlet bridge allows you to run application frameworks like &lt;span class="caps"&gt;JSF&lt;/span&gt; in a portal environment without needing to know anything about the underlying portlet &lt;span class="caps"&gt;API&lt;/span&gt; or portlet concepts.”&lt;br /&gt; 
&lt;/p&gt;&lt;br /&gt; 
&lt;br/&gt;&lt;br /&gt; 
&lt;p&gt;&lt;br /&gt; 
&lt;a href="http://www.redhat.com/summit/sessions/jboss.html"&gt;&lt;img src="/wesleyhales/resource/jbw2011/jbw-2011.gif" alt="" align="left" style="margin:0 15px 25px 0"/&gt;&lt;/a&gt;&lt;br /&gt; 
And if all that wasn’t enough, I will be giving a 50 minute talk at JBoss World titled &lt;a href="http://www.redhat.com/summit/sessions/jboss.html"&gt;"Making Portals Cool: The Compelling Advantages of a Portlet Bridge"&lt;/a&gt; where you can come and personally track me down and specifically tell me about your problems, pains, or happiness with the project or the world in general &lt;img src="http://www.jroller.com/images/smileys/wink.gif" class="smiley" alt=";)" title=";)" /&gt; JBoss World will be located in Boston from May 3&amp;#8211;6.&lt;br /&gt; 
I think &lt;a href="http://www.redhat.com/summit/rates/"&gt;early bird pricing&lt;/a&gt; ends this Friday (April 8th), so you better hurry if you want to save a little cash.&lt;/p&gt; 

&lt;p&gt;&lt;/p&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/YQ8myffQAcs" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/does_developing_portlets_make_you</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/going_mobile_with_richfaces_4</guid>
<title>Going Mobile With RichFaces 4 - Part 1: Drag and Drop</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/I7nrCgbVjtg/going_mobile_with_richfaces_4</link>
<pubDate>Wed, 16 Feb 2011 16:47:00 -0500</pubDate> 
<category>Java</category> 
<category>jquery</category> 
<category>jsf</category> 
<category>richfaces</category> 
<description>&lt;p&gt;&lt;p&gt;&lt;a href="http://www.jboss.org/richfaces/"&gt;Richfaces 4&lt;/a&gt; just reached Milestone 6 and now would be a great time for the community to step up and check how the components run on mobile platforms.&lt;br /&gt; 
First off, Richfaces 4 currently does not offer mobile support but it is definitely the direction they are heading. And the RF team has taken all the necessary steps to allow the client side code to be extended and improved by way of jQuery.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;Today I am going to add touch support to the RF drag and drop component. We all know that touch events and gestures are not the same as a mouse click. So one must consider a couple of different approaches before implementing a final solution:&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;1) Override the default touch events with their mouse counterparts.&lt;br /&gt; 
This is easy since you are basically overriding the default functionality of touch and gesture events. There are 3 mouse events to replace to get this component working:&lt;br /&gt; 
touchstart,touchmove,touchend&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;2) Extend jQuery core components and add the “drag” functionality alongside “touch”&lt;br /&gt; 
A little more difficult and fortunately the jQuery team is working on the mobile upgrade to ui.draggable &amp;#8211; so this should be available in the next few weeks/months.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;object width="480" height="390"&gt;&lt;param name="movie" value="http://www.youtube.com/v/Exs1jumZ4yk?fs=1&amp;hl=en_US"&gt;&lt;/param&gt;&lt;param name="allowFullScreen" value="true"&gt;&lt;/param&gt;&lt;param name="allowscriptaccess" value="always"&gt;&lt;/param&gt;&lt;embed src="http://www.youtube.com/v/Exs1jumZ4yk?fs=1&amp;hl=en_US" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="390"&gt;&lt;/embed&gt;&lt;/object&gt;(tested on live iPhone4 and iOS simulator iPad)&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;I originally started out using the touch and gesture events to do the drag and drop. This allowed for a smoother UX but unfortunately, the internal plumbing of Richfaces required a complex extension/wrap of rf.ui.draggable (to add the new touch functions) and some custom bindings like rf.Event.bind(this.dragElement, &amp;#8216;touchstart&amp;#8216;+this.namespace&amp;#8230;.) in dnd-draggable.js.&lt;br /&gt; 
In the end, it was just easier for me to use &lt;a href="https://github.com/furf/jquery-ui-touch-punch/blob/master/jquery.ui.touch-punch.js"&gt;this script&lt;/a&gt; and re-map the 3 main touch events.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;I looked at many different approaches starting with SenchaTouch which btw is pointless if you are going to leverage existing jQuery, then moving to a few different jQuery utilities.&lt;br /&gt; 
The basic question here, which can be applied to any component framework, is “What’s the best mobile approach for supporting product xyz?” Every product out there that touches the UI has to cross this gap. Touch interfaces today&amp;#8230; tangible UI’s tomorrow&amp;#8230; and the vicious cycle continues. And majority of the time, the best way to get started is to build an emulator so that your product can work today. This will buy you the time to build the native functionality that takes full advantage of the target platform.&lt;br /&gt; 
Unfortunately the script I used here doesn’t always work and there are still a few more components in Richfaces that do not work with this duck punch approach. So I will try to make this a series and blog about &amp;#38; fix the other components on mobile platforms.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;The old days of drag and drop are not as simple as they used to be. With multi touch surfaces you have the ability to accelerate your drag and throw it across the page, rotate it, and auto scrolling when you drag the object off the page, etc... Just something to think about when designing a similar component.&lt;/p&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/I7nrCgbVjtg" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/going_mobile_with_richfaces_4</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/a_simple_way_to_do</guid>
<title>Replacing Photoshop With CSS3 - Creating Styles</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/3ZyeqxSC0XU/a_simple_way_to_do</link>
<pubDate>Sat, 5 Feb 2011 18:04:24 -0500</pubDate> 
<category>Java</category> 
<category>html5</category> 
<description>&lt;p&gt;&lt;p&gt;One trendy technique that I often use in Photoshop (for buttons, nav bars, etc&amp;#8230;) is a gradient that slightly variates from its base color with a hint of inner shadow (for highlight).&lt;br /&gt; 
This used to be a pain in the royal ass to implement with html/css2, but now is amazingly simple with &lt;span class="caps"&gt;CSS3&lt;/span&gt;. Not only is it simple, but you can also create a sort of &amp;#8220;gradient template&amp;#8220; to be reused. Kind of like a &amp;#8220;style&amp;#8221; which can be applied to any element in Photoshop.&lt;/p&gt;&lt;br /&gt;
&lt;p class="pTitle"&gt;First off, this is how I would normally do it in Photoshop:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Create the element &amp;#8211; a button in this case:&lt;br /&gt; 
&lt;img alt="" src="http://www.jroller.com/wesleyhales/resource/css3post/button.PNG"/&gt;&lt;/li&gt;&lt;br /&gt; 
&lt;li&gt;Create your gradient. Gradients that are hardly gradients seem to give a nice appearance and body to the design. Meaning you start with a base color like #6c291f and move up the scale to #e42a00.&lt;br /&gt; 
&lt;img alt="" src="http://www.jroller.com/wesleyhales/resource/css3post/gardient-setup.PNG"/&gt;&lt;br /&gt; 
&lt;/li&gt;&lt;br /&gt; 
&lt;li&gt;Next you add an inner shadow to give it a glow like effect. Again this too is based on your gradient color.&lt;br /&gt; 
&lt;img alt="" src="http://www.jroller.com/wesleyhales/resource/css3post/innerglow.PNG"/&gt;&lt;br /&gt; 
&lt;/li&gt;&lt;br /&gt; 
&lt;li&gt;Here is the end result (from Photoshop):&lt;br /&gt; 
&lt;img alt="" src="http://www.jroller.com/wesleyhales/resource/css3post/red.button.photoshop.PNG"/&gt;&lt;br /&gt; 
&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt; 
&lt;p&gt;&lt;p class="pTitle"&gt;Now, let's do the exact same thing in CSS3 with 1 step.&lt;/p&gt;&lt;p&gt;This tested fine across all the latest browsers (Firefox 3.6+, Latest Safari, Latest Chrome, and who cares about IE &lt;img src="http://www.jroller.com/images/smileys/wink.gif" class="smiley" alt=";)" title=";)" /&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Simply use the brightest part of the gradient color from above (#e42a00) and substitute it as the background color below:&lt;br /&gt; 
&lt;pre style="line-height: 100%;font-family:monospace;background-color:#ffffff; border-width:0.01mm; border-color:#000000; border-style:solid;padding:4px;font-size:10px;"&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt; 1 &lt;/span&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;button&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;.&lt;/span&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;red&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; {&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt; 2 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;background&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;#e42a00&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;&lt;del&gt;moz&lt;/del&gt;linear-gradient&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;90&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;deg&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;rgba&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;.3&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;) &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;33&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;%, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;rgba&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;255&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;255&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;255&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;.1&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;) &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;123&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;%)&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt; 3 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;background&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;#e42a00&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;&lt;del&gt;webkit&lt;/del&gt;gradient&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;linear&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;left&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;top&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;left&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;bottom&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;rgba&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;255&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;255&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;255&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;.1&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;)), &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;to&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;rgba&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;.3&lt;/span&gt;&lt;/span&gt;&lt;span style="text-decoration:underline;color:#cccccc"&gt;&lt;span style="background-color:#ffffff;"&gt;)))&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt; 4 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;border-radius&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;7&lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;px&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt; 5 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;&lt;del&gt;moz&lt;/del&gt;border-radius&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;7&lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;px&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt; 6 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;&lt;del&gt;webkit&lt;/del&gt;border-radius&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;7&lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;px&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt; 7 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;border&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;none&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt; 8 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;box-shadow&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;6&lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;px&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;rgba&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;255&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;102&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;102&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;1&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;) &lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;inset&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt; 9 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;&lt;del&gt;moz&lt;/del&gt;box-shadow&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;6&lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;px&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;rgba&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;255&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;102&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;102&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;1&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;) &lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;inset&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt;10 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;&lt;del&gt;webkit&lt;/del&gt;box-shadow&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;6&lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;px&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;rgba&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;255&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;102&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;102&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;1&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;) &lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;inset&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;br /&gt; 
&lt;/li&gt;&lt;br /&gt; 
&lt;li&gt;Here is the end result (from Firefox):&lt;br /&gt; 
&lt;img alt="" src="http://www.jroller.com/wesleyhales/resource/css3post/red.button.css.PNG"&gt;&lt;/li&gt;&lt;br /&gt; 
&lt;/ol&gt;&lt;/p&gt; 
&lt;p&gt;&lt;p&gt;Notice from the css code that we are only using one color? This is so we can easily create a super class that allows us to override its functionality. In the end all you would need is one line of code for background color to create a button for every color that exists with the same style from above applied to it.&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;Now to create a button using the same &amp;#8220;style&amp;#8221;, you would only have to create a class that defines the background color and inner shadow highlight. i.e&amp;#8230;.&lt;br /&gt; 
&lt;pre style="line-height: 100%;font-family:monospace;background-color:#ffffff; border-width:0.01mm; border-color:#000000; border-style:solid;padding:4px;font-size:10px;"&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt;1 &lt;/span&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;button&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;.&lt;/span&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;lightblue&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; {&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt;2 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;background-color&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;#41b6ff&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt;3 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;font-weight:bold;"&gt;&lt;del&gt;moz&lt;/del&gt;box-shadow&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;: &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;0&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;6&lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;px&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt; &lt;/span&gt;&lt;span style="color:#000080;background-color:#ffffff;font-weight:bold;"&gt;rgba&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;(&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;55&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;243&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;255&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;,&lt;/span&gt;&lt;span style="color:#0000ff;background-color:#ffffff;"&gt;1&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;) &lt;/span&gt;&lt;span style="color:#008000;background-color:#ffffff;font-weight:bold;"&gt;inset&lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;;&lt;br /&gt; 
&lt;/span&gt;&lt;span style="color:#800000;background-color:#f0f0f0;"&gt;4 &lt;/span&gt;&lt;span style="background-color:#ffffff;"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;This would give you a button like this:&lt;br /&gt; 
&lt;img alt="" src="http://www.jroller.com/wesleyhales/resource/css3post/blue.button.css.PNG"/&gt;&lt;/p&gt;&lt;br /&gt; 
&lt;p&gt;The only part that isn't really flexible is the inner shadow feathering. It is currently set to blur the shadow by a fixed pixel. It would be awesome if you could blur by percent as this would allow the gradient filled element to be resized dynamically and maintain the aspect of inner glow.&lt;/p&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/3ZyeqxSC0XU" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/a_simple_way_to_do</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/jazoon_2010_overview</guid>
<title>Jazoon 2010 Overview</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/3dfEt3WhvCo/jazoon_2010_overview</link>
<pubDate>Mon, 7 Jun 2010 10:58:06 -0400</pubDate> 
<category>Java</category> 
<category>conferences</category> 
<category>java</category> 
<category>jazoon</category> 
<description>&lt;p&gt;&lt;p&gt;I've always heard good things about Jazoon and I got to experience it first hand this week. Definitely one of the larger conferences based in Europe, I was impressed not only by the venue but also with the star studded line&amp;#45;up of talented speakers/developers.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;I was pleasantly surprised to see soo many talks about portal technologies. And people weren't talking about the spec or the technology itself, but about specific usecases &amp;#45; which is really cool. However, Andy Bosch did an excellent job of explaining the JSR&amp;#45;301/329 portlet bridge. &lt;a href="http://www.slideshare.net/wesleyhales/if-you-know-jsf-you-know-portals-and-portlets"&gt;My talk&lt;/a&gt; was more vendor specific on the &lt;a href="http://jboss.org/portletbridge/"&gt;JBoss Portlet Bridge&lt;/a&gt; and the features that we offer with Seam and RichFaces, so it was great to have someone there to explain the spec in detail and give a non&amp;#45;vendor specific view.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;Andrew Lombardi announced his love for JSF and that the Wicket folks may/will begin to focus on a better component library community. I hate to mention JSF within the same paragraph as Wicket &lt;img src="http://www.jroller.com/images/smileys/wink.gif" class="smiley" alt=";)" title=";)" /&gt; but when a developer at XYZ corporation wants to implement some usecase that makes use of a lot of different components, 99% of the time they will look to JSF and its many component libraries/communities. Not to get into a holy war here, because of course Wicket has a different way of handling it's components &amp;#45; and an overall different (better) way of handling the model and binding of components. The one thing that is missing from Wicket (in my mind) is heavy focus on polished component libraries and communities.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;Matthew McCullough put on a great show with his Maven 3 presentation. The use of screenflow and his rate of speech were right on the money. It has inspired me to try just a little bit harder with my talks.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;The Arquillian talk by Dan Allen and Aslak Knutsen ended as a great talk and shirt throwing fun. Of course, a few of the audience members had to pay the price of Dan's throwing arm &amp;#45; aim at the back row, but hit someone in the middle row with alot of force :D In all seriousness, Arquillian is taking the testing world by storm so you better jump on the train or get out of the way.&lt;/p&gt;&lt;/p&gt; 

&lt;p&gt;&lt;p&gt;There were many other great talks given by other speakers. So, it was definitely a good knowledge sharing event.&lt;br /&gt; 
Overall, I had a great time and met a lot of people whom I have only talked to through twitter and email. For me, it is soo much easier to blast or praise someone online when you have sat down and had a beer with them &amp;#45; but that&amp;#8216;s just me.&lt;/p&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/3dfEt3WhvCo" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/jazoon_2010_overview</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/the_ultimate_guide_for_developer</guid>
<title>The Ultimate Guide For Developer Screencasts</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/Pw-eokADyUM/the_ultimate_guide_for_developer</link> 
<pubDate>Wed, 17 Mar 2010 13:52:55 -0400</pubDate> 
<category>Java</category> 
<description>&lt;p&gt;&lt;img alt="JBoss Portlet Bridge Logo" align="right" src="/wesleyhales/resource/jbossportletbridge_logo.gif"/&gt; About a year ago, I decided to start creating screen casts for the &lt;a href="http://jboss.org/portletbridge" target="_blank"&gt;JBoss Portlet Bridge&lt;/a&gt; open source project. As a manager of a relatively small, niche project, it is easy for me to try new things that can only improve the community around the project &amp;#45; or serve as a learning lesson for myself. Screencasts are nothing new to the development scene, but my goal was to liven it up a bit and make the outcome seem more professional and well produced. At the same time, covering all the important facets of managing a community like community member recognition, to getting started, and so on.&lt;/p&gt; 

&lt;p class="pTitle"&gt;Coming up with a topic&lt;/p&gt; 
&lt;p&gt;This doesn't seem like a hard task, but it can make or break your idea. You don't want to base your topic on generic phrases or buzzwords. Of course, to get someone interested in your project, you may need to use a mainstream keyword in your title. But don't be untrue to your viewers. This is your name and reputation on the line, so give the community what they want by evaluating forum topics, in&amp;#45;house support requests, wiki articles, or current blog posts about your project.&lt;/p&gt; 

&lt;p&gt;Take a look at this: 
&lt;img alt="Screencast Title" align="middle" src="/wesleyhales/resource/screencast-title.gif" /&gt; 
You might say, "Why not just use the core topic and tag the basic stuff?" &amp;#45; Well, tags are cool and all, but they are platform dependent, so I use a double&amp;#45;fallback with the title. Of course I still use tags, but when you post the title in your blog, twitter and wherever else, you will need the all&amp;#45;in&amp;#45;one, "Google friendly" title. 
&lt;/p&gt; 

&lt;p&gt;And lastly in choosing your topic, remember we all have roots as an end user of someone's framework or product, so I always envision myself as the user. This is best done by creating a screencast for a common customer support request or forum question, heck you could even use your FAQs as "season 1" for your screencasts &lt;img src="http://www.jroller.com/images/smileys/smile.gif" class="smiley" alt=":)" title=":)" /&gt;&lt;/p&gt; 

&lt;p class="pTitle"&gt;The Introduction&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.vimeo.com/8752541"&gt;&lt;img alt="Screencast Intro" align="right" src="/wesleyhales/resource/intro-ss.gif" style="padding:3px"/&gt;&lt;/a&gt;As an open source project manager, developer, community promoter, marketer, designer, etc… we have many hats to wear. Since I have a design background, I like to fire up After Effects, Blender, and other cool video creation programs and make a kick&amp;#45;ass intro. Most developers don't have this capability/luxury, so it's up to you on how far you want to take your intro. Typically, just some kind of view with your logo and a background image will do.&lt;/p&gt; 
&lt;p&gt;If you know how to use After Effects, or want to use the intro I created for &lt;a href="http://www.vimeo.com/8752541"&gt;this video&lt;/a&gt;, I have uploaded the &lt;a href="http://rapidshare.com/files/364251565/BridgeIntro.zip.html"&gt;source .aep&lt;/a&gt; file for you. Feel free to use whatever parts from it you want.&lt;/p&gt; 
&lt;p&gt;I also use music and different sound effects, (even extracting the vocals if necessary) to get the right effect. There are some great creative commons/open source music sources like: 
&lt;ul&gt; 
&lt;li&gt;&lt;a href="http://ccmixter.org"&gt;http://ccmixter.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jamendo.com"&gt;http://www.jamendo.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://creativecommons.org/audio/"&gt;http://creativecommons.org/audio/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://opsound.org/music"&gt;http://opsound.org/music&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt; 
I have learned to limit my intro to 10&amp;#45;15 seconds. Just something short and sweet to give your screencast some character.
&lt;/p&gt; 

&lt;p class="pTitle"&gt;The Audience&lt;/p&gt; 
&lt;p&gt;Just like writing a book or article, this may be a first time user of your project, or it may be a seasoned developer. So know your target audience. If you plan on doing a series of ongoing screencasts, definitely make your first episode at a very beginner level. This will allow you to reference it in the future with more advanced screencasts.&lt;/p&gt; 

&lt;p class="pTitle"&gt;Prerequisites&lt;/p&gt; 
&lt;p&gt;Explain the preparation steps clearly &amp;#45; environment variables, 3rd party downloads, utilities, etc.. Create a wiki or blog post listing all the requirements for users to follow along with. Show a screenshot of that article which you just created in your video before you get started.&lt;/p&gt; 

&lt;p class="pTitle"&gt;Branding&lt;/p&gt;&lt;p&gt;I always start my screencast with a view of the project home page and a brief explanation of navigation and making your way around the project site. You want to drill this page into your users head and this is the best way to do it. You may have great forums and FAQs, but your users may have a hard time finding it... this is your chance to train the community on the hard work you have put into your project.&lt;/p&gt; 

&lt;p class="pTitle"&gt;Be Realistic&lt;/p&gt; 
&lt;p&gt;Go through a dry run, but don't make it "too" perfect. You are guaranteed that many viewers will have some kind of problem while running through your demo, so when it happens to you in the screencast, don't edit it out &amp;#45; leave it. This is important because it's something every viewer can relate too. At the same time you want to keep in mind NOT to leave in your (or too many) mistakes. There is a fine line here of confusing your audience vs. letting them know that you are human and may face their same problems.&lt;/p&gt; 

&lt;p class="pTitle"&gt;Create a script (if you need it)&lt;/p&gt; 
&lt;p&gt;For some folks, adlib and free handing this kind of stuff comes natural. Not for me. While going through a dry&amp;#45;run and making sure the screen cast is going to work as planned, jot down the notes that come to mind as you're working. This is important because you will often be too focused on speaking clearly and getting your point across during the actual recording. It's nice to have a set of reminders to look at.&lt;/p&gt; 

&lt;p class="pTitle"&gt;Open Source and Commercial Tools&lt;/p&gt; 
&lt;p&gt;Onto the fun stuff, so now you have everything prepared and you're ready to start the recording. First, you need to get yourself a screen recorder and depending on your OS, I have listed a few options below.&lt;/p&gt; 

&lt;dl&gt; 
&lt;dt&gt;Mac&lt;/dt&gt; 
&lt;dd&gt;If you are lucky enough to own/use a mac for your screen casting projects then I highly recommend using &lt;a href="http://www.telestream.net/screen-flow/overview.htm"&gt;ScreenFlow&lt;/a&gt;. The intuitive UI and ease of creating powerful animations make it worth the money. Amongst all the screen casting tools available, this is hands down the best one I have seen. A trial version is available, but it will watermark your video on export.&lt;br/&gt; 
However, the very kind folks at ScreenFlow hooked me up with a coupon code for the readers of this article. It will give you 10% off the original $99 price tag, saving you $10! Use discount code &lt;strong&gt;CPN9040717399&lt;/strong&gt; to receive and extra 10% off your purchase. Thanks Christine!&lt;/dd&gt; 
&lt;dt&gt;Windows&lt;/dt&gt; 
&lt;dd&gt;I used CamStudio &lt;a href="http://sourceforge.net/projects/camstudio/"&gt;http://sourceforge.net/projects/camstudio/&lt;/a&gt; for a short project quite a few years ago, and I have no idea what is out there on the free &amp; open source scene today.&lt;/dd&gt; 
&lt;dt&gt;Linux&lt;/dt&gt; 
&lt;dd&gt;A quick google search revealed a few (mostly ffmpeg based) but I'm sure there are more out there, so please let me know in the comments if you know of a good one. 
&lt;ul&gt; 
&lt;li&gt;&lt;a href="http://live.gnome.org/Istanbul"&gt;http://live.gnome.org/Istanbul&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://xvidcap.sourceforge.net"&gt;http://xvidcap.sourceforge.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt; 
&lt;/dd&gt; 
&lt;/dl&gt; 

&lt;p class="pTitle"&gt;Here are a few more tips and recommendations for recording and publishing:&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;I bought a decent set of headphones with a microphone which seems to put me in "the zone" a bit more than using my built in laptop microphone.&lt;/li&gt; 
&lt;li&gt;&lt;img alt="" align="right" src="/wesleyhales/resource/you-video.gif"/&gt;I think it's cool to actually record video of yourself usually for the first introductory video or at the beginning when it is mostly you talking. People are not going to be watching you talk, they are watching your screen actions. Be sensible about when to use video of yourself talking.&lt;/li&gt; 
&lt;li&gt;If you mess up or get tongue tied, don't stop the recording. Just take a deep breath and allow a few noticeable seconds to pass, then start over. You will see your pause in your wave form visualizer and you can go back and cut it out when you are doing your final editing.&lt;/li&gt; 
&lt;li&gt;Keep your rate of speech just a bit above or at conversation level. I made the mistake of not keeping a script nearby in my first few videos and it is definitely noticeable that I am thinking about my next steps while I'm talking in the screencast. It's not fun to listen to and makes you sound like an amateur. 
&lt;/li&gt; 
&lt;li&gt;&lt;img alt="" align="left" src="/wesleyhales/resource/waveform.gif" style="padding:0 20px 0 0"/&gt;Cut out as much white space as you can when doing final editing and keep your screen transitions smooth when doing multiple takes or pausing while your wife screams at you to take out the trash or to answer the phone. Don't make your audience sit there while you wait for a server to start up. Cut out startups and any other tasks that are repetitive and boring. Every second counts and you don't want to end up with an hour&amp;#45;long screencast. 
&lt;/li&gt; 
&lt;li&gt;Make jokes and make fun of yourself. Sure you are offering value by allowing your viewers to get tips and tricks first hand from you &amp;#45; the expert &lt;img src="http://www.jroller.com/images/smileys/wink.gif" class="smiley" alt=";)" title=";)" /&gt; But simple entertainment and your character can increase your viewing audience, or simply make you more approachable when speaking at conferences, etc...&lt;/li&gt; 
&lt;li&gt;&lt;img alt="" align="right" src="/wesleyhales/resource/timemark.gif"/&gt;Use time&amp;#45;bookmarking features in the comments. I think this is the greatest feature of screencasting and may even replace user guides or other documentation in the future. Unfortunately, the platform (vimeo) that I use limits this feature. Youtube does a great job at it and allows you to link to a specific time, down to the second, in a video &amp;#45; even external linking is allowed. With vimeo, all you must do in the comments is find the minute/second you want to mark and insert it into the comments as (7:31) &amp;#45; with the parentheses. This tells vimeo to render a link for that marker, but the big drawback is the entire video must load first, and you cannot access this marker with a GET parameter like youtube.&lt;/li&gt; 
&lt;li&gt;And since youtube only allows 10 minutes or less for the length of your video, I have been using vimeo to publish all of my screencasts. Here are the export settings I use in &lt;a href="http://www.telestream.net/screen-flow/overview.htm"&gt;ScreenFlow&lt;/a&gt; to allow users to view my video in HD format: 
&lt;ul&gt; 
&lt;li&gt;H.264 codec&lt;/li&gt; 
&lt;li&gt;dimensions 1280×720&lt;/li&gt; 
&lt;li&gt;bit rate 3000 kbits/sec (optimized for “download”),&lt;/li&gt; 
&lt;li&gt; 
key frame every 30 frames (frame reordering on), using whatever frame rate you shot in.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/li&gt; 
&lt;li&gt;As for ScreenFlow tutorials, you can find out how to use all of the functions and features here &lt;a href="http://www.telestream.net/screen-flow/demos.htm"&gt;http://www.telestream.net/screen-flow/demos.htm&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 

&lt;p&gt;The rest is up to you. Whatever tutorial or product review you are trying to get across to your audience, remember to be punctual, upbeat, and funny! As of this writing, you can view the following screencast where I attempted to apply the concepts mentioned here &lt;a href="http://www.vimeo.com/8752541"&gt;http://www.vimeo.com/8752541&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/Pw-eokADyUM" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/the_ultimate_guide_for_developer</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/hacking_help_mode_in_seam</guid>
<title>Contextual PortletMode changes using the JBoss Portlet Bridge</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/ExQ8qQ1T6zM/hacking_help_mode_in_seam</link>
<pubDate>Thu, 10 Dec 2009 21:10:33 -0500</pubDate> 
<category>Java</category> 
<category>portal</category> 
<category>portlets</category> 
<category>seam</category> 
<description>&lt;p&gt;By default, the JSR-301/329 portlet bridge manages your navigation history during PortletMode changes. Meaning that, if the user is clicking around in the portlet "view" mode and decides to click the help icon (help mode), the user should be directed to the place where he left off in help mode - and vice versa. Of course, if the user has never been in help mode during the current session, he will go to the default help viewId.&lt;/p&gt; 
&lt;p class="pTitle"&gt;Why use portlet modes instead of javascript widgets?&lt;/p&gt; 
&lt;p&gt;First I would like to give you a little justification of the beauty of this feature. Some people will argue the point of "Why do you need different modes like, Help and Edit?", when you could add some cool "javascript of the week" that would dynamically display what you intended to present in one of the given modes. Well, you could develop your interactions either way but it really isn't a question of why. It's a question of "How?". How do you want users to interact with your applications? And since you have already made the decision to invest in a portal solution, why not use the features that are built in and that stay consistent across the entire UI? Any UI Developer or Interaction Designer will tell you that adding cool javascript widgets adds another layer of complexity and maintenance, thus adding to developer time and bottom line ROI. In addition, when you develop any servlet based application to work within a portal environment, you are properly separating your concerns when you use these modes (without even realizing it in most cases). You are presenting distinguished flows for different trains of thought and making it easier for users to accomplish the task at hand.&lt;/p&gt; 
&lt;p class="pTitle"&gt;The Usecase&lt;/p&gt; 
&lt;p&gt;Ok, off the soap box and onto the use case. Let's say your user is filling out a beloved expense report. It's probably one of his top 5 things that he loves most about his job &lt;img src="http://www.jroller.com/images/smileys/wink.gif" class="smiley" alt=";)" title=";)" /&gt; Seriously, his IT department just launched a new intranet portal using the latest and greatest &lt;a href="http://jboss.org/gatein"&gt;GateIn&lt;/a&gt; platform and they completely revamped their old Seam application that was used for expense report submissions to run as a portlet.&lt;/p&gt; 
&lt;p&gt; 
So, Joe User starts to fill out his expense report in a 6 step wizard. He gets through the first few steps and arrives at a screen asking for his cost center and other details that he has no idea about. Behold the beautiful question mark(help mode) in the top right hand corner of his portlet window! Joe clicks the button and sees exactly the information he needs, and he also sees a link at the bottom of the screen that says &amp;#8220;add this to the form&amp;#8221;. Joe clicks it, and is returned to his expense report with all of the details pre-populated in his form. Not only was the help screen easy to understand, but it was just a basic .xhtml page that can be templated and maintained by any UI developer without any special javascript kung fu. 
&lt;/p&gt; 
&lt;p&gt;The next screen (in view mode), asks him to itemize each receipt and expense. Since he took a trip to Euro-land, all of his receipts are in Euros. And since he recently just got his internet privileges suspended (and no, he won't tell us why) he has no idea what the current conversion rates are. Once again, Joe clicks the help button and is presented with a clickable table of currency options. Not only that, but the finance department has placed some important notifications on this page via CMS. Joe reads the notifications and clicks on "Euros" and is taken back to a modified input table that auto converts his itemized euro(€) values to USD($).&lt;/p&gt; 
&lt;p&gt;As you can see, these are just random examples of possibilities of detecting PortletMode changes with GateIn, Seam, and RichFaces. The real beauty of this code is detecting the actual mode change and providing contextual help. This is not currently provided by the bridge as a default behavior, so here is the code to do it:&lt;/p&gt; 
&lt;p class="pTitle"&gt;The Code&lt;/p&gt; 
&lt;p&gt;First create a simple session bean with the following code. This will allow us to get a handle on the current mode.&lt;/p&gt; 
&lt;code&gt;&lt;pre&gt; 

&lt;a name="l46"&gt; &lt;span class="s2"&gt;private &lt;/span&gt;&lt;span class="s1"&gt;String mode; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l47"&gt; 
&lt;/a&gt;&lt;a name="l48"&gt; &lt;span class="s2"&gt;public &lt;/span&gt;&lt;span class="s1"&gt;String getMode() 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l49"&gt; { 
&lt;/a&gt;&lt;a name="l50"&gt; Object responseObject = FacesContext.getCurrentInstance().getExternalContext().getRequest();
&lt;/a&gt;&lt;a name="l51"&gt; &lt;span class="s2"&gt;if &lt;/span&gt;&lt;span class="s1"&gt;(responseObject &lt;/span&gt;&lt;span class="s2"&gt;instanceof &lt;/span&gt;&lt;span class="s1"&gt;RenderRequest) { 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l52"&gt; RenderRequest renderRequest = (RenderRequest)responseObject; 
&lt;/a&gt;&lt;a name="l53"&gt; &lt;span class="s2"&gt;if&lt;/span&gt;&lt;span class="s1"&gt;(renderRequest.getPortletMode().toString().equals(mode)){ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l54"&gt; mode = &lt;span class="s2"&gt;null&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l55"&gt; }&lt;span class="s2"&gt;else&lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l56"&gt; mode = renderRequest.getPortletMode().toString(); 
&lt;/a&gt;&lt;a name="l57"&gt; } 

&lt;/a&gt;&lt;a name="l58"&gt; } 
&lt;/a&gt;&lt;a name="l59"&gt; &lt;span class="s2"&gt;return &lt;/span&gt;&lt;span class="s1"&gt;mode; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l60"&gt; } 
&lt;/a&gt;&lt;a name="l61"&gt; 
&lt;/a&gt;&lt;a name="l62"&gt; &lt;span class="s2"&gt;public &lt;/span&gt;&lt;span class="s1"&gt;String getFromView() { 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l63"&gt; PortletSession portletSession = (PortletSession)FacesContext.getCurrentInstance().getExternalContext().getSession(&lt;span class="s2"&gt;false&lt;/span&gt;&lt;span class="s1"&gt;); 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l64"&gt; String viewId = (String)portletSession.getAttribute(&lt;span class="s4"&gt;"javax.portlet.faces.viewIdHistory.view"&lt;/span&gt;&lt;span class="s1"&gt;); 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l65"&gt; viewId = viewId.substring(&lt;span class="s5"&gt;0&lt;/span&gt;&lt;span class="s1"&gt;,viewId.indexOf(&lt;/span&gt;&lt;span class="s4"&gt;"?"&lt;/span&gt;&lt;span class="s1"&gt;)); 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l66"&gt; &lt;span class="s2"&gt;return &lt;/span&gt;&lt;span class="s1"&gt;viewId; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l67"&gt; } 
&lt;/a&gt;&lt;a name="l68"&gt; 
&lt;/a&gt;&lt;a name="l69"&gt; &lt;span class="s2"&gt;public void &lt;/span&gt;&lt;span class="s1"&gt;setMode(String mode) 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l70"&gt; { 

&lt;/a&gt;&lt;a name="l71"&gt; &lt;span class="s2"&gt;this&lt;/span&gt;&lt;span class="s1"&gt;.mode = mode; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l72"&gt; } 
&lt;/a&gt; 

&lt;/pre&gt;&lt;/code&gt; 
&lt;p class="pTitle"&gt;Next add something similar to this in pages.xml&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt; 
&lt;a name="l8"&gt; &lt;span class="s2"&gt;&lt;&lt;/span&gt;&lt;span class="s5"&gt;page &lt;/span&gt;&lt;span class="s1"&gt;view-id=&lt;/span&gt;&lt;span class="s3"&gt;"/expenseWizard/*" &lt;/span&gt;&lt;span class="s1"&gt;action=&lt;/span&gt;&lt;span class="s3"&gt;"#{mode.getMode()}"&lt;/span&gt;&lt;span class="s2"&gt;&gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l9"&gt; &lt;span class="s2"&gt;&lt;&lt;/span&gt;&lt;span class="s5"&gt;navigation&lt;/span&gt;&lt;span class="s2"&gt;&gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l10"&gt; &lt;span class="s2"&gt;&lt;&lt;/span&gt;&lt;span class="s5"&gt;rule &lt;/span&gt;&lt;span class="s1"&gt;if-outcome=&lt;/span&gt;&lt;span class="s3"&gt;"help" &lt;/span&gt;&lt;span class="s1"&gt;if=&lt;/span&gt;&lt;span class="s3"&gt;"#{mode.getFromView() == '/expenseWizard/step3.xhtml'}"&lt;/span&gt;&lt;span class="s2"&gt;&gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l11"&gt; &lt;span class="s2"&gt;&lt;&lt;/span&gt;&lt;span class="s5"&gt;render &lt;/span&gt;&lt;span class="s1"&gt;view-id=&lt;/span&gt;&lt;span class="s3"&gt;"/helpPages/step3help.xhtml"&lt;/span&gt;&lt;span class="s2"&gt;/&gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l12"&gt; &lt;span class="s2"&gt;&lt;/&lt;/span&gt;&lt;span class="s5"&gt;rule&lt;/span&gt;&lt;span class="s2"&gt;&gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l13"&gt; &lt;span class="s2"&gt;&lt;&lt;/span&gt;&lt;span class="s5"&gt;rule &lt;/span&gt;&lt;span class="s1"&gt;if-outcome=&lt;/span&gt;&lt;span class="s3"&gt;"help" &lt;/span&gt;&lt;span class="s1"&gt;if=&lt;/span&gt;&lt;span class="s3"&gt;"#{mode.getFromView() == '/expenseWizard/step4.xhtml'}"&lt;/span&gt;&lt;span class="s2"&gt;&gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l14"&gt; &lt;span class="s2"&gt;&lt;&lt;/span&gt;&lt;span class="s5"&gt;render &lt;/span&gt;&lt;span class="s1"&gt;view-id=&lt;/span&gt;&lt;span class="s3"&gt;"/helpPages/step4help.xhtml"&lt;/span&gt;&lt;span class="s2"&gt;/&gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l15"&gt; &lt;span class="s2"&gt;&lt;/&lt;/span&gt;&lt;span class="s5"&gt;rule&lt;/span&gt;&lt;span class="s2"&gt;&gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l16"&gt; &lt;span class="s2"&gt;&lt;/&lt;/span&gt;&lt;span class="s5"&gt;navigation&lt;/span&gt;&lt;span class="s2"&gt;&gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l17"&gt; &lt;span class="s2"&gt;&lt;/&lt;/span&gt;&lt;span class="s5"&gt;page&lt;/span&gt;&lt;span class="s2"&gt;&gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/ExQ8qQ1T6zM" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/hacking_help_mode_in_seam</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/creating_another_firefox_theme</guid>
<title>Creating (another) Firefox Theme</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/cKJI2prE6J0/creating_another_firefox_theme</link>
<pubDate>Sun, 22 Nov 2009 10:50:58 -0500</pubDate> 
<category>Java</category> 
<category>firefox</category> 
<description>&lt;a href="http://www.jroller.com/wesleyhales/resource/recovery/ff3-theme-new-h-small.jpg"&gt;&lt;img src="http://www.jroller.com/wesleyhales/resource/recovery/ff3-theme-new-h-small.jpg" style="margin:5px;" align="right"/&gt;&lt;/a&gt; 
&lt;p&gt;I started laying down ideas for a new Firefox theme a few months ago and this is what emerged. I'm not sure why I can't stay away from the darker themes. Maybe it's the richness that black (and darker colors) allows on a monitor, but I tried to stay as far away from mainstream design on this as I could. I have already coded this into a downloadable theme, but I am still working out some glitches. Then I have to let it sit in the Mozilla incubator, as I did with ANTHEM.&lt;/p&gt; 
&lt;p&gt;Speaking of ANTHEM, I'm quite surprised that it has done so well. 780k downloads and counting in 1 year. But it is all in vain if I can't "supply more blood" to this living organ (As &lt;a href="http://www.jroller.com/robwilliams/"&gt;Rob W.&lt;/a&gt; likes to put it.) With that said, I'm thinking about starting an open source project for these themes, because quite honestly, I don't have time to &lt;a href="http://www.jroller.com/wesleyhales/entry/creating_a_firefox_3_theme"&gt;fix the bugs&lt;/a&gt;. Anybody wanna help? Comment with your email...&lt;/p&gt; 
&lt;br/&gt; 
&lt;a href="http://www.jroller.com/wesleyhales/resource/recovery/ff3-theme-new-h-bg.jpg"&gt;&lt;img src="http://www.jroller.com/wesleyhales/resource/recovery/ff3-theme-new-h-bg-icon.jpg" style="" border="0"/&gt;&lt;/a&gt; 
&lt;br/&gt; 
&lt;br/&gt; 
&lt;a href="http://www.jroller.com/wesleyhales/resource/recovery/ff3-theme-new-f.jpg"&gt;&lt;img src="http://www.jroller.com/wesleyhales/resource/recovery/ff3-theme-new-f.jpg" style="margin:5px;" align="right"/&gt;&lt;/a&gt;
&lt;p&gt;I have been a bit indecisive about the the background on the toolbar on this one. What do you think? The first one at the top, or this one... &lt;/p&gt; 

&lt;br/&gt; 
&lt;br/&gt; 
&lt;br/&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/cKJI2prE6J0" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/creating_another_firefox_theme</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/growl_for_webapps</guid>
<title>Replacing FacesMessages with Growl alerts</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/knyoBOoyLKQ/growl_for_webapps</link>
<pubDate>Mon, 10 Aug 2009 06:03:00 -0400</pubDate> 
<category>Java</category> 
<category>2.0</category> 
<category>growl</category> 
<category>jsf</category> 
<category>richfaces</category> 
<description>&lt;p&gt;I saw a tweet from(&lt;a href="http://twitter.com/maxandersen"&gt;@maxandersen&lt;/a&gt;) the other day and decided to try adding Growl like messages in a standard JSF/Richfaces application using jGrowl. It is quite simple and my approach could definitely be improved upon.&lt;/p&gt; 
&lt;p&gt;This is really just javascript on the front end and can be used with any backend message generating system.&lt;/p&gt; 

&lt;p class="pTitle"&gt;Code Used:&lt;/p&gt; 
&lt;p&gt; 
&lt;ul&gt; 
&lt;li&gt;&lt;a href="http://jboss.org/jbossrichfaces/"&gt;RichFaces 3.3.1.GA&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="http://stanlemon.net/projects/jgrowl.html"&gt;jGrowl (latest)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/p&gt; 

&lt;p class="pTitle"&gt;Include the scripts in the head:&lt;/p&gt; 
&lt;p&gt; 
Note the loading of jquery in the Richfaces page... 
&lt;code&gt;&lt;pre&gt; 
&lt;a name="l1"&gt;&lt;span class="s0"&gt; 
&lt;a name="l5"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;a4j:loadScript &lt;/span&gt;&lt;span class="s3"&gt;src=&lt;/span&gt;&lt;span class="s4"&gt;&amp;quot;resource://jquery.js&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;link &lt;/span&gt;&lt;span class="s3"&gt;rel=&lt;/span&gt;&lt;span class="s4"&gt;&amp;quot;stylesheet&amp;quot; &lt;/span&gt;&lt;span class="s3"&gt;href=&lt;/span&gt;&lt;span class="s4"&gt;&amp;quot;/css/jquery-plugins/jquery.jgrowl.css&amp;quot; &lt;/span&gt;&lt;span class="s3"&gt;type=&lt;/span&gt;&lt;span class="s4"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;a name="l4"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;script &lt;/span&gt;&lt;span class="s3"&gt;type=&lt;/span&gt;&lt;span class="s4"&gt;&amp;quot;text/javascript&amp;quot; &lt;/span&gt;&lt;span class="s3"&gt;src=&lt;/span&gt;&lt;span class="s4"&gt;&amp;quot;/js/jquery-plugins/jquery.jgrowl.js&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s2"&gt;script&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;span class="s0"&gt; 
&lt;/span&gt; &lt;/span&gt;&lt;/a&gt; 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 

&lt;p class="pTitle"&gt;Write a simple script to extract the message:&lt;/p&gt; 
&lt;p&gt; 
... and add any customizations you may need to jGrowl. One thing to take note of here is that you cannot use the $ sign for jQuery in a Richfaces app. This is because of the RF framework using prototype.js by default and it too uses the $ sign. So every 3rd party jQuery script that you use, you must s/$/jQuery/g (find and replace all usages of '$' with 'jQuery') 
&lt;code&gt;&lt;pre&gt; 
function showError() 
{ 
jQuery.jGrowl.defaults.position = 'center'; 
if (document.getElementById('errorMessage') != null) 
{ 
jQuery.jGrowl(jQuery('#errorMessage').html(), { 
sticky: false, 
life: 10000 
}) 
} 
} 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 

&lt;p class="pTitle"&gt;And tell the script to run after page load:&lt;/p&gt; 
&lt;p&gt; 
jQuery has a simple statement that checks the document and waits until it's ready to be manipulated, known as the ready event: 
&lt;code&gt;&lt;pre&gt; 
$(document).ready(function(){ 
showError(); 
}); 

&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 

&lt;p&gt;Here is a live screen shot of the script in action using a generate h:message. 
&lt;img src="http://jroller.com/wesleyhales/resource/jgrowl.gif" align="center"/&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/knyoBOoyLKQ" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/growl_for_webapps</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/unordered_tab_menus_cross_browser</guid>
<title>ul horizontal tab menus, cross browser, with no hacks</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/GjKdxUhYGvw/unordered_tab_menus_cross_browser</link>
<pubDate>Thu, 28 May 2009 15:57:53 -0400</pubDate> 
<category>Java</category> 
<description>&lt;p&gt;There are too many times when I need a nice horizontal tab menu, using semantic html, and with cool graphics all at the same time. So this post is more for my personal reference and will shave a few hours off any ones html prototype. This is cross browser valid css 2.1 on IE6, IE7, FF3, Chrome and Safari without using any hacks.&lt;/p&gt; 

&lt;p&gt;The end result: 
&lt;img src="http://jroller.com/wesleyhales/resource/tabs.jpg" alt=""/&gt;&lt;/p&gt; 
&lt;style type="text/css"&gt; 
.ln { color: rgb(0,0,0); font-weight: normal; font-style: normal; } 
.s0 { color: rgb(0,0,128); font-weight: bold; } 
.s1 { } 
.s2 { color: rgb(0,0,255); font-weight: bold; } 
.s3 { color: rgb(0,0,255); } 
.s4 { color: #4c5d89; font-weight: bold; } 
.s5 { color: rgb(128,128,128); font-style: italic; } 
&lt;/style&gt; 
&lt;p&gt;To start with, here is the css: 
&lt;pre&gt; 
&lt;a name="l151"&gt;&lt;/span&gt;&lt;span class="s5"&gt;/*----------------------Navigation*/&lt;/span&gt;&lt;span class="s1"&gt; 

&lt;a name="l152"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l153"&gt; &lt;/span&gt;&lt;span class="s2"&gt;margin&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;45&lt;/span&gt;&lt;span class="s4"&gt;px &lt;/span&gt;&lt;span class="s3"&gt;0 0 236&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l154"&gt; &lt;/span&gt;&lt;span class="s2"&gt;white-space&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;nowrap&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l155"&gt; &lt;/span&gt;&lt;span class="s2"&gt;display&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;inline&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l156"&gt; &lt;/span&gt;&lt;span class="s2"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;left&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l157"&gt;} 
&lt;a name="l158"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l159"&gt;&lt;/span&gt;&lt;span class="s5"&gt;/*setup the container for tab divs*/&lt;/span&gt;&lt;span class="s1"&gt; 
&lt;a name="l160"&gt; &lt;/span&gt;&lt;span class="s2"&gt;list-style&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;none&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l161"&gt; &lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;28&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l162"&gt; &lt;/span&gt;&lt;span class="s2"&gt;display&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;inline&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l163"&gt; &lt;/span&gt;&lt;span class="s2"&gt;font-size&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;1.2&lt;/span&gt;&lt;span class="s4"&gt;em&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l164"&gt; &lt;/span&gt;&lt;span class="s2"&gt;margin&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;0&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l165"&gt; &lt;/span&gt;&lt;span class="s2"&gt;position&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;relative&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l166"&gt;} 
&lt;a name="l167"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li div &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l168"&gt;&lt;/span&gt;&lt;span class="s5"&gt;/*float all divs containing tab images left*/&lt;/span&gt;&lt;span class="s1"&gt; 
&lt;a name="l169"&gt; &lt;/span&gt;&lt;span class="s2"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;left&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l170"&gt;} 
&lt;a name="l171"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav a &lt;/span&gt;&lt;span class="s1"&gt;{
&lt;a name="l172"&gt; &lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s0"&gt;#777&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l173"&gt; &lt;/span&gt;&lt;span class="s2"&gt;text-decoration&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;none&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l174"&gt; &lt;/span&gt;&lt;span class="s2"&gt;font-weight&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;700&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l175"&gt;} 
&lt;a name="l176"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;selected div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab-main a &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l177"&gt; &lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s0"&gt;#fff&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l178"&gt;} 
&lt;a name="l179"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l180"&gt; &lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;28&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l181"&gt; &lt;/span&gt;&lt;span class="s5"&gt;/*-5 on margin will give us the overlap look*/&lt;/span&gt;&lt;span class="s1"&gt; 
&lt;a name="l182"&gt; &lt;/span&gt;&lt;span class="s2"&gt;margin&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;0 &lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="s3"&gt;5&lt;/span&gt;&lt;span class="s4"&gt;px &lt;/span&gt;&lt;span class="s3"&gt;0 0&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l183"&gt;} 
&lt;a name="l184"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab-main&lt;/span&gt;&lt;span class="s1"&gt;, 
&lt;a name="l185"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;selected div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab-main &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l186"&gt; &lt;/span&gt;&lt;span class="s2"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;left&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l187"&gt; &lt;/span&gt;&lt;span class="s2"&gt;padding&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;5&lt;/span&gt;&lt;span class="s4"&gt;px &lt;/span&gt;&lt;span class="s3"&gt;15&lt;/span&gt;&lt;span class="s4"&gt;px &lt;/span&gt;&lt;span class="s3"&gt;0 10&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l188"&gt; &lt;/span&gt;&lt;span class="s2"&gt;text-align&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;center&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l189"&gt; &lt;/span&gt;&lt;span class="s2"&gt;margin&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;0 &lt;/span&gt;&lt;span class="s4"&gt;auto &lt;/span&gt;&lt;span class="s3"&gt;0 &lt;/span&gt;&lt;span class="s4"&gt;auto&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l190"&gt;} 
&lt;a name="l191"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;last&lt;/span&gt;&lt;span class="s1"&gt;, 
&lt;a name="l192"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;selected div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab-last div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;last &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l193"&gt; &lt;/span&gt;&lt;span class="s2"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;left&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l194"&gt; &lt;/span&gt;&lt;span class="s2"&gt;padding&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;5&lt;/span&gt;&lt;span class="s4"&gt;px &lt;/span&gt;&lt;span class="s3"&gt;10&lt;/span&gt;&lt;span class="s4"&gt;px &lt;/span&gt;&lt;span class="s3"&gt;0 10&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l195"&gt; &lt;/span&gt;&lt;span class="s2"&gt;text-align&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;center&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l196"&gt; &lt;/span&gt;&lt;span class="s2"&gt;margin&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;0 &lt;/span&gt;&lt;span class="s4"&gt;auto &lt;/span&gt;&lt;span class="s3"&gt;0 &lt;/span&gt;&lt;span class="s4"&gt;auto&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l197"&gt;} 
&lt;a name="l198"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;inactive div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab-main &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l199"&gt; &lt;/span&gt;&lt;span class="s2"&gt;background&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s0"&gt;url&lt;/span&gt;&lt;span class="s1"&gt;(&lt;/span&gt;&lt;span class="s4"&gt;../images/nav/nav-bg-center-inactive.gif&lt;/span&gt;&lt;span class="s1"&gt;) &lt;/span&gt;&lt;span class="s4"&gt;repeat-x left top&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l200"&gt; &lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;28&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l201"&gt;} 
&lt;a name="l202"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;inactive div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab-left &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l203"&gt; &lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;2&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l204"&gt; &lt;/span&gt;&lt;span class="s2"&gt;background&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s0"&gt;url&lt;/span&gt;&lt;span class="s1"&gt;(&lt;/span&gt;&lt;span class="s4"&gt;../images/nav/nav-bg-left-inactive.gif&lt;/span&gt;&lt;span class="s1"&gt;) &lt;/span&gt;&lt;span class="s4"&gt;no-repeat left top&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l205"&gt; &lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;28&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l206"&gt;} 
&lt;a name="l207"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;inactive div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab-right &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l208"&gt; &lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;2&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l209"&gt; &lt;/span&gt;&lt;span class="s2"&gt;background&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s0"&gt;url&lt;/span&gt;&lt;span class="s1"&gt;(&lt;/span&gt;&lt;span class="s4"&gt;../images/nav/nav-bg-right-inactive.gif&lt;/span&gt;&lt;span class="s1"&gt;) &lt;/span&gt;&lt;span class="s4"&gt;no-repeat right top&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l210"&gt; &lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;28&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l211"&gt;} 
&lt;a name="l212"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;selected div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab-main &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l213"&gt; &lt;/span&gt;&lt;span class="s2"&gt;background&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s0"&gt;url&lt;/span&gt;&lt;span class="s1"&gt;(&lt;/span&gt;&lt;span class="s4"&gt;../images/nav/nav-bg-center-active.gif&lt;/span&gt;&lt;span class="s1"&gt;) &lt;/span&gt;&lt;span class="s4"&gt;repeat-x left top&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l214"&gt; &lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;28&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l215"&gt;} 
&lt;a name="l216"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;selected div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab-left &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l217"&gt; &lt;/span&gt;&lt;span class="s2"&gt;background&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;transparent &lt;/span&gt;&lt;span class="s0"&gt;url&lt;/span&gt;&lt;span class="s1"&gt;(&lt;/span&gt;&lt;span class="s4"&gt;../images/nav/nav-bg-left-active.gif&lt;/span&gt;&lt;span class="s1"&gt;) &lt;/span&gt;&lt;span class="s4"&gt;no-repeat left top&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l218"&gt; &lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;4&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l219"&gt; &lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;28&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l220"&gt;} 
&lt;a name="l221"&gt;&lt;/span&gt;&lt;span class="s0"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;nav-container ul&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;primary-nav li&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;selected div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab div&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="s0"&gt;tab-right &lt;/span&gt;&lt;span class="s1"&gt;{ 
&lt;a name="l222"&gt; &lt;/span&gt;&lt;span class="s2"&gt;background-image&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s0"&gt;url&lt;/span&gt;&lt;span class="s1"&gt;(&lt;/span&gt;&lt;span class="s4"&gt;../images/nav/nav-bg-right-active.gif&lt;/span&gt;&lt;span class="s1"&gt;); 
&lt;a name="l223"&gt; &lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;4&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
&lt;a name="l224"&gt; &lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;28&lt;/span&gt;&lt;span class="s4"&gt;px&lt;/span&gt;&lt;span class="s1"&gt;; 
}&lt;/span&gt; 
&lt;/pre&gt; 
&lt;/p&gt; 

&lt;p&gt;And finally the html: 
&lt;code&gt;&lt;pre&gt; 
&lt;a name="l31"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nav-container&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l32"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;ul &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;primary-nav &amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l33"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;li &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;selected&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l34"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l35"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-left&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l36"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-main&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;a &lt;/span&gt;&lt;span class="s1"&gt;href=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;Home&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;a&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l37"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-right&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l38"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l39"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;li&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l40"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;li &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;inactive&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l41"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l42"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-left&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l43"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-main&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;a &lt;/span&gt;&lt;span class="s1"&gt;href=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;Profile&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;a&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l44"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-right&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l45"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l46"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;li&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l47"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;li &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;inactive&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l48"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l49"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-left&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l50"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-main&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;a &lt;/span&gt;&lt;span class="s1"&gt;href=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;About Us&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;a&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l51"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-right&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l52"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l53"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;li&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l54"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;li &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;inactive&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l55"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l56"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-left&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l57"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-main last&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;a &lt;/span&gt;&lt;span class="s1"&gt;href=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;Help&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;a&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l58"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tab-right&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l59"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l60"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;li&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l61"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;ul&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l62"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;a name="l63"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt; 

&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/GjKdxUhYGvw" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/unordered_tab_menus_cross_browser</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/recovering_deleted_files_from_windows</guid>
<title>Recovering deleted files from Windows and Linux... and a little forensics</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/JK0edC8muu0/recovering_deleted_files_from_windows</link>
<pubDate>Sun, 1 Mar 2009 21:43:40 -0500</pubDate> 
<category>Utils</category> 
<category>file</category> 
<category>forensics</category> 
<category>recovery</category> 
<category>undelete</category> 
<description>&lt;p&gt;I got one of those "tech support" phone calls from a family member this weekend, asking if I could help him undelete some files that were deleted by some ghost that snuck into his office ;) You gotta love it when people say they have no idea how an entire folder got deleted and they swear they've been hacked.&lt;/p&gt; 
&lt;p&gt;So I scoured the web to see what exists. For *nix based utils, I think &lt;A href="http://www.sleuthkit.org/"&gt;sleuthkit&lt;/a&gt; with the autopsy forensics browser is the best out there (that's open source).&lt;/p&gt; 
&lt;p&gt;But of course this user was on a Windows box. I finally found a really nice free tool for recovering files from NTFS. &lt;a href="http://ntfsundelete.com/"&gt;NTFSUndelete&lt;/a&gt; does exactly what the titles says. Saved the day for me and the person who "got hacked" ;) &lt;/p&gt; 
&lt;p&gt;One other really cool forensics tool I ran across was &lt;a href="http://www.e-fense.com/products.php"&gt;Helix&lt;/a&gt; from a company called e-fence. This is really powerful stuff and the guys from hak5 actually did a &lt;a href="http://www.hak5.org/episodes/episode-413"&gt;segment&lt;/a&gt; on how to use the tool in one of their episodes.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/JK0edC8muu0" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/recovering_deleted_files_from_windows</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/how_to_make_money_off</guid>
<title>How to make money off of a Firefox theme (or not)</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/4gwJoH0_RhM/how_to_make_money_off</link>
<pubDate>Tue, 24 Feb 2009 13:39:48 -0500</pubDate> 
<category>Java</category> 
<category>firefox</category> 
<category>theme</category> 
<description>&lt;p&gt;This weekend was quite an eye opener for me. Since the first public release of &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/9627/"&gt;ANTHEM&lt;/a&gt; (my Firefox 3 theme), I have been trying to think of a way to monetize the downloads. Not really looking for a way to get rich, but a way to take advantage of, as of today, a theme that has been downloaded almost 500,000 times.&lt;/p&gt; 
&lt;p&gt;I started out with a Paypal donate button which helped a little, but wasn't really doing what I wanted. Then, I got the idea of adding a sponsor logo somewhere in the top banner like this (see top right corner):&lt;a href="http://www.jroller.com/wesleyhales/resource/anthem-sponsor-large.png"&gt;&lt;img src="http://www.jroller.com/wesleyhales/resource/anthem-sponsor-small.png" alt="" align="right"/&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;So I made the change and uploaded the new theme to the Mozilla Developer area. The next morning I awake to tons of emails and reviews on the Mozilla site with some seriously pissed off users. I knew I may get a little fallout, but not quite this bad. I guess I am guilty of falling prey to the big company mindset of caring about $$ more than the users of my product. But like I said on the Mozilla site, this was purely an experiment and the advertisement has been removed per the latest version (1.5.2).&lt;/p&gt; 
&lt;p&gt;Today I received a message which is truly a great idea and I can't believe I did not think of it: 
&lt;quote&gt;&lt;pre&gt; 
Mate, 

Excellent skin! That's been said many times but I saw something new 
today that you gave away for free (and was a great opportunity!) 
Donating without cause never gets a response (although it needs to 
for the sake of others), but I think if you said people needed to
donate 50c to remove the advert, you'd be buying my motorcycles by 
now, and by the dozen J. 

All the best, 

The Convicts 
&lt;/pre&gt;&lt;/quote&gt; 
Thank you Convict and all the best to your motorcycle company. Hopefully I will be able to buy one soon!&lt;/p&gt; 

&lt;p&gt;I think I will either develop another skin much better than ANTHEM, or I may just work for free for the rest of my life and die a poor (but appreciated) man. I think it's easier to get into Heaven if we die poor, right? Ah, the life of open source. To me it really is worth it to use your talent and provide something that makes people's life better. I don't care what anybody says, you get it back (and usually doubled) at some point in your life.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/4gwJoH0_RhM" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/how_to_make_money_off</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/jboss_portlet_bridge_beta_6</guid>
<title>JBoss Portlet Bridge Beta 6 Released!</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/wipVsSTcx1A/jboss_portlet_bridge_beta_6</link>
<pubDate>Sun, 25 Jan 2009 20:42:09 -0500</pubDate> 
<category>Java</category> 
<category>bridge</category> 
<category>jsf</category> 
<category>portlet</category> 
<description>Read about it here: &lt;a href="http://blog.jboss-portal.org/2009/01/jboss-portlet-bridge-beta-6-released.html"&gt;http://blog.jboss-portal.org/2009/01/jboss-portlet-bridge-beta-6-released.html&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/wipVsSTcx1A" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/jboss_portlet_bridge_beta_6</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/2_years_of_blogging_about</guid>
<title>2 years of blogging about java and my life, now what?</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/RbtX4ZEgTWU/2_years_of_blogging_about</link>
<pubDate>Sun, 7 Dec 2008 17:59:29 -0500</pubDate> 
<category>Life</category> 
<description>&lt;p&gt;It has been 2 years since I decided to write my first blog post and I am pretty happy I did so. When I first tossed the idea around about it (and this was back in 2006) I was thinking, man, blogging is so 2002 and why would anybody want to read about stuff I'm doing. But much to my surprise, starting a blog is one of the best things I could've done. Much better than joining any social network by far, and much better than thinking future employers will take my resume at face value.&lt;/p&gt; 
&lt;p&gt;This year has been incredible, moving so fast that I have hardly had time to sit back and reflect. With around 30,000 total unique visitors since this time last year, &lt;a href="http://www.jroller.com/page/wesleyhales/?anchor=richfaces_loading_modal_with_a4j"&gt;a4j:status&lt;/a&gt;, &lt;a href="http://www.jroller.com/page/wesleyhales/?anchor=maven_2_vs_ant_revisited"&gt;maven vs ant&lt;/a&gt;, &lt;a href="http://www.jroller.com/page/wesleyhales/?anchor=jsf_component_developmment_with_the"&gt;richfaces cdk&lt;/a&gt;, &lt;a href="http://www.jroller.com/page/wesleyhales/?anchor=converting_xhtml_to_pdf_or"&gt;xhtml to pdf&lt;/a&gt;, and &lt;a href="http://www.jroller.com/page/wesleyhales/?anchor=running_seam_2_0_on"&gt;seam tomcat&lt;/a&gt; are the top 5 keywords driving traffic. 
&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/RbtX4ZEgTWU" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/2_years_of_blogging_about</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/anthem_reaches_15_000_in</guid>
<title>ANTHEM reaches 15,000 in its first week</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/N8gSUx6hATM/anthem_reaches_15_000_in</link>
<pubDate>Sun, 30 Nov 2008 16:11:11 -0500</pubDate> 
<category>Life</category> 
<category>anthem</category> 
<category>firefox</category> 
<category>god</category> 
<category>jesus</category> 
<description>&lt;p&gt;I recently created a &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/9627"&gt;Firefox 3 theme&lt;/a&gt; out of curiosity and because I love to try new things that deal with design. Much to my surprise, &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/9627"&gt;ANTHEM&lt;/a&gt; has been receiving a lot of attention over the past week since it has been released publicly on Mozilla.org. ANTHEM is named so because I consider it a hymn of praise or loyalty to my worshipful savior &lt;a href="http://www.allaboutgod.com/how-to-be-saved.htm"&gt;Jesus Christ&lt;/a&gt;. I also consider it dedicated to my newborn son, my wonderful wife, and the woman who raised me to be the man I am, my beautiful mother. I know, it may sound funny that I am using a Firefox theme for all of this, and I tend to keep my religious/personal views out of the work place, but I always tell God "...the more fame I receive, I will try my best to glorify you..." So here it is, a song of praise, in its own sense.&lt;/p&gt; 
&lt;br/&gt; 
&lt;p&gt;In ANTHEM's first week, it has received over 15,000 downloads and ranks in the top 10 of the most downloaded themes for Firefox.&lt;/p&gt; 
&lt;br/&gt; 
&lt;p&gt;Visit the project page here: &lt;a href="http://addons.mozilla.org/addon/9627"&gt;http://addons.mozilla.org/addon/9627&lt;/a&gt; &lt;/p&gt; 
&lt;br/&gt; 
&lt;br/&gt; 
SO MOTE IT BE&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/N8gSUx6hATM" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/anthem_reaches_15_000_in</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/ajaxworld_west_08_recap</guid>
<title>AjaxWorld West '08 Recap</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/zr1OV_dM-A8/ajaxworld_west_08_recap</link> 
<pubDate>Wed, 22 Oct 2008 13:23:44 -0400</pubDate> 
<category>Java</category> 
<category>ajaxworld</category> 
<description>&lt;p&gt;This week, I attended/spoke at the &lt;a href="http://ajaxworld.com/"&gt;AjaxWorld&lt;/a&gt; conference in San Jose. The cool thing for me is that this was my &lt;a href="http://www.slideshare.net/wesleyhales/ajax-in-enterprise-portals-presentation/"&gt;first public speaking appearance&lt;/a&gt;. This leads to another notch in my belt of professional development and evangelism. I really got a lot out of the conference because I was able to meet quite a few people that I have known but never actually met in person. On that note, all of the exhibitors and speakers at the conference were very welcoming to form alliances and work together to help each other out.&lt;/p&gt; 
&lt;p&gt;I was able to pull &lt;a href="http://chrisschalk.com/blog/"&gt;Chris Schalk&lt;/a&gt; aside and talk to him about how we can incorporate OpenSocial/Shindig into JBoss Portal. I also wanted to get a good understanding of exactly what ShinDig is doing. My idea is to make a service available via some js lib and leverage one of the huge bullet points of portals... Personalization. With social capabilities in portal, users activities (like updating a wiki article) can be published to their "group" - how you define the group can be done systematically via existing infrastructure or letting users subscribe to social groups. For now, this is just a bunch crazy ideas flying around, I need to get something coded.&lt;/p&gt; 
&lt;p&gt;I talked to Ted Goddard and Steve Maryka from &lt;a href="http://www.icefaces.org/main/home/index.jsp"&gt;IceFaces&lt;/a&gt;, and they seemed very excited about getting IceFaces support into the JBoss 301 bridge. Maybe we can squeeze it into the &lt;a href="http://www.jboss.org/portletbridge/"&gt;JBoss Portlet Bridge&lt;/a&gt; GA.&lt;/p&gt; 
&lt;p&gt;Jonas Jacobi and John Fallows presented some &lt;a href="http://www.kaazing.com/content/view/57/93/"&gt;very cool technology&lt;/a&gt; that I would also like to prototype into JBoss Portal. WebSockets, Server Side Events, and full-duplex communication between various protocols is another up and coming tech that I really want to play around with and see where it would be a good fit in portals.&lt;/p&gt; 
&lt;p&gt;I hung out with Matt Quilan from &lt;a href="http://www.appcelerator.org/index.html"&gt;Appcelerator&lt;/a&gt; and soon to be employee of {company_name_here}. I see where Appcelerator is going and if they can hook up with the something like the guys from nextDB.net are doing, I think it could be something cool.&lt;/p&gt; 
&lt;p&gt;During the open bar (and after a few beers), I got a chance to talk to Geoff from &lt;a href="http://nextdb.net/"&gt;nextDB.net&lt;/a&gt;. These guys are thinking on a fairly radical level and I like it. I think people forget the power of small-medium sized business market websites. I joked with the guys about reading 2600 and their product is just screaming "Hack Me" and I hope they push it to the limits to show their front-end encryption really is secure to hold vital customer info. Maybe they will show up at the next DefCon wearing a "I dare you to Hack Me" t-shirt.&lt;/p&gt; 
&lt;p&gt;Last but not least, thanks to all the people who showed up and withstood my portal presentation. I learned a lot, and judging from the folks that asked the questions during Q&amp;A I feel pretty good about it. Out of all the presentations I went to, mine had the most questions at the end... don't know if that's good or bad ;)&lt;/p&gt; 
&lt;p&gt;I guess the more you put into meeting people and talking to them, the more you get out of conferences like this. Some of the folks I talked to thought the turnout was a little scarce, and that is probably just a sign of the times. Overall I had a good time and met some good people.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/zr1OV_dM-A8" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/ajaxworld_west_08_recap</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/ajax_in_enterprise_portals</guid>
<title>AJAX in Enterprise Portals at AjaxWorld</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/nIEIRqcCa3Y/ajax_in_enterprise_portals</link>
<pubDate>Sun, 19 Oct 2008 21:41:45 -0400</pubDate> 
<category>Java</category> 
<category>ajax</category> 
<category>enterprise</category> 
<category>portals</category> 
<description>&lt;p&gt;I will be giving a presentation for the AjaxWorld conference Tuesday at 5:00 on Ajax in Enterprise Portals. If you are here in San Jose, don't be a stranger! 
&lt;br/&gt; 
Check out the sessions &lt;a href="http://ajaxworld.com/general/sessions1008.htm"&gt;here&lt;/a&gt;.
&lt;/p&gt; 
&lt;p&gt;**Update with slides: 
&lt;div style="width:425px;text-align:left" id="__ss_679314"&gt;&lt;object style="margin:0px" width="425" height="355"&gt;&lt;param name="movie" value="http://static.slideshare.net/swf/ssplayer2.swf?doc=ajax-in-enterprise-portals-1224644054575411-8&amp;stripped_title=ajax-in-enterprise-portals-presentation" /&gt;&lt;param name="allowFullScreen" value="true"/&gt;&lt;param name="allowScriptAccess" value="always"/&gt;&lt;embed src="http://static.slideshare.net/swf/ssplayer2.swf?doc=ajax-in-enterprise-portals-1224644054575411-8&amp;stripped_title=ajax-in-enterprise-portals-presentation" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/nIEIRqcCa3Y" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/ajax_in_enterprise_portals</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/developing_an_opensocial_portlet</guid>
<title>Developing an OpenSocial Portlet</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/aWDVxMFrqag/developing_an_opensocial_portlet</link>
<pubDate>Sun, 12 Oct 2008 22:51:38 -0400</pubDate> 
<category>Java</category> 
<category>opensocial</category> 
<category>portal</category> 
<category>portlets</category> 
<description>&lt;a href="http://www.jroller.com/wesleyhales/resource/Picture-6.jpg"&gt;&lt;img src="http://www.jroller.com/wesleyhales/resource/Picture-6-small.jpg" style="margin:5px;" align="right"/&gt;&lt;/a&gt;&lt;p&gt;I dedicated some time this weekend to creating a fully functional demo with OpenSocial, Shindig and JBoss Portal. It seems like OpenSocial has a lot of new supported platforms coming out in 0.8 and the future is looking promising. Here is a bullet list to summarize what I found:&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;Documentation is scarce when you want to roll you own OS container via Shindig&lt;/li&gt; 
&lt;li&gt;Luckily &lt;a href="http://chrisschalk.com/shindig_docs/io/shindig-io.html"&gt;Chris Schalk&lt;/a&gt; did a good job providing some documentation on getting persistence setup on a mysql db&lt;/li&gt; 
&lt;li&gt;Unfortunately, due to the bleeding edge of this technology, some of (the few) demos that exist don't work with today's Shindig trunk&lt;/li&gt; 
&lt;li&gt;I was able to quickly learn Google widgeting and am on my way to being a "widget master"&lt;/li&gt; 
&lt;li&gt;Next on the list is to mess around with &lt;a href="http://code.google.com/apis/opensocial/articles/authsub.html"&gt;Google Data APIs in OpenSocial Apps&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;The transition/integration of Shindig into a standard webapp/portlet was a huge pita. Too many hard coded servlet context in .js files.&lt;/li&gt; 
&lt;li&gt;It seems like (for now) you really need to be into the Orkut scene to leverage current social users. Myspace is something I try to stay away from, and I was really hoping to see some LinkedIn stuff but was let down.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is definitely the way portals are headed and I guess I will try to muster up the energy to write an article once the kinks are worked out of my demo. I would also like to do something cool with the collected social data inside of a portal environment (like notifications of other user activities, posts, changes, etc...). I used the &lt;a href="http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-2"&gt;JBoss Portlet Bridge Richfaces&lt;/a&gt; project/archetype to create the demo. The bridge makes it incredibly easy to do stuff like this because of having things working on both the servlet and portlet side.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/aWDVxMFrqag" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/developing_an_opensocial_portlet</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/creating_a_firefox_3_theme</guid>
<title>Creating a Firefox 3 theme</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/-lLeYiVAxG8/creating_a_firefox_3_theme</link> 
<pubDate>Tue, 26 Aug 2008 21:24:20 -0400</pubDate> 
<category>Java</category> 
<category>design</category> 
<category>firefox</category> 
<category>theme</category> 
<description>&lt;div style="padding:5px; margin:5px; background-color:#f9f5ae; border:1px solid #b2ac4f;"&gt;**UPDATE - This theme is now available on Mozilla.org here: &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/9627/" style="color:#20aa30"&gt;https://addons.mozilla.org/en-US/firefox/addon/9627/&lt;/a&gt;&lt;/div&gt; 
&lt;a href="http://www.jroller.com/wesleyhales/resource/ff3-theme-large.gif"&gt;&lt;img src="http://www.jroller.com/wesleyhales/resource/ff3-themeclose.gif" style="margin:5px;" align="right"/&gt;&lt;/a&gt; 
&lt;p&gt;I decided to tryout Firefox theme building a few weeks ago on vacation. It took me a few days to design the skin and slice up all the images for theme creation. But once it came to laying down the Firefox CSS, I have to say that I was a little overwhelmed and haven't been back to finish the theme since.&lt;/p&gt; 
&lt;p&gt;Of course this could be due to me actually having a day job and somewhat of a life. I think the overall css code for the layout is fairly simple. All you have to do is get your x,y coordinates right and you are golden. If anybody has any quick tips to make the process of placing the buttons a little simpler, please speak now! Or if someone wants to take on the task of completing this theme I will post the .psd files.&lt;/p&gt; 
&lt;br/&gt; 
&lt;a href="http://www.jroller.com/wesleyhales/resource/ff3-theme-large.gif"&gt;&lt;img src="http://www.jroller.com/wesleyhales/resource/ff3-theme-small.gif" style="" border="0"/&gt;&lt;/a&gt; 
&lt;br/&gt; 
&lt;br/&gt; 
&lt;p&gt;One of the cooler things about this theme is that the icons are 100% original. We all know most themes take some form of Windows or *nix icons. I tried to take the old 1930's cinema approach where I could. But I couldn't come up with anything for the copy and paste buttons (C and V).&lt;/p&gt; 
&lt;br/&gt; 
&lt;br/&gt; 
&lt;br/&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/-lLeYiVAxG8" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/creating_a_firefox_3_theme</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/developing_portlets_using_jsf_ajax</guid>
<title>Developing Portlets using JSF, Ajax, and Seam (Part 1 of 3)</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/xgMPZD8hklA/developing_portlets_using_jsf_ajax</link>
<pubDate>Wed, 6 Aug 2008 12:30:13 -0400</pubDate> 
<category>Java</category> 
<category>301</category> 
<category>bridge</category> 
<category>container</category> 
<category>jboss</category> 
<category>jsf</category> 
<category>jsr</category> 
<category>portal</category> 
<category>portlet</category> 
<description>&lt;p&gt;InfoQ just published the first in a series of 3 articles for the JBoss Portlet Bridge. The author of this series did an unbelievable job. I could write a whole post about how great his article(s) are, but I would hate to loose sight of this post topic :-) heh - just kidding... the author is me!&lt;/p&gt; 
&lt;br/&gt; 
&lt;a href="http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-1"&gt;&lt;img src="/wesleyhales/resource/infoq-thumb.jpg" alt=""/&gt;&lt;/a&gt; 

&lt;p&gt;This first part is about basic JSF development with an easy to follow tutorial and real world development tips. The next one will be about RichFaces and the final (about Seam) will be published right after the release of Beta 4 in early September.&lt;/p&gt; 

&lt;p&gt;Enjoy!&lt;br/&gt; 
&lt;a href="http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-1"&gt;http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-1&lt;/a&gt; 
&lt;br/&gt;&lt;br/&gt;&lt;a href="http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-2"&gt;http://www.infoq.com/articles/jsf-ajax-seam-portlets-pt-2&lt;/a&gt; 
&lt;br/&gt; 
&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/xgMPZD8hklA" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/developing_portlets_using_jsf_ajax</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/jsf_in_a_portlet_has</guid>
<title>JSF in a portlet has never been this easy!</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/ceqbAwu7cCA/jsf_in_a_portlet_has</link>
<pubDate>Mon, 7 Jul 2008 15:25:29 -0400</pubDate> 
<category>Java</category> 
<category>bridge</category> 
<category>jsf</category> 
<category>portlet</category> 
<description>&lt;p&gt;We just released JBoss Portlet Bridge Beta3 along with some good supporting documentation and example projects. &lt;a href="http://www.jboss.org/files/portletbridge/docs/1.0.0.B3/en/html_single/index.html"&gt;See the documentation for full details&lt;/a&gt;. 

&lt;p&gt;For those that want to jump right in, you can run the following archetype and have it deployed on JBoss AS + Portal in minutes: 
&lt;br&gt; 
&lt;code&gt;&lt;pre&gt; 
mvn archetype:generate -DarchetypeGroupId=org.jboss.portletbridge.archetypes -DarchetypeArtifactId=1.2-basic -DarchetypeVersion=1.0.0.B3 -DgroupId=org.whatever.project -DartifactId=myprojectname -DarchetypeRepository=http://repository.jboss.org/maven2/ -Dversion=1.0.0.B3 
&lt;/pre&gt;&lt;/code&gt; 
&lt;br/&gt; 
&lt;code&gt;&lt;pre&gt; 
mvn install cargo:start -Premote-portal -Dpc20 
&lt;/pre&gt;&lt;/code&gt; 
&lt;br/&gt; 
&lt;code&gt;&lt;pre&gt; 
mvn cargo:deploy -Premote-portal -Dpc20 
&lt;/pre&gt;&lt;/code&gt; 
&lt;br/&gt; 
Visit &lt;a href="http://localhost:8080/simple-portal/demo/jsr-301.jsp"&gt;http://localhost:8080/simple-portal/demo/jsr-301.jsp&lt;/a&gt; 
&lt;/p&gt; 
&lt;br/&gt; 
&lt;br/&gt; 
The majority of the code written for this release is internal to the portlet bridge project (refactoring, 301 spec updates and enhancements, bug fixes...). The next release (Beta 4 - early Sept) will be huge for the portlet bridge for the following reasons: 
&lt;ul&gt;&lt;li&gt;The EG is currently discussing a lot of significant clarifications and improvements. For example, working with the JSF 2.0 EG to allow certain needs and working on Portlet 2.0 areas of the spec. 
&lt;/li&gt;&lt;li&gt;There is currently a lot of discussion about navigation between portlet modes. Once this is nailed down in the spec, we will implement it. 
&lt;/li&gt;&lt;li&gt;The Portlet 1.0 version should be getting close to public review.&lt;/li&gt;&lt;/ul&gt;Other than the spec related reasons for release schedule, we must work in unison with the latest Seam and RichFaces relases, make sure that we squash any bugs concerning the 3 integration points, handle features/improvements/refactorings, and try to test and give feedback to the 301 EG. And, of course we can't forget about JBoss Portal 2.7+! 

There are soo many cool things going on right now within the JBoss Portal project, I would like to tell you about all of them but then this post wouldn't be about JBPB anymore. Just stay tuned to this blog... 

With that said, here are a few tips for JSF portlet developers that concern this release: 
&lt;ul&gt;&lt;li&gt;&lt;b id="lwur"&gt;Namespacing&lt;/b&gt; 
In situations where you need to use the id of an element in your JSF/xhtml markup, you would normally see something like 'form1:myBtn' in the rendered markup. But now with the bridge namespacing you will see something similar to: &lt;p id="d0j41"&gt;jbpns_2fdefault_2fNews_2fStories_2fStoryTemplateWindow12snpbj:_viewRoot:form1:myBtn&lt;/p&gt;&lt;p id="mxo:1"&gt;To overcome this, you can use the following expression in your Facelets page to prepend the namespace to your javascript code: &lt;/p&gt;&lt;p&gt;document.getElementById('#{facesContext.externalContext.response.namespace}the_rest_of_JSF_ID&lt;/p&gt; since this uses the portletResponse, once you try to view this page on the servlet application side, you will get an exception. To avoid this, you need to check for the type of response in your backing bean and assign a new "safe" namespace variable for the UI. 

&lt;/li&gt;&lt;li&gt;&lt;b id="lwur1"&gt;Excluding Attributes from the Bridge Request Scope&lt;/b&gt; 
When your application uses request attributes on a per request basis and you do not want that particular attribute to be managed in the extended bridge request scope, you must use the following configuration in your faces-config.xml. Below you will see that any attribute namespaced as foo.bar or any attribute beginning with foo.baz(wildcard) will be excluded from the bridge request scope and only be used per that application's request. 
&lt;pre&gt;&lt;code&gt; 
&amp;lt;application&amp;gt; 
&amp;lt;application-extension&amp;gt; 
&amp;lt;bridge:excluded-attributes&amp;gt; 
&amp;lt;bridge:excluded-attribute&amp;gt;foo.bar&amp;lt;/bridge:excluded-attribute&amp;gt; 
&amp;lt;bridge:excluded-attribute&amp;gt;foo.baz.*&amp;lt;/bridge:excluded-attribute&amp;gt; 
&amp;lt;/bridge:excluded-attributes&amp;gt; 
&amp;lt;/application-extension&amp;gt; 
&amp;lt;/application&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;For more information on this release or to find out more about the project, visit the &lt;a href="http://www.jboss.org/portletbridge/"&gt;project page&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/ceqbAwu7cCA" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/jsf_in_a_portlet_has</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/jboss_portlet_bridge_beta2_released</guid>
<title>JBoss Portlet Bridge Beta2 Released!</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/oKOEoq7uJEQ/jboss_portlet_bridge_beta2_released</link>
<pubDate>Fri, 11 Apr 2008 11:30:22 -0400</pubDate> 
<category>Java</category> 
<category>bridge</category> 
<category>portlet</category> 
<category>richfaces</category> 
<category>seam</category> 
<description>&lt;p&gt;The JBoss implementation of the JSR-301 spec allows developers the ability to develop portlets with any mixture of Seam, RichFaces, and JSF. One of the main goals of the 301 specification is to make life easier on the JSF developer who chooses to integrate his web application into a portal environment. The JBoss Portlet Bridge project builds on that vision of no-hassle integration and setup.&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://blog.jboss-portal.org/2008/04/jboss-portlet-bridge-beta2-released.html"&gt;Read more about what is included in this release.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.jboss.org/portletbridge/"&gt;JBoss Portlet Bridge project page.&lt;/a&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/oKOEoq7uJEQ" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/jboss_portlet_bridge_beta2_released</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/my_4_month_old_macbook</guid>
<title>My 4 month old MacBook Pro Hardrive is skippping... badly</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/KhY8Ty1Gszo/my_4_month_old_macbook</link>
<pubDate>Mon, 31 Mar 2008 21:23:14 -0400</pubDate> 
<category>Java</category> 
<category>bad</category> 
<category>drive</category> 
<category>hard</category> 
<description>&lt;p&gt;It's never a good thing when your hard drive starts making that funny little skipping noise. But, it's really not good when you push the power button and all you hear are loud ass clicks and you can feel the vibration of each click on the keyboard.&lt;/p&gt; 
&lt;p&gt;In all my wise 'ol years in the IT industry, I have never had this happen to me. Sure, I've had old hd's that eventually wear out and start skipping. But not on a brand new shiny 17" MBP that is only a few months old! And then of course the first thing anyone asks you is if you have backups or use Time Machine - and what do you think my answer is :) I know, I know, blah blah Time Machine is so easy or why couldn't I have just copied my work files to my usb thumbdrive.&lt;/p&gt; 
&lt;p&gt;After reality sets in with these types of situations, you start thinking outside of your little world of sitting behind a desk and writing code all day. I don't know, I just felt like doing something crazy. Kind of like our good friends from OfficeSpace...&lt;object width="425" height="355"&gt;&lt;param name="movie" value="http://www.youtube.com/v/T6syezOHJ2Q&amp;hl=en"&gt;&lt;/param&gt;&lt;param name="wmode" value="transparent"&gt;&lt;/param&gt;&lt;embed src="http://www.youtube.com/v/T6syezOHJ2Q&amp;hl=en" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/p&gt; 
&lt;p&gt;And after the anger you immediately start freaking out and backup things that still remain on your other systems. I have never been so diligent about my backup scripts in all my life.&lt;/p&gt; 
&lt;p&gt;I think (for us) maintaining any MP3 and picture collection over the past 10 years has been quite a challenge. If you have been fortunate/smart enough to maintain all of those songs and images (especially from the napster/mp3 galaxy days) then I applaud thee. And if you haven't backed your shiz up lately... then don't be like me and think that your computer is too new and you can put it off for a few more days.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/KhY8Ty1Gszo" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/my_4_month_old_macbook</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/jboss_portlet_bridge_with_seam</guid>
<title>JBoss Portlet Bridge with Seam support released</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/mGemTpY8nr0/jboss_portlet_bridge_with_seam</link>
<pubDate>Thu, 14 Feb 2008 23:00:56 -0500</pubDate> 
<category>Java</category> 
<category>bridge</category> 
<category>jsf</category> 
<category>portlet</category> 
<category>richfaces</category> 
<category>seam</category> 
<description>&lt;p&gt;It has been quite a while in the making (a couple months) and we finally have a beta release of the portlet bridge.&lt;/p&gt; 
&lt;p&gt;The JBoss Portlet Bridge is an implementation of the JSR-301 specification to support JSF within a portlet and with added enhancements to support other web frameworks. Currently the bridge supports any combination of JSF, Seam, and RichFaces to run inside a portlet.&lt;/p&gt; 

&lt;p&gt;&lt;a href="http://labs.jboss.com/portletbridge/"&gt;See the project page&lt;/a&gt; for more details and a live demo.&lt;/p&gt; 
&lt;br/&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/mGemTpY8nr0" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/jboss_portlet_bridge_with_seam</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/richfaces_loading_modal_with_a4j</guid>
<title>Page and Component Modal with a4j:status</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/8IJMrYyNz_0/richfaces_loading_modal_with_a4j</link>
<pubDate>Sun, 20 Jan 2008 22:18:06 -0500</pubDate> 
<category>Java</category> 
<category>demo</category> 
<category>jboss</category> 
<category>modal</category> 
<category>richfaces</category> 
<description>&lt;p&gt;I haven't really had a chance to look at RichFaces OOB modal, but I had written &lt;a href="http://www.jroller.com/page/wesleyhales/?anchor=adding_lightbox_to_ajax4jsf_and"&gt;this one&lt;/a&gt; over a year ago when Ajax4JSF was still on java.net&lt;/p&gt; 

&lt;a href="http://www.jroller.com/wesleyhales/resource/page-modal.gif"&gt;&lt;img src="http://www.jroller.com/wesleyhales/resource/page-modal-small.gif" alt="" align="right"/&gt;&lt;/a&gt; 

&lt;p&gt;Due to an overwhelming interest in the previous article I decided to spend some time developing this modal into a demo application and to add some new features. Modals are good to some and hated by others, they have their place and can certainly add some cleaner usability to any website. The cool thing about a modal window is that the user doesn't feel like they are being redirected to another page. They can still keep their focus on the content at hand while multitasking and spawning another workflow.&lt;/p&gt; 

&lt;p&gt;So what about component based modals? We know good and well what a &lt;a href="http://www.jroller.com/wesleyhales/resource/page-modal.gif"&gt;page-locking modal&lt;/a&gt; is, but has anyone tried to implement a modal that only covers the area of the active ajax component? 
&lt;/p&gt; 

&lt;p&gt; 
This is a component based modal. It basically blocks out the activated component per ajax request.&lt;br/&gt; 
&lt;a href="http://www.jroller.com/wesleyhales/resource/component-modal.gif"&gt;&lt;img src="http://www.jroller.com/wesleyhales/resource/component-modal-small.gif" alt="" align="left"/&gt;&lt;/a&gt;&lt;br/&gt; 
This demo is already setup and ready to go, check it out &lt;a href="http://code.google.com/p/seam-2-sandbox/"&gt;here&lt;/a&gt; and the instructions on getting it running are in the home page description. This is the same demo I used in my previous &lt;a href="http://www.jroller.com/wesleyhales/entry/running_seam_2_0_on"&gt;Running Seam on Tomcat...&lt;/a&gt; article - now updated to the latest version of Seam and cleaned up a bit (and also put it under Google code vcs).&lt;/p&gt; 

&lt;p&gt;And that's not all! To make life even easier I wrapped the modal(s) up in a nice and neat Facelets component. The modals also allow for unlimited modals-per-page. Meaning that you can have 10000 modals on one page without conflicts ;). Here's how you use it:&lt;/p&gt; 

&lt;pre&gt; 
&lt;a name="l65"&gt; 
&lt;/a&gt;&lt;a name="l66"&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;hc:modal &lt;/span&gt;&lt;span class="s2"&gt;modalId=&lt;/span&gt;&lt;span class="s3"&gt;"loading-modal" &lt;/span&gt;&lt;span class="s2"&gt;modalContainerId=&lt;/span&gt;&lt;span class="s3"&gt;"loading-modal-msg" &lt;/span&gt;&lt;span class="s2"&gt;hidden=&lt;/span&gt;&lt;span class="s3"&gt;"true" &lt;/span&gt;&lt;span class="s2"&gt;width=&lt;/span&gt;&lt;span class="s3"&gt;"129px"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l67"&gt; &lt;span class="s9"&gt;Content that you want in the modal goes here...&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l68"&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;hc:modal&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l69"&gt; 
&lt;/a&gt; 
&lt;/pre&gt; 
&lt;br/&gt; 
&lt;p&gt;... then put the a4j:status tag inside of an a4j:region. Note the javascript methods being called. You could use these in any onclick event that needs to present a modal. 
&lt;/p&gt; 
&lt;br/&gt; 

&lt;code&gt; 
&lt;pre&gt; 
&lt;a name="l141"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;a4j:status &lt;/span&gt;&lt;span class="s2"&gt;for=&lt;/span&gt;&lt;span class="s3"&gt;"stat1" &lt;/span&gt;&lt;span class="s2"&gt;forceId=&lt;/span&gt;&lt;span class="s3"&gt;"true" &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"ajaxStatus"&lt;/span&gt;&lt;span class="s0"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l142"&gt; &lt;span class="s2"&gt;onstart=&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s4"&gt;alertModal(&lt;/span&gt;&lt;span class="s8"&gt;'loading-modal'&lt;/span&gt;&lt;span class="s4"&gt;,&lt;/span&gt;&lt;span class="s8"&gt;'loading-modal-msg'&lt;/span&gt;&lt;span class="s4"&gt;);&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l143"&gt; &lt;span class="s2"&gt;onstop=&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s4"&gt;hideContentModal(&lt;/span&gt;&lt;span class="s8"&gt;'loading-modal'&lt;/span&gt;&lt;span class="s4"&gt;,&lt;/span&gt;&lt;span class="s8"&gt;'loading-modal-msg'&lt;/span&gt;&lt;span class="s4"&gt;);&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l144"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;f:facet &lt;/span&gt;&lt;span class="s2"&gt;name=&lt;/span&gt;&lt;span class="s3"&gt;"start"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l145"&gt; 
&lt;/a&gt;&lt;a name="l146"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;f:facet&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l147"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;a4j:status&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt; 
&lt;/pre&gt; 
&lt;/code&gt; 
&lt;br/&gt; 
&lt;p&gt;This is a work in progress and maybe some day I will cleanup my js, explain why I did things the way I did them, and package this up in a component jar. For now this is it.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/8IJMrYyNz_0" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/richfaces_loading_modal_with_a4j</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/converting_xhtml_to_pdf_or</guid>
<title>XHTML to PDF with a Seam filter</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/d83bA8LbjiE/converting_xhtml_to_pdf_or</link>
<pubDate>Mon, 17 Dec 2007 08:17:44 -0500</pubDate> 
<category>Java</category> 
<category>pdf</category> 
<category>seam</category> 
<description>&lt;p&gt;After reading &lt;a href="http://today.java.net/pub/a/today/2006/10/31/combine-facelets-and-flying-saucer-renderer.html"&gt;this article&lt;/a&gt; showing how to create a servlet filter that will render XHTML to a PDF, image, or SVG, I was inspired to try it out as a filter in Seam using the @Filter annotation. The filter installation went smoothly but getting Flying Saucer to parse the generated JSF and css background images was not so easy.&lt;/p&gt; 
&lt;p&gt;First off, generated markup from any given JSF component is not guaranteed to be good markup. So I had to make use of cyberneko html parser. The servlet filter parses the generated response and then neko cleans up any non standard xhtml elements.&lt;/p&gt; 
&lt;p&gt;One huge css tip is make sure you declare &lt;code&gt;media="print"&lt;/code&gt; or &lt;code&gt;media="screen,print"&lt;/code&gt; on your xhmtl css reference. Naturally it would be good to split the 2 style sheets but laziness forced me to use one for both.&lt;/p&gt; 

&lt;p class="pTitle"&gt;An Example Application&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.littlebear-canton.com"&gt;&lt;img src="/wesleyhales/resource/Picture-1.jpg" align="right"/&gt;&lt;/a&gt;A few months ago, I wrote a simple website for the neighborhood I live in using Seam. I tried to start out writing this site using Ruby on Rails but I just wasn't impressed compared to what Seam offers. (Even for a small one-off website)&lt;/p&gt; 
&lt;p&gt;So below are 2 live links that show the code in action and parsing a real world example. Enjoy...&lt;/p&gt; 
&lt;p&gt; 
&lt;ul&gt; 
&lt;li&gt;&lt;a href="http://www.littlebear-canton.com/littlebear/index.seam?RenderOutputType=pdf"&gt;View the front page as PDF&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="http://www.littlebear-canton.com/littlebear/index.seam?RenderOutputType=image&amp;height=900&amp;width=800"&gt;View the front page as PNG&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/p&gt; 
&lt;br/&gt; 
&lt;p class="pTitle"&gt;The Code&lt;/p&gt; 
&lt;p&gt;It's pretty cool not having to define a servlet filter in your web.xml. Just add the @Filter annotation to the top of the class and wala. I had to add the &lt;code&gt;within="org.jboss.seam.web.ajax4jsfFilter"&lt;/code&gt; attribute to the annotation so FS could render the RichFaces images/resources. 
&lt;ul&gt; 
&lt;li&gt;&lt;a href="/wesleyhales/resource/xhtml2pdf.zip.jar"&gt;Flying Saucer Seam component (source)&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;Dependencies 
&lt;ul&gt; 
&lt;li&gt;nekohtml&lt;/li&gt; 
&lt;li&gt;All flying saucer jars&lt;/li&gt;&lt;/ul&gt; 
&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/d83bA8LbjiE" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/converting_xhtml_to_pdf_or</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/1_year_of_blogging</guid>
<title>1 year of blogging</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/yooiEh5MgNg/1_year_of_blogging</link>
<pubDate>Wed, 5 Dec 2007 09:14:44 -0500</pubDate> 
<category>Life</category> 
<category>anniversary</category> 
<category>blog</category> 
<description>&lt;p&gt;Today marks my 1 year anniversary of blogging. I started this blog to basically express my views and opinions, to give back to the open source community of whom so much has been taken, and for job credibility.&lt;/p&gt; 
&lt;p&gt;Trying to write good articles is a lot of work. Sure anybody can write about a few buzzwords and get some hits, but an article with substance and that actually helps someone through a use case or problem is where the satisfaction comes from.&lt;/p&gt; 
&lt;p&gt;I started using Google analytics on this blog around the first of October, and here are my stats since then: 
&lt;ul&gt; 
&lt;li&gt;4,835 Visits&lt;/li&gt; 
&lt;li&gt;2,493 Absolute Unique Visitors&lt;/li&gt; 
&lt;li&gt;7,112 Pageviews&lt;/li&gt; 
&lt;li&gt;1.47 Average Pageviews&lt;/li&gt; 
&lt;li&gt;00:01:39 Time on Site&lt;/li&gt; 
&lt;li&gt;79.23% Bounce Rate&lt;/li&gt; 
&lt;li&gt;47.22% New Visits&lt;/li&gt; 
&lt;/ul&gt; 

Not too bad for a 2 month time span, but what really matters is getting comments that ask questions or suggestions that add to the article's value. 
&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/yooiEh5MgNg" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/1_year_of_blogging</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/my_first_facebook_app</guid>
<title>Writing a FaceBook app</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/jDSGbiVqVzg/my_first_facebook_app</link>
<pubDate>Mon, 3 Dec 2007 06:03:00 -0500</pubDate> 
<category>Java</category> 
<category>facebook</category> 
<category>seam</category> 
<description>&lt;p&gt;I just recently setup a Facebook profile in an effort to network with other like minded professionals and because I haven't really had a reason to do so until I joined JBoss. It is astonishing how many people have accounts and are using Facebook on a daily basis. I really haven't followed the social networking fad/trend that has been going on for the past few years and I keep wondering what is going to be next. Linking people to each other in some way, shape, or form based on interests, work , hobbies, etc. has been going since modern civilization began and the social internet is just one of the many channels to do it.&lt;/p&gt; 
&lt;p&gt;Now with the advent of &lt;a href="http://code.google.com/apis/opensocial/"&gt;Open Social&lt;/a&gt; I'm thinking that broadcasting to all of the different social networks is kind of riding the coat-tails of the fad, but is sure to bring out some interesting mutations in the social scene.&lt;/p&gt; 
&lt;p&gt;Open Social is supporting quite a few different scenes (Engage.com, Friendster, hi5, Hyves, imeem, LinkedIn, MySpace, Ning, Oracle, orkut, Plaxo, Salesforce.com, Six Apart, Tianji, Viadeo, and XING) but not FaceBook. I wonder why this is?&lt;/p&gt; 
&lt;p&gt;This is interesting stuff, but like I said, what is to come after "Social"? The basic concept won't change, people will always want to hook up and network. Anyway, the whole point of this article is just to explain how and why I wrote a FaceBook application.&lt;/p&gt; 

&lt;p class="pTitle"&gt;iProject&lt;/p&gt; 
&lt;p&gt;As I browsed through the available apps on Facebook, there were few that actually did anything useful for the professional minded. There are some that let you manage contacts and business card type things, but nothing that really stood out. All I wanted to do is extend the built in Group application so that I could put a summary of my group or project on my profile page, but also add links to things that pertain to the product or service my project represents along with other custom features that a professional group would want.&lt;/p&gt; 
&lt;p&gt;This led me to the iProject application(I'm still trying to think of a better name). It basically uses the Facebook api to gather information on a group, then it let's you extend the group by adding members, blog feeds, etc. It currently supports Jroller, Blogger(atom/feedburner), and Wordpress blogs. It "will" also be capable of adding members as "core members" of the project along with other features.&lt;/p&gt; 
&lt;p&gt;So basically, if you are a member of an existing group on Facebook, you can extend it and make it better on your profile page. You can preview the beta on &lt;a href="http://www.facebook.com/profile.php?id=534666343"&gt;my profile&lt;/a&gt;&lt;p&gt; 
&lt;p&gt;I used Seam and the Facebook java api along with commons httpclient to get the blog feeds. For the ui, I had to use a provided FBML (facebook markup language) dtd that's buried on Facebook's wiki so that I could use Facelets for the view. It was easy for me to use Seam just because I'm so used to getting things done quickly with it. Furthermore, these types of extensions to the framework could bring in some interesting new advantages.&lt;/p&gt;&lt;img align="center" src="http://www.jroller.com/wesleyhales/resource/Picture4.jpg" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/jDSGbiVqVzg" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/my_first_facebook_app</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/seam_2_0ga_in_jboss</guid>
<title>Seam 2.0GA in JBoss Portal (in 5 minutes)</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/cw5s2-44Eic/seam_2_0ga_in_jboss</link> 
<pubDate>Thu, 15 Nov 2007 08:45:37 -0500</pubDate> 
<category>Java</category> 
<category>jboss</category> 
<category>portal</category> 
<category>richfaces</category> 
<category>seam</category> 
<description>&lt;p&gt;**Update - See &lt;a href="http://www.jroller.com/wesleyhales/entry/jboss_portlet_bridge_with_seam"&gt;this article&lt;/a&gt; for more info.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/cw5s2-44Eic" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/seam_2_0ga_in_jboss</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/the_smokies</guid>
<title>The Smokies</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/OA1YqYqmCWA/the_smokies</link>
<pubDate>Tue, 6 Nov 2007 16:19:39 -0500</pubDate> 
<category>Life</category> 
<category>vacation</category> 
<description>&lt;p&gt;I guess everybody has a place a few hours from home that they can go and relax and enjoy nature. One rednecktastic place I like to go is at the foothills of the Smoky Mountains in Tennessee. Gatlinburg is a trip, and if you like &lt;a href="http://www.dollyparton.com/"&gt;Dolly Parton&lt;/a&gt;, well this is the place for you.&lt;/p&gt; 

&lt;a href="http://picasaweb.google.com/wesleyhales/Gatlinburg/photo?authkey=a7Wklk053VM#5129525253527558594"&gt;&lt;img src="http://lh5.google.com/wesleyhales/Ry-8Cmrn2cI/AAAAAAAABEg/EdKLZSC1dSA/s400/DSC_2968_1.JPG" /&gt;&lt;/a&gt; 

&lt;p&gt;I mainly enjoy the fresh mountain air, the beautiful scenery, and the below freezing temps at night. My wife and I usually rent a cabin on a mountain top and watch the time drift by for a few days.&lt;/p&gt; 

&lt;a href="http://picasaweb.google.com/wesleyhales/Gatlinburg/photo?authkey=a7Wklk053VM#5129731178861894914"&gt;&lt;img src="http://lh4.google.com/wesleyhales/RzB3VCVPHQI/AAAAAAAABGE/c6ZzmKVkdTs/s400/DSC_2982_1.JPG" /&gt;&lt;/a&gt; 

&lt;p&gt;There is something cool about this place, It's just one of those things where you have to be here to know what I'm talking about. Anyway, it's nice to get away to a secluded place and collect your thoughts and think of innovative new ideas (All while eating funnel cake and watching your wife buy all kinds of "usefull/less" trinkets and decorations for Christmas ;)&lt;/p&gt; 

&lt;a href="http://picasaweb.google.com/wesleyhales/Gatlinburg/photo?authkey=a7Wklk053VM#5129523995102140818"&gt;&lt;img src="http://lh4.google.com/wesleyhales/Ry-65Wrn2ZI/AAAAAAAABEI/y6e7-o79TS0/s400/DSC_3029.JPG" /&gt;&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/OA1YqYqmCWA" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/the_smokies</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/maven_2_vs_ant_revisited</guid>
<title>Maven 2 vs. Ant (revisited)</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/-CCdNJXASpA/maven_2_vs_ant_revisited</link> 
<pubDate>Tue, 30 Oct 2007 20:58:17 -0400</pubDate> 
<category>Java</category> 
<category>ant</category> 
<category>lrd</category> 
<category>maven</category> 
<description>&lt;p&gt;Almost a year since I made &lt;a href="http://www.jroller.com/wesleyhales/entry/maven_2_vs_ant_which"&gt;this entry&lt;/a&gt; and I think Maven is great for open source and commercial apps. Sure, there may be &lt;a href="http://blog.thomas.heute.name/2007/10/ant-vs-maven-round-2.html"&gt;a few things&lt;/a&gt; you want to do that don't fit into the "Maven way" but for the most part, it is a great build system. 
Also, any one that uses IntelliJ Idea will fall in love with Maven on first use (I guess it handles Eclipse project files just as well).&lt;/p&gt; 
&lt;/p&gt; 
&lt;p&gt;I recently worked on converting a JBoss Portal module from Ant to Maven and you can &lt;a href="http://jbossportal.blogspot.com/search/label/maven"&gt;read about&lt;/a&gt; a few generic problems that I ran into and how to overcome them. 
&lt;/p&gt; 
&lt;p&gt;Also, one very powerful feature of Maven that I am messing around with right now is filtering and profile "mashups".
Lets say, I want LRD (local rapid development ;-) on my workstation using Tomcat. Usually I would use the Jetty plugin because it is the ultimate for Maven LRD, but the majority of the time and to match what is in production, developers use Tomcat at a minimum. Here is a quick tip for creating a shared distributable app using the aforementioned. 
&lt;/p&gt; 
&lt;p&gt;&lt;h3&gt;In a existing Maven app, create the following structure:&lt;/h3&gt; 
&lt;code&gt;&lt;pre&gt; 
src 
|-main 
|-filters 
|-tomcat.properties 
|-resources 
|-context.xml 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 
&lt;p&gt;&lt;h3&gt;In your pom.xml we have something like&lt;/h3&gt;: 
&lt;code&gt;&lt;pre&gt; 
&lt;a name="l1"&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;profile&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l2"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;tomcat&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l3"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;activation&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l4"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;activeByDefault&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;false&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;activeByDefault&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 

&lt;a name="l5"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;activation&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l6"&gt; 
&lt;a name="l7"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;build&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l8"&gt; 
&lt;a name="l9"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;filters&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l10"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;filter&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;src/main/filters/tomcat.properties&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;filter&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 

&lt;a name="l11"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;filters&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l12"&gt; 
&lt;a name="l13"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;resources&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l14"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;resource&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l15"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;directory&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;${basedir}/src/main/resources&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;directory&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 

&lt;a name="l16"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;filtering&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;true&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;filtering&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l17"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;targetPath&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;../${build.finalName}/META-INF&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;targetPath&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l18"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;includes&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l19"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;include&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;context.xml&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;include&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 

&lt;a name="l20"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;includes&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l21"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;resource&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l22"&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;resources&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;/a&gt; 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 
&lt;p&gt;&lt;h3&gt;in tomcat.properties&lt;/h3&gt; 
&lt;code&gt;&lt;pre&gt; 
context.docBase=${basedir}/target/${project.build.finalName} 
context.path=/${project.build.finalName} 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 
&lt;p&gt;&lt;h3&gt;and in context.xml&lt;/h3&gt; 
&lt;code&gt;&lt;pre&gt; 
&amp;lt;Context path="${context.path}" docBase="${context.docBase}" reloadable="true"/&amp;gt; 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/p&gt; 
&lt;p&gt;Once you have all of this in place (along with a good cargo config found &lt;a href="http://www.jroller.com/wesleyhales/entry/running_seam_2_0_on"&gt;in this post&lt;/a&gt;) you will be on your way to a enjoyable, easy development setup.&lt;/p&gt; 
&lt;p&gt; 
&lt;p&gt; 
So now, all you have to do to hot deploy your maven app to a running instance of Tomcat is type the following: 
&lt;code&gt;mvn install -Ptomcat&lt;/code&gt;&lt;br/&gt; 
This will compile and deploy your changes quickly. You can also set your IDE to copy jsp/xhtml files over using a keyboard shortcut mapping (easy to do with Idea) so for UI changes you don't have to hot deploy every time. 
&lt;/p&gt; 
This example just scratches the surface of what mixing profiles with filtering can do. You could have a filtering/profile mechanism for every possible scenario. 
&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/-CCdNJXASpA" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/maven_2_vs_ant_revisited</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/another_one</guid>
<title>Another design</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/urVvNVgiLEs/another_one</link>
<pubDate>Mon, 29 Oct 2007 15:19:41 -0400</pubDate> 
<category>Design</category> 
<category>balls</category> 
<category>design</category> 
<category>kick</category> 
<description>&lt;p&gt;The designer inside me just won't give up. I have tried and tried to put down the Photoshop paint brush and embrace development only, but it just isn't going to happen. I care just as much about semantic HTML and css/designer stuff as I do about hard core Java development. &lt;/p&gt; 

&lt;p&gt;Some say it's easy to be a jack of all trades and a master of none. But I am naturally forced to slap that theory in the face and then kick it in the balls ;-)&lt;/p&gt; 

&lt;p&gt;With that said, enjoy the new layout and be ready for another in a few months.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/urVvNVgiLEs" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/another_one</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/running_seam_2_0_on</guid>
<title>Running Seam 2.0 on Tomcat(EJB3) using Maven and Cargo</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/p8VJHX1mH8I/running_seam_2_0_on</link>
<pubDate>Fri, 12 Oct 2007 22:47:02 -0400</pubDate> 
<category>Java</category> 
<category>cargo</category> 
<category>maven</category> 
<category>seam</category> 
<category>tomcat</category> 
<description>&lt;p&gt;In this article I review a simple Seam 2.0.0.CR2 app that deploys to Tomcat 6.0.13 with JBoss Embedded Beta2. &lt;/p&gt; 

&lt;p&gt;It's great to see Seam move to Maven because tracking and installing all those dependencies in a local repository was a pain in the ass! This project is moving fast, and if you wanted to keep up with the latest version, it was a lot of work. So now that my life is easier, I thought I would make the Seam+EJB+Tomcat user's life a little easier also.&lt;/p&gt; 

&lt;p class="listTitle"&gt;The following is included in this sample app:&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;Trinidad 1.0.2&lt;/li&gt; 
&lt;li&gt;JBoss RichFaces&lt;/li&gt; 
&lt;li&gt;JAAS&lt;/li&gt; 
&lt;li&gt;Drools&lt;/li&gt; 
&lt;li&gt;JBPM&lt;/li&gt; 
&lt;li&gt;And everything else that seam and Embedded/EJB3 provides out of box.&lt;/li&gt; 
&lt;/ul&gt; 


&lt;p&gt;All you need to have is Maven 2.0.x installed. The rest is cake. During the installation Cargo will download a zip file from the JBoss Maven repository. This is the Tomcat 6.0.13 distro with Embedded already installed and setup. Nothing else has been added to it.&lt;/p&gt; 

&lt;h2&gt;Directions&lt;/h2&gt; 
&lt;ol&gt; 
&lt;li&gt;Checkout the project and getting started directions &lt;a href="http://code.google.com/p/seam-2-sandbox/"&gt;Here&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;*Note - I used a stub for the datasource in TOMCAT_HOME/lib/deploy. Don't forget that this deploy directory is supposed to be the same as JBoss AS deploy directory.&lt;/p&gt; 
&lt;p class="listTitle"&gt;I used a few cool things in the maven pom setup:&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;It seems you can trick cargo into using the latest version of tomcat. The documentation says Tomcat5x is only supported for the container, but I didn't have any problems using 6.0.x with the Tomcat5x containerId&lt;/li&gt; 
&lt;li&gt;The &lt;code&gt;cargo.container.url&lt;/code&gt; can be local, there is an example in the web/pom.xml (at the bottom)...So once you have this downloaded in you target dir, I would copy it somewhere outside of target and change the &lt;code&gt;cargo.container.url&lt;/code&gt; to point to it. It will save time from downloading and bandwidth. It would be cool to add it as a dependency and then unzip from your local maven repo, but I haven't tried it yet.&lt;/li&gt; 
&lt;li&gt;Like I mentioned earlier, if you want to disable auto start of the Tomcat server you should disable this section of the cargo plugin in web/pom.xml 
&lt;code&gt; 
&lt;pre&gt; 
&lt;a name="l510"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;executions&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l511"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;execution&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l512"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s5"&gt;start&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l513"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;phase&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s5"&gt;install&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;phase&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l514"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;goals&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l515"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;goal&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s5"&gt;start&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;goal&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l516"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;goals&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l517"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;execution&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l518"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;execution&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l519"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s5"&gt;deploy-app&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l520"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;phase&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s5"&gt;install&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;phase&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l521"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;goals&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l522"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;goal&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s5"&gt;deployer-deploy&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;goal&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l523"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;goals&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l524"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;execution&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l525"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;executions&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt; 
&lt;/a&gt; 
&lt;/pre&gt; 
&lt;/code&gt;&lt;/li&gt; 
&lt;li&gt;I have another version of this sample app that uses profiles to build either an EAR for JBoss or a WAR for Tomcat+Embedded. Michael Yuan recently touched on &lt;a href="http://www.michaelyuan.com/blog/2007/10/09/jboss-seam-project-setup-with-maven-%e2%80%94-part-2-ear-deployment/"&gt;this subject&lt;/a&gt; about the EAR+Seam maven impl and did a great job breaking it down. I will try to post the sample app that lets you build a war for Tomcat or an EAR for JBoss all based on the maven profile i.e... 
&lt;code&gt;mvn install -Ptomcat&lt;/code&gt; 
or 
&lt;code&gt;mvn install -Pjboss&lt;/code&gt; 
This is the power of Maven2 and there is soo much more you can do with it.&lt;/li&gt; 
&lt;/ul&gt; 

&lt;p&gt;btw, I haven't blogged since I've become an employee for JBoss, a division of Red Hat. I'm working on the &lt;a href="http://jbossportal.blogspot.com/"&gt;JBoss Portal Team&lt;/a&gt; and I must say that the company is awesome, my team is awesome, and everyone I have met and talked to have been, you guessed it, AWESOME!&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/p8VJHX1mH8I" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/running_seam_2_0_on</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/css_framework</guid>
<title>CSS Framework</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/y7dzvddBGrY/css_framework</link>
<pubDate>Tue, 14 Aug 2007 21:17:41 -0400</pubDate> 
<category>Java</category> 
<category>css</category> 
<category>framework</category> 
<description>&lt;p&gt;There are several possible ways to go about building a CSS framework. The framework I mention here is suited for myself and the group of developers I work with. It has proven successful on the past 3 projects I have been on. 
Once everyone knows about a base set of styles it's amazing how much more productive the team is. Not only do you have a "master" type of stylesheet to work from, everyone can edit the code and make changes faster because they are aware of the framework in use.&lt;/p&gt; 

&lt;p&gt;Many UI folks use inline styles just to get a page marked up, or pixel perfect. But this actually hinders productivity and makes the developer almost double their work. We all know that when you're buried in a project and working away getting things done, it is much harder to come back and "fix" things. Some people may enjoy working like that, but as a project lead you constantly have to remind people to go back in and clean up their work and sometimes I end up doing it myself. And, if you are using inline styles, then you go back and fix them, other developers may have already added your style to a stylesheet and you may overlook it and duplicate the same style over and over again.&lt;/p&gt; 

&lt;p&gt;Bottom line is, use a framework like the example below and life will be much easier ;)&lt;p&gt; 

&lt;p&gt;Here are a few examples of usage. This is a very lean and mean framework for managing widths and alignment. I'm not too concerned with zeroing out all of my html elements like p, table, td, ul, etc. That is a given and some sites differ due to legacy issues and crappy css code. 
&lt;img src="http://www.jroller.com/wesleyhales/resource/css-framework.jpg" alt=""/&gt;&lt;/p&gt; 

&lt;p&gt;You will find yourself cascading the styles on almost every element. The great thing is that you don't have to double-pane the css file and your xhmtl, you can get things done very fast and done correctly... the first go 'round. &lt;/p&gt; 

&lt;p&gt;And the code...&lt;/p&gt; 
&lt;pre&gt; 
&lt;span class="s0"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;align-center &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;text-align&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span 
class="s0"&gt;; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;align-center-margin &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;margin&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;0 &lt;/span&gt;&lt;span 
class="s4"&gt;auto &lt;/span&gt;&lt;span class="s3"&gt;0 &lt;/span&gt;&lt;span class="s4"&gt;auto&lt;/span&gt;&lt;span class="s0"&gt;; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;float-left &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;float&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span 
class="s0"&gt;; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;float-right &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;float&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s2"&gt;right&lt;/span&gt;&lt;span 
class="s0"&gt;; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;align-left &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;text-align&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span 
class="s0"&gt;; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;align-right &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;text-align&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s2"&gt;right&lt;/span&gt;&lt;span 
class="s0"&gt;; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;half-width &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;49&lt;/span&gt;&lt;span 
class="s0"&gt;%; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;quarter-width &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;24.9&lt;/span&gt;&lt;span 
class="s0"&gt;%; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;three-quarter-width &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;74.9&lt;/span&gt;&lt;span 
class="s0"&gt;%; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;full-width &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;100&lt;/span&gt;&lt;span 
class="s0"&gt;%; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;third-width &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;32.9&lt;/span&gt;&lt;span 
class="s0"&gt;%; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;two-third-width &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;65.9&lt;/span&gt;&lt;span 
class="s0"&gt;%; 
} 

.&lt;/span&gt;&lt;span class="s1"&gt;tenpx-top-bottom &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;margin&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;10&lt;/span&gt;&lt;span 
class="s4"&gt;px &lt;/span&gt;&lt;span class="s3"&gt;0 10&lt;/span&gt;&lt;span class="s4"&gt;px &lt;/span&gt;&lt;span class="s3"&gt;0&lt;/span&gt;&lt;span 
class="s0"&gt;; 
} 

.&lt;/span&gt;&lt;span class="s2"&gt;clear &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;/span&gt;&lt;span class="s2"&gt;clear&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;both&lt;/span&gt;&lt;span 
class="s0"&gt;; 
}&lt;/span&gt;&lt;/pre&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/y7dzvddBGrY" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/css_framework</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/my_first_seam_2_0</guid>
<title>My first Seam 2.0 app</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/vM4AgOkVSAw/my_first_seam_2_0</link>
<pubDate>Wed, 1 Aug 2007 11:35:57 -0400</pubDate> 
<category>Java</category> 
<category>flying</category> 
<category>hibernate</category> 
<category>java</category> 
<category>jsf</category> 
<category>saucer</category> 
<category>seam</category> 
<category>trinidad</category> 
<description>&lt;p&gt;Before I begin, let me say thank you! thank you! thank you! for the extended EL in Seam. On a previous project, I was using straight JSF 1.1/1.2(Myfaces) and the extended EL alone, makes Seam a worthwhile choice.&lt;/p&gt; 

&lt;p&gt;This article is about an application that is relatively simple (to start). A report with customer information that has pretty charts and graphs and is printable to PDF. Since I didn't have any requirements to start, I thought I would list a few of my own here ;)&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;JSF &amp;amp; Seam 
&lt;ul&gt; 
&lt;li&gt;RESTful URL's&lt;/li&gt; 
&lt;li&gt;EJB3/Hibernate&lt;/li&gt; 
&lt;li&gt;Local, rapid, development&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/li&gt; 
&lt;li&gt;Maven 2&lt;/li&gt; 
&lt;li&gt;Charts&lt;/li&gt; 
&lt;li&gt;Html 2 PDF functionality&lt;/li&gt; 
&lt;/ul&gt; 

&lt;h2&gt;JSF &amp;amp; Seam &lt;/h2&gt; 
&lt;p&gt;When I started development, Seam was at v.1.2, Embedded EJB (aka Embedded Jboss) was at RC9, and Jetty was being used for local dev and testing. I was able to get a jump start from the guys over at &lt;a href="http://software.softeu.cz/archetypes/seam/"&gt;http://softeu.cz&lt;/a&gt; for the jetty/ejb/war deployment and I found a rouge project on the seam boards called JBossSeamDVDStore that gave me the ejb Maven archetype ideas/best practice. &lt;/p&gt; 

&lt;p&gt;I went through some good (and bad) code getting the embedded RC9 stuff working with Jetty. It boiled down to &lt;a href="http://www.jboss.com/index.html?module=bb&amp;op=viewtopic&amp;t=110555"&gt;this post&lt;/a&gt; showing why and what I did.&lt;/p&gt; 

&lt;p&gt;The good and bad news now is that Embedded EJB3 is now Embedded Jboss and Embedded Jboss only works with Tomcat (for now) and here is &lt;a href="http://wiki.jboss.org/wiki/Wiki.jsp?page=WhatRefactoringsWereDoneToEnableEmbeddedJBoss"&gt;a post explaining&lt;/a&gt; why it's this way. But this could also be a blueprint for creating the same thing for Jetty, I just don't have the time to do it right now.&lt;/p&gt; 

&lt;p&gt;&lt;a href="http://www.google.com/notebook/public/09243180899526162200/BDRKQSgoQ77rF_7Yi"&gt;Here is a list&lt;/a&gt; of resources I found useful while researching.&lt;p&gt; 

&lt;h2&gt;RESTful URL's&lt;/h2&gt; 
&lt;p&gt;The #1 biggest complaint using JSF is no RESTful urls, and Seam does a great job of solving it. The only problem I have now is double execution when the user does a postback to a page that has a action mapped in pages.xml. The form I'm submitting calls the same action as the url I have mapped for REST support. I haven't spent alot of time with it and it may be total user error, but it would be nice if double action execution did NOT happen naturally.&lt;/p&gt; 

&lt;h2&gt;EJB3/Hibernate&lt;/h2&gt; 
&lt;p&gt;Using seam-gen, in Oracle, a few tables had null id fields and no primary key - The generated entity bean was genned as a object with one member (an ID) and I guess it was considering the entire record (all columns) as a unique. Being new to EntityBean/Generated hibernate code, it took us a few hours to figure this out, but once we saw that the data model was screwed up and how seam-gen handled it, the fix was easy.&lt;/p&gt; 

&lt;h2&gt;Local, rapid, development&lt;/h2&gt; 
&lt;p&gt;This was mentioned a little in the first paragraph. I wanted a faster, local build environment than what was currently offered by the company I'm working for. They are heavily tied to ant and there were 0 projects using Maven. So, being the completely crazy person that I am, I introduced a new build method with Maven 2, a new Framework wrapper (Seam), and a local build on the developers laptop with hot deploy. I know Jboss AS offers hot deploy, but I really wanted to use Jetty with Embedded Jboss. Since, that isn't currently implemented, I went with the next best thing and used Tomcat. My current company gives every developer a Solaris box to build on, all builds/projects are tied to building on Solaris. When one tries to use IntelliJ Idea over a Samba mount, you will quickly see how much it brings down overall performance and speed. There are other pluses that I could go into on local dev opposed to a remote *nix box, but I will stop here.&lt;/p&gt; 

&lt;h2&gt;Maven 2&lt;/h2&gt; 
&lt;p&gt;When you have 100's of projects on Ant and everyone in the company is pro Ant because so much time has been invested into the current build environment, you really feel like your going against the grain. However, most of us in the open source world, that are consultants, have seen the light on other projects and we bring new things into whoever we are working for. This is what I did. I eventually gained a few supporters, because everyone knows what happens when you are close minded to innovation.&lt;/p&gt; 

&lt;h2&gt;Charts&lt;/h2&gt; 
&lt;p&gt;I think using the Trinidad Charts are what WOW'd the upper management the most. Since this company has a distributed computing environment with no admin rights, we had to get the security/network folks on board with the Adobe SVG plugin. I heard the Renesis viewer is pretty good also and we will probably move to it later since Adobe is killing support on their plugin.&lt;/p&gt; 

&lt;h2&gt;Html 2 PDF functionality&lt;/h2&gt; 
&lt;p&gt; 
PD4ML: I started with this HTML2PDF renderer. It was super easy to get hooked up to the app. I structured my xhtml and css for both screen and print media types, but due to lack of CSS 2.1 support and very limited subset of css and html support, the output was terrible and required alot of rework just for this PDF to render half way decent. And it costs money :( 
&lt;/p&gt; 
&lt;p&gt; With the output coming out horrible in PD4ML, I took a look at &lt;a href="https://xhtmlrenderer.dev.java.net/r7/feature-list.html"&gt;a pure xhtml renderer, Flying Saucer. &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;FS Almost instantly rendered all of my XHTML correctly on the first render. I had to make a few adjustments for things like CSS page-break properties and border-collapse. And, before I could even get the page to render I had to clean up the legacy HTML that some &lt;a href="https://issues.apache.org/jira/browse/TRINIDAD-111"&gt;JSF renderers output&lt;/a&gt; (I ran tests with both Jtidy and NekoHTML) - both did the trick and I couldn't tell a difference. All the JSF folks that I have talked to welcome feature requests for XHTML compliance. 
&lt;/p&gt; 
&lt;p&gt; 
&lt;a href="http://www.pdoubleya.com/projects/flyingsaucer/demo/r7/browser/browser_demo.jnlp"&gt;This demo&lt;/a&gt; shows some pretty cool stuff from Flying Saucer and what it can do. It is basically the same concept of iTunes web browser/desktop app. PDF isn't the end of the road either - they have examples on rendering the exact same XHTML content to PNG, SVG, and Excel - I'm sure there will be more. 
&lt;/p&gt; 
&lt;p&gt;There are probably a million more things in Seam that I could talk about here, that I completely can't live without. This article just touches on the real world stuff that I encountered while developing. &lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/vM4AgOkVSAw" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/my_first_seam_2_0</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/iphone_web_development</guid>
<title>iPhone Web Development</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/hTmZs1HbOI0/iphone_web_development</link>
<pubDate>Thu, 5 Jul 2007 22:28:30 -0400</pubDate> 
<category>Java</category> 
<description>&lt;div&gt; 
I broke down and got my 8gig iPhone on Tuesday. I have been using it pretty heavily and in just a sec, I will start with my list o' let downs. But first, I gotta say that whoever designed the &lt;a href="http://developer.apple.com/iphone/designingcontent.html"&gt;Optimizing Web Applications and Content for iPhone&lt;/a&gt; page from Apple has obviously not done a lot of open-source or ANY development for that matter. Yes, it is good content, BUT This may or may not be one of the weak links for apple because there is really no organization to the content, important bits of information are scattered here an there, and frankly for something "so revolutionary" - they are not supporting the people who will make or break this thing (us - the developer) with good documentation very well. It honestly looks like they threw this together in a few hours/days. OK, on to the list....&lt;/div&gt;&lt;img src="http://www.jroller.com/resources/w/wesleyhales/DSC_2051-2.JPG" alt="" style="float:right"/&gt; 
&lt;dl&gt; 
&lt;dt style="font-weight:bold;color:#383838;padding:3px 0 3px 0"&gt;Safari keeps crashing&lt;/dt&gt; 
&lt;dd&gt;I have been trying to use google pretty heavily for Analytics, Adwords, Reader, etc... Although you can't view any Flash through the iPhone's Safari web browser, you can view all graphs in Google Analytics by exporting to pdf. So a few clicks into my Google apps usually leads to Safari blowing up and taking me back to the main iPhone screen.&lt;/dd&gt; 
&lt;dt style="font-weight:bold;color:#383838;padding:3px 0 3px 0"&gt;No Flash, SVG, Java applets or anything other than Quicktime supported media (listed below...)&lt;/dt&gt; 
&lt;dd&gt; 
&lt;table&gt; 
&lt;tr&gt; 
&lt;th style="color:#888888"&gt;MIME type&lt;/th&gt; 
&lt;th style="color:#888888"&gt;Description&lt;/th&gt; 
&lt;th style="color:#888888"&gt;Extensions&lt;/th&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;audio/aiff&lt;/td&gt; 
&lt;td&gt;AIFF audio&lt;/td&gt; 
&lt;td&gt;aiff, aif, aifc, cdda&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;audio/x-mp3&lt;/td&gt; 
&lt;td&gt;MP3 audio&lt;/td&gt; 
&lt;td&gt;mp3, swa&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;audio/x-m4a&lt;/td&gt; 
&lt;td&gt;AAC audio&lt;/td&gt; 
&lt;td&gt;m4a&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;video/x-m4v&lt;/td&gt; 
&lt;td&gt;Video&lt;/td&gt; 
&lt;td&gt;m4v&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;video/3gpp&lt;/td&gt; 
&lt;td&gt;3GPP media&lt;/td&gt; 
&lt;td&gt;3gp, 3gpp&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;audio/x-m4b&lt;/td&gt; 
&lt;td&gt;AAC audio book&lt;/td&gt; 
&lt;td&gt;m4b&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;audio/mpeg&lt;/td&gt; 
&lt;td&gt;MPEG audio&lt;/td&gt; 
&lt;td&gt;mpeg, mpg, mp3, swa&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;audio/x-mpeg&lt;/td&gt; 
&lt;td&gt;MPEG audio&lt;/td&gt; 
&lt;td&gt;mpeg, mpg, mp3, swa&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;audio/x-wav&lt;/td&gt; 
&lt;td&gt;WAVE audio&lt;/td&gt; 
&lt;td&gt;wav, bwf&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;audio/amr&lt;/td&gt; 
&lt;td&gt;AMR audio&lt;/td&gt; 
&lt;td&gt;amr&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;audio/3gpp&lt;/td&gt; 
&lt;td&gt;3GPP media&lt;/td&gt; 
&lt;td&gt;3gp, 3gpp&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;audio/x-m4p&lt;/td&gt; 
&lt;td&gt;AAC audio (protected)&lt;/td&gt; 
&lt;td&gt;m4p&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;audio/x-aiff&lt;/td&gt; 
&lt;td&gt;AIFF audio&lt;/td&gt; 
&lt;td&gt;aiff, aif, aifc, cdda&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;audio/mpeg3&lt;/td&gt; 
&lt;td&gt;MP3 audio&lt;/td&gt; 
&lt;td&gt;mp3, swa&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;audio/mp3&lt;/td&gt; 
&lt;td&gt;MP3 audio&lt;/td&gt; 
&lt;td&gt;mp3, swa&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;video/quicktime&lt;/td&gt; 
&lt;td&gt;QuickTime Movie&lt;/td&gt; 
&lt;td&gt;mov, qt, mov, qt, mqv&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;audio/x-mpeg3&lt;/td&gt; 
&lt;td&gt;MP3 audio&lt;/td&gt; 
&lt;td&gt;mp3, swa&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;video/3gpp2&lt;/td&gt; 
&lt;td&gt;3GPP2 media&lt;/td&gt; 
&lt;td&gt;3g2, 3gp2&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;video/mp4&lt;/td&gt; 
&lt;td&gt;MPEG-4 media&lt;/td&gt; 
&lt;td&gt;mp4&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;audio/mp4&lt;/td&gt; 
&lt;td&gt;MPEG-4 media&lt;/td&gt; 
&lt;td&gt;mp4&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr&gt; 
&lt;td&gt;audio/wav&lt;/td&gt; 
&lt;td&gt;WAVE audio&lt;/td&gt; 
&lt;td&gt;wav, bwf&lt;/td&gt; 
&lt;/tr&gt; 
&lt;tr class="dark"&gt; 
&lt;td&gt;audio/3gpp2&lt;/td&gt; 
&lt;td&gt;3GPP2 media&lt;/td&gt; 
&lt;td&gt;3g2, 3gp2&lt;/td&gt; 
&lt;/tr&gt; 
&lt;/table&gt;	
&lt;/dd&gt; 
&lt;dt style="font-weight:bold;color:#383838;padding:3px 0 3px 0"&gt;&lt;quote&gt;JavaScript execution is limited to 5 seconds for each top-level entry point. If your script executes longer than 5 seconds, an exception is raised.&lt;/quote&gt;&lt;/dt&gt; 
&lt;dd&gt;I don't see this as being a huge issue, but I guess it depends on how complicated your .js is. Anything longer than a 5 sec. javascript animation is pretty bad IMO. I'm not sure what else in the confines of an iPhone app would take longer than the alotted 5 seconds.&lt;/dd&gt;	
&lt;/dl&gt; 
&lt;dt style="font-weight:bold;color:#383838;padding:3px 0 3px 0"&gt;If you're serving up video, you better make it clear for the ones who are on EDGE opposed to WI-FI. &lt;/dt&gt;&lt;dd&gt;Almost like the old days of a split screen website with a "Flash" or "HTML" version of the site. Although this won't be as bad because it is just video, not the entire layout of your site.&lt;/dd&gt; 
&lt;p&gt; 
Other than a few bugs, and I would be stupid not to expect any, I love the iPhone and the concept of a standardized web browser! yeah! It has alot of cool stuff and has TONS of potential. So, here are the main things you can do in a web page to interact with the iPhone: (hold your oh's and ah's for the end please ;)&lt;/p&gt; 
&lt;p&gt; 
Call a number: 
&lt;quote&gt;&lt;code&gt; 
&lt;a href="tel:1-408-555-5555"&gt;1-408-555-5555&lt;/a&gt; 
&lt;/code&gt;&lt;/quote&gt; 
&lt;/p&gt; 
&lt;p&gt; 
Send a email: 
&lt;quote&gt;&lt;code&gt; 
&lt;a href="mailto:frank@wwdcdemo.example.com"&gt;John Frank&lt;/a&gt; 
&lt;/code&gt;&lt;/quote&gt; 
&lt;/p&gt; 
&lt;p&gt; 
A location on the embedded Google maps app: 
&lt;quote&gt;&lt;code&gt; 
&lt;a href="http://maps.google.com/maps?q=cupertino"&gt;Cupertino&lt;/a&gt; 
&lt;/code&gt;&lt;/quote&gt; 
&lt;/p&gt; 
&lt;p&gt; 
Or driving directions: 
&lt;quote&gt;&lt;code&gt; 
&lt;a href="http://maps.google.com/maps?daddr=San+Francisco,+CA&amp;saddr=cupertino"&gt;Directions&lt;/a&gt;
&lt;/code&gt;&lt;/quote&gt; 
&lt;/p&gt; 
&lt;p&gt;I know, I know, so much to choose from right? Don't get to crazy all at once and right a mailto app ;). But seriously, I guess there are some cool things one can do to make full use of the integration features. I have been trying to think of a cool mash-up and I'm thinking maybe something with IPTV and quicktime conversion, or using slimserver to serve up what you can't store on the 8gig limit. Maybe startup a slimserver directory using google maps??? Yeah - maybe I should think on this one a little longer.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/hTmZs1HbOI0" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/iphone_web_development</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/acceptance_to_jboss_labs</guid>
<title>Acceptance to Jboss Labs</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/T7QKkxFHqzg/acceptance_to_jboss_labs</link>
<pubDate>Mon, 9 Apr 2007 11:27:48 -0400</pubDate> 
<category>Life</category> 
<description>&lt;p&gt;I woke this morning to find a very nice surprise in my email....&lt;/p&gt; 
&lt;quote&gt; 
&lt;pre&gt; 
Dear Wesley Hales, 

I am happy to inform you that your application to become 
a contributor to JBoss has been accepted. Your name should 
now be visible on the contributors list on labs.jboss.com. 

The JBoss Labs team. 
&lt;/pre&gt; 
&lt;/quote&gt; 
&lt;p&gt; 
This is my first open source project so I am pretty stoked about it. Now I just have to keep myself from getting burnt-out ;). 
&lt;/p&gt; 
&lt;p&gt; 
&lt;a href="http://labs.jboss.com/portal/developers/join"&gt;This article&lt;/a&gt; from Jboss' CTO is really interesting and well stated about joining open source projects. I highly recommend it to anyone looking to join a community/project. 
&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/T7QKkxFHqzg" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/acceptance_to_jboss_labs</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/jsf_component_developmment_with_the</guid>
<title>JSF components with the Ajax4jsf cdk</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/yozP_7f7vlI/jsf_component_developmment_with_the</link>
<pubDate>Wed, 14 Mar 2007 08:04:12 -0400</pubDate> 
<category>Java</category> 
<description>&lt;p&gt;The &lt;a href="http://labs.jboss.com/portal/jbossrichfaces"&gt;Ajax4jsf cdk&lt;/a&gt; (component development kit) from the Richfaces/Ajax4jsf development team makes the monotonous coding 
and complexities of developing JSF components for both JSP and Facelets almost non-existent. With a small 
amount of setup and a little framework knowledge (covered below), you can generate a complete JSF component 
that allows the developer to focus on what is most important to them.&lt;/p&gt; 

&lt;h2&gt;Getting Started&lt;/h2&gt; 

&lt;p&gt; 
Make sure you are using the latest version of Maven (I'm on 2.0.5) 
&lt;br/&gt; 
If you don't have Maven... 
&lt;ul&gt; 
&lt;li&gt;Download &lt;a href="http://maven.apache.org/download.html"&gt;here&lt;/a&gt; and install on your machine.&lt;/li&gt; 
&lt;li&gt;Add Maven bin folder to your PATH&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/p&gt; 

&lt;p&gt; 
Add the following to your &lt;code&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;profile&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt; 
section in [your maven directory]/conf/settings.xml 

&lt;/p&gt; 
&lt;code&gt; 
&lt;pre&gt; 
&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;profile&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;ajax4jsf&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;repositories&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;repository&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;releases&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;true&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;releases&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;snapshots&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;false&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;updatePolicy&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;never&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;updatePolicy&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;snapshots&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;repository.jboss.com&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;Jboss Repository for Maven&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s3"&gt;http://repository.jboss.com/maven2/&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;layout&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;default&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;layout&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;repository&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;repository&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;releases&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;false&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;releases&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;snapshots&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;true&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;updatePolicy&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;always&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;updatePolicy&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;snapshots&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;maven2-snapshots.jboss.com&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;Jboss Repository for Maven Snapshots&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;http://snapshots.jboss.com/&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;layout&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;default&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;layout&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;repository&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;repositories&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;pluginRepositories&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;pluginRepository&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;maven2-snapshots.jboss.com&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;Jboss Repository for Maven Snapshots&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;http://snapshots.jboss.com/&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;releases&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;false&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;releases&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;snapshots&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;true&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;updatePolicy&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;always&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;updatePolicy&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;snapshots&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;pluginRepository&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;pluginRepository&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;releases&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;true&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;releases&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;snapshots&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;false&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;enabled&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;updatePolicy&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;never&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;updatePolicy&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;snapshots&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;repository.jboss.com&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;Jboss Repository for Maven&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s3"&gt;http://repository.jboss.com/maven2/&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;layout&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;default&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;layout&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;pluginRepository&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;pluginRepositories&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;profile&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt; 
&lt;/code&gt; 



&lt;p&gt; 
...Just after the closing &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;profile&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt; add the following: &lt;/p&gt;
&lt;pre&gt; 
&lt;code&gt; 
&lt;a name="l53"/&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;activeProfiles&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span 
class="s2"&gt; 
&lt;a name="l54"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;activeProfile&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;ajax4jsf&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;activeProfile&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l55"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;activeProfiles&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt; 
&lt;/pre&gt; 
&lt;/p&gt; 


&lt;a name="setup"&gt;&lt;h2&gt;Project Setup and Installation&lt;/h2&gt;&lt;/a&gt; 

&lt;p style="margin:0 0 10px 0"&gt;You will need to checkout the RichFaces project before you begin development. 

&lt;div class="dotted-grey-underline"&gt;&lt;/div&gt; 
&lt;h3&gt;RichFaces&lt;/h3&gt; 
&lt;ul&gt; 
&lt;li&gt;Use Subversion and checkout the trunk from RichFaces(https://svn.jboss.org/repos/richfaces/trunk)&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;mvn install&lt;/code&gt; in the root richfaces project, also navigate to the richfaces/assembly 
directory and run &lt;code&gt;mvn install&lt;/code&gt; again. 
&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/p&gt; 
&lt;div class="dotted-grey-underline"&gt;&lt;/div&gt; 
&lt;p&gt;To start the initial component development, in [richfaces project root]/richfaces, run create.bat (or create.sh on 
*nix) "and the name of your component" - i.e. &lt;code&gt;create.bat MyComponentName&lt;/code&gt;. This command creates an empty 
project and now you need to add at least one component to it.&lt;/p&gt; 

&lt;p&gt;&lt;a name="bug1"/&gt;First thing is to compile your project by navigating to its root directory and running &lt;code&gt;mvn install&lt;/code&gt;. 
*Note - I had to remove 2 dependencies from the pom.xml file that were generated (This should be fixed soon)... 
&lt;pre&gt; 
&lt;code&gt; 
&lt;a name="l56"/&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l57"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span 
class="s3"&gt;javax.servlet&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l58"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;jsp-api&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l59"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span 
class="s3"&gt;2.0&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l60"/&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span 
class="s2"&gt; 
&lt;a name="l61"/&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l62"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span 
class="s3"&gt;javax.faces&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l63"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;jsf-api&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span 
class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l64"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span 
class="s3"&gt;1.1_02&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span 
class="s2"&gt; 
&lt;a name="l65"/&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt; 
&lt;/pre&gt; 
&lt;br/&gt; 
&lt;/p&gt; 
&lt;a name="project-setup"/&gt; 
&lt;p&gt;Once you are able to install/compile your new project you are almost done with the setup. 
**This would be a great time to install the maven &lt;a 
href="http://maven.apache.org/plugins/maven-idea-plugin/source-repository.html"&gt;Idea&lt;/a&gt; or &lt;a 
href="http://maven.apache.org/eclipse-plugin.html"&gt;Eclipse&lt;/a&gt; plugin to generate your project files if you 
haven't already done so, trust me... this is one of the best things about Maven. 
&lt;/p&gt; 



&lt;p&gt;Now lets add a component to your new project:&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;Navigate to [richfaces project root]/richfaces/MyComponentName and run &lt;code&gt;mvn cdk:create -U -cpu -Dname=&amp;lt;MyComponentName&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;li&gt;*Note - This command creates a component based on UIComponentBase. To use another base class, you can add the 
additional parameter to the command:&lt;br/&gt; 
&lt;code&gt;DbaseClass=&amp;lt;baseClass&amp;gt;&lt;/code&gt; 
&lt;br/&gt; 
&lt;i&gt;Where &amp;lt;baseClass&amp;gt; is a full class name, for example:&lt;/i&gt; 
&lt;br/&gt; 
-DbaseClass=org.richfaces.MyComponentName 
&lt;/li&gt; 
&lt;/ul&gt; 

&lt;p&gt; 
Again, lets compile to make sure everything went as planned...navigate to the component project home directory, and 
perform: &lt;code&gt;mvn install -e&lt;/code&gt;. 
&lt;br/&gt; 
If the job is done you should see "BUILD SUCCESSFUL" on the console. The "MyComponentName"/target folder appears and 
it should contain MyComponentName-1.0-SNAPSHOT.jar file. If so, the component is created and you can now get "down 
and dirty" developing it. 
&lt;/p&gt; 

&lt;p&gt;**One quick developer note: After this little setup is done, you will see the major benefits of developing components 
with this cdk. It really is better/faster IMO than doing things from scratch. For instance, the xhtml 
for your renderer is in a template file! You won't have to build your tags and attributes in a java file, the cdk 
allows you to have a seperate template to make things a little more comfortable on the UI side. And you can mix the 
two, some conditional code that is better left in the renderer class can stay there, and the UI tags/markup can go 
in the template.&lt;/p&gt; 

&lt;h2&gt;Component Development Overview&lt;/h2&gt; 

&lt;p&gt; 
Okay, so now we get to the "fun" stuff. First thing is the design of your component, so you need to answer/do the following: 
&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;Design a XHTML mockup of your component. Create all the necessary functional html,css and javascript. Don't 
worry about form submits or ajax yet (if possible). Just play the role of someone who only knows HTML and Javascript for this part.&lt;/li&gt; 
&lt;li&gt;What attributes is your component going to have? All of the basic passthrough attributes are automatically provided, so just 
decide what functionally you want the end user to be able to control through the use of component attributes. This &lt;a href="https://ezfaces.dev.java.net/factoryDocs/entityTable.rtf"&gt; entity table&lt;/a&gt; is your reference for attributes that are accessible through the RichFaces cdk.&lt;/li&gt; 
&lt;li&gt;Do you want your component to fire custom events?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Project Structure&lt;/h3&gt; 
&lt;p&gt;Next, you need to understand the project structure and what is editable and what isn't. Following is the structure of your project: 

&lt;pre&gt; 
&lt;code&gt; 
pom.xml - component project Maven configuration 
velocity.log - log file from velocity engine (must be ignored, will be removed) 
src/main/config/component/&amp;lt;components&amp;gt;.xml - your component descriptor file 
src/main/java/* - java sources for your component classes, by default the only abstract component class is generated 
src/main/resources - your resources (images, css, java script) must be there. 
src/main/template - your rendering templates must be there. By default &lt;component&gt;.jspx is generated. 
&lt;/code&gt; 
&lt;/pre&gt; 

&lt;/p&gt; 

&lt;h3&gt;Templates&lt;/h3&gt; 
&lt;p&gt;This is what I was talking about earlier, instead of writing all the code for your HTML in a renderer class, you can 
develop it in a .jsp and the cdk will convert it into the renderer for you. Here a few features:&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;&lt;code&gt;&amp;lt;h:styles&amp;gt;css/MyComponent.xcss&amp;lt;/h:styles&amp;gt;&lt;/code&gt;
&lt;br/&gt; 
This is the method of declaring your css resource. It is relative to the actual rendering class, it will be taken from 
&lt;code&gt;renderkit/html/css/MyComponent.xcss&lt;/code&gt;. 
&lt;/li&gt; 
&lt;li&gt; 
As you can see in your generated template file, most of the namespace declarations are not like a normal JSF page. 
These are cdk/framework dependent tags. 
&lt;pre&gt; 
xmlns:f="http://ajax4jsf.org/cdk/template" 
xmlns:c=" http://java.sun.com/jsf/core" 
xmlns:ui=" http://ajax4jsf.org/cdk/ui" 
xmlns:u=" http://ajax4jsf.org/cdk/u" 
xmlns:x=" http://ajax4jsf.org/cdk/x" 
xmlns:h="http://jsf.exadel.com/header" 
&lt;/pre&gt; 
&lt;/li&gt; 
&lt;/ul&gt; 

&lt;h3&gt;Resource Handling&lt;/h3&gt; 
&lt;div class="dotted-grey-underline"&gt;&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;Important!&lt;/strong&gt; You must use org.ajax4jsf.framework.renderer.HeaderResourcesRendererBase as a base renderer class in order to use resources. 
&lt;div style="overflow-x:auto; width:500px;"&gt; 
&lt;img src="http://www.jroller.com/resources/w/wesleyhales/HeaderRendererExample.Jpg" alt=""/&gt; 
&lt;/div&gt;&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;&amp;lt;f:resource name="/org/richfaces/renderkit/html/images/your_image_file.gif" var="arrow" /&amp;gt; allows your component to serve image resource direclty from the jar. 
This way all dependencies are located in one location.&lt;/li&gt;
&lt;li&gt;To add javascript files to your template use: &lt;br/&gt;&amp;lt;h:scripts&amp;gt;new org.ajax4jsf.framework.resource.PrototypeScript(),"your_custom_script.js"&amp;lt;/h:scripts&amp;gt;
I am adding Prototype (which is managed by the RichFaces/A4J framework) and a custom script demo file name. **Note the format of this line, don't add line breaks or they won't be included, it must all be on one line.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div class="dotted-grey-underline"&gt;&lt;/div&gt; 
&lt;p&gt;To get a better understanding and more complete references, look at source for the &lt;a href="http://livedemo.exadel.com/richfaces-demo/richfaces/panel.jsf?c=panel"&gt;Panel&lt;/a&gt; or &lt;a href="http://livedemo.exadel.com/richfaces-demo/richfaces/dataFilterSlider.jsf?c=dataFilterSlider"&gt;dataFilterSlider&lt;/a&gt; component. Each component uses different techniques and features so if you are stuck, 
it is good to look at each component's source, or the one that is closest in features to what you are trying to accomplish.&lt;/p&gt; 

&lt;p&gt;These are the basics of developing with the RichFaces cdk, now I will go over implementing the skeleton you created in the previous steps.&lt;/p&gt; 
&lt;br/&gt; 


&lt;h2&gt;Developing a Richfaces Component&lt;/h2&gt; 
&lt;p&gt;If you havent already done so, &lt;a href="#setup"&gt;see setup&lt;/a&gt;. Here we are going to develop a simple output component. 
If you followed along above and generated a different project, just use what you have and ignore steps 1-6 below. 
Most of the work will been done through the cdk generation, which leaves us with the following tasks:&lt;/p&gt; 
&lt;ol&gt; 
&lt;li&gt;Navigate to [richfaces project root]/richfaces&lt;/li&gt; 
&lt;li&gt;run &lt;code&gt;create.bat outputExample&lt;/code&gt;&lt;/li&gt; 
&lt;li&gt;Navigate to [richfaces project root]/richfaces/outputExample&lt;/li&gt; 
&lt;li&gt;run &lt;code&gt;mvn cdk:create -U -cpu -Dname=OutputExample&lt;/code&gt;&lt;/li&gt; 
&lt;li&gt;**Optional I'm using Idea so I run &lt;code&gt;mvn idea:idea&lt;/code&gt; at the project root to &lt;a href="#project-setup"&gt;re-generate my project files.&lt;a/&gt;&lt;/li&gt; 
&lt;li&gt;Dont forget to remove the dependencies mentioned &lt;a href="#bug1"&gt;here&lt;/a&gt; from your pom.xml in your newly generated project.&lt;/li&gt; 
&lt;li&gt;Add the component attributes to &amp;lt;MyComponent&amp;gt;.xml&lt;/li&gt; 
&lt;li&gt;Take the html from our prototype and add to the renderer template/class.&lt;/li&gt; 
&lt;/ol&gt; 

&lt;h3&gt;Adding Attributes&lt;/h3&gt; 
&lt;p&gt;Go ahead and open &lt;code&gt;config/component/OutputExample.xml&lt;/code&gt;. Since this is a very basic component, I am going to add the following to : (Don't forget to reference the&lt;a href="https://ezfaces.dev.java.net/factoryDocs/entityTable.rtf"&gt; entity table&lt;/a&gt; for other attributes)&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;&amp;amp;html_events;&lt;/li&gt; 
&lt;li&gt;&amp;amp;html_style_attributes;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let's also add a custom attribtue for the ouput value:&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt; 
&lt;code&gt; 
&lt;pre&gt; 
&lt;a name="l1"/&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;property&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l2"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;stringValue&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l3"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;classname&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;java.lang.String&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;classname&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l4"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;description&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l5"/&gt; &lt;/span&gt;&lt;span class="s3"&gt;The output value&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l6"/&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;description&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l7"/&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;property&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt; 
&lt;/code&gt; 
&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Just add these lines under &lt;code&gt;&amp;amp;ui_component_attributes;&lt;/code&gt;. This will give you basic style passthrough attributes and html events like onclick handlers.&lt;/p&gt; 
&lt;p&gt;Now lets do a build... run &lt;code&gt;mvn install -e&lt;/code&gt;. If all is success ful, take a look at your OutputExampleRenderer in the target/generated-component folder. 
You should see the following generated code: &lt;div style="padding:5px 0 0 0;overflow-x:auto;width:500px;"&gt;&lt;img src="http://www.jroller.com/resources/w/wesleyhales/basicRenderer.Jpg" alt=""/&gt;&lt;/div&gt; &lt;/p&gt; 
&lt;p&gt;You should never change anything here. I just wanted you to see how these things are generated. Just by adding those few lines to your config, 
you automagically have a div with passthrough elements being generated as a component.&lt;/p&gt; 


&lt;h3&gt;Creating a Sample Project&lt;/h3&gt; 
&lt;p&gt;First, we need a sample project that we can test our 
component on. To create the outputExample-sample project that uses jetty for a testing server, navigate to the richfaces-samples directory 
and run &lt;code&gt;createProject.bat outputExample-sample&lt;/code&gt;. From here, all we have to do is add our component as a dependency to this project's 
pom.xml file:&lt;/p&gt; 

&lt;ul&gt; 
&lt;li&gt; 
First, replace everything in the dependencies section with: 
&lt;code&gt;&lt;pre&gt; 

&lt;a name="l1" /&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l2" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;org.richfaces&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l3" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;common&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l4" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;${project.version}&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l5" /&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l6" /&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l7" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;org.richfaces&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l8" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;outputExample&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l9" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;1.0-SNAPSHOT&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l10" /&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l11" /&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l12" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;javax.servlet&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l13" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;servlet-api&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l14" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;2.4&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l15" /&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l16" /&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l17" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;org.richfaces&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;groupId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l18" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;skins&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;artifactId&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l19" /&gt; &lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;${project.version}&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l20" /&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;dependency&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/code&gt; 
&lt;/li&gt; 
&lt;li&gt; 
Next, remove this line near the top of the file. 
&lt;code&gt; 
&lt;pre&gt; 
&lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt;1.0-SNAPSHOT&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;version&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt; 
&lt;/code&gt; 
&lt;/li&gt; 
&lt;/ul&gt; 

&lt;h3&gt;Implementing the Renderer&lt;/h3&gt; 
&lt;p&gt;In templates/org/richfaces/htmlOuputExample.jspx you will see the xhtml code for your renderer. This is where we will 
add the html from our prototype to be rendered as a component. All I did is add one line to output the value of the attribute "stringValue"...&lt;/p&gt; 
&lt;code&gt; 
&lt;pre&gt; 
&lt;a name="l1" /&gt;&lt;span class="s0"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="s1"&gt;xml version=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;1.0&amp;quot; &lt;/span&gt;&lt;span class="s1"&gt;encoding=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;?&amp;gt; 
&lt;a name="l2" /&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;f:root&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l3" /&gt; &lt;/span&gt;&lt;span class="s1"&gt;xmlns:f=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;http://ajax4jsf.org/cdk/template&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l4" /&gt; &lt;/span&gt;&lt;span class="s1"&gt;xmlns:c=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot; http://java.sun.com/jsf/core&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l5" /&gt; &lt;/span&gt;&lt;span class="s1"&gt;xmlns:ui=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot; http://ajax4jsf.org/cdk/ui&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l6" /&gt; &lt;/span&gt;&lt;span class="s1"&gt;xmlns:u=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot; http://ajax4jsf.org/cdk/u&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l7" /&gt; &lt;/span&gt;&lt;span class="s1"&gt;xmlns:x=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot; http://ajax4jsf.org/cdk/x&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l8" /&gt; &lt;/span&gt;&lt;span class="s1"&gt;class=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;org.richfaces.renderkit.html.OutputExampleRenderer&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l9" /&gt; &lt;/span&gt;&lt;span class="s1"&gt;baseclass=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;org.ajax4jsf.framework.renderer.AjaxComponentRendererBase&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l10" /&gt; &lt;/span&gt;&lt;span class="s1"&gt;component=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;org.richfaces.component.UIOutputExample&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l11" /&gt; &amp;gt;&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;a name="l12" /&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;f:clientid &lt;/span&gt;&lt;span class="s1"&gt;var=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;clientId&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;a name="l13" /&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;div &lt;/span&gt;&lt;span class="s1"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s5"&gt;#{&lt;/span&gt;&lt;span class="s0"&gt;clientId&lt;/span&gt;&lt;span class="s5"&gt;}&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l14" /&gt; &lt;/span&gt;&lt;span class="s1"&gt;name=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s5"&gt;#{&lt;/span&gt;&lt;span class="s0"&gt;clientId&lt;/span&gt;&lt;span class="s5"&gt;}&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l15" /&gt; &lt;/span&gt;&lt;span class="s1"&gt;x:passThruWithExclusions=&lt;/span&gt;&lt;span class="s3"&gt;&amp;quot;value,name,type,id&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; 
&lt;a name="l16" /&gt; &amp;gt;&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;a name="l17" /&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s4"&gt;p&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s5"&gt;#{&lt;/span&gt;&lt;span class="s0"&gt;component.attributes[&lt;/span&gt;&lt;span class="s6"&gt;'stringValue'&lt;/span&gt;&lt;span class="s0"&gt;]&lt;/span&gt;&lt;span class="s5"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;p&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;a name="l18" /&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;a name="l19" /&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s4"&gt;f:root&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt; 
&lt;/code&gt; 

&lt;p&gt;Now we can write a simple Jsp or Facelets page that will render our component in our outputExample-sample app. I am using jsp because that 
is supported by default in the generated sample app's web.xml file. If you want both Facelets and JSP's to render, check out some of the other 
sample projects web.xml file.&lt;/p&gt; 

&lt;code&gt; 
&lt;pre&gt; 
&lt;a name="l1" /&gt;&lt;span class="s0"&gt;&amp;lt;%@ &lt;/span&gt;&lt;span class="s1"&gt;taglib &lt;/span&gt;&lt;span class="s2"&gt;uri&lt;/span&gt;&lt;span class="s0"&gt;=&amp;quot;&lt;/span&gt;&lt;span class="s3"&gt;http://java.sun.com/jsf/html&lt;/span&gt;&lt;span class="s0"&gt;&amp;quot; &lt;/span&gt;&lt;span class="s2"&gt;prefix&lt;/span&gt;&lt;span class="s0"&gt;=&amp;quot;&lt;/span&gt;&lt;span class="s3"&gt;h&lt;/span&gt;&lt;span class="s0"&gt;&amp;quot; %&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l2" /&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;%@ &lt;/span&gt;&lt;span class="s1"&gt;taglib &lt;/span&gt;&lt;span class="s2"&gt;uri&lt;/span&gt;&lt;span class="s0"&gt;=&amp;quot;&lt;/span&gt;&lt;span class="s3"&gt;http://java.sun.com/jsf/core&lt;/span&gt;&lt;span class="s0"&gt;&amp;quot; &lt;/span&gt;&lt;span class="s2"&gt;prefix&lt;/span&gt;&lt;span class="s0"&gt;=&amp;quot;&lt;/span&gt;&lt;span class="s3"&gt;f&lt;/span&gt;&lt;span class="s0"&gt;&amp;quot;%&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l3" /&gt;&lt;/span&gt;&lt;span class="s0"&gt;&amp;lt;%@ &lt;/span&gt;&lt;span class="s1"&gt;taglib &lt;/span&gt;&lt;span class="s2"&gt;uri&lt;/span&gt;&lt;span class="s0"&gt;=&amp;quot;&lt;/span&gt;&lt;span class="s3"&gt;http://richfaces.ajax4jsf.org/outputExample&lt;/span&gt;&lt;span class="s0"&gt;&amp;quot; &lt;/span&gt;&lt;span class="s2"&gt;prefix&lt;/span&gt;&lt;span class="s0"&gt;=&amp;quot;&lt;/span&gt;&lt;span class="s3"&gt;output&lt;/span&gt;&lt;span class="s0"&gt;&amp;quot;%&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l4" /&gt; 
&lt;a name="l5" /&gt;&lt;/span&gt;&lt;span class="s5"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s6"&gt;html&lt;/span&gt;&lt;span class="s5"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l6" /&gt; &lt;/span&gt;&lt;span class="s5"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s6"&gt;head&lt;/span&gt;&lt;span class="s5"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l7" /&gt; &lt;/span&gt;&lt;span class="s5"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s6"&gt;title&lt;/span&gt;&lt;span class="s5"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s6"&gt;title&lt;/span&gt;&lt;span class="s5"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l8" /&gt; &lt;/span&gt;&lt;span class="s5"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s6"&gt;head&lt;/span&gt;&lt;span class="s5"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l9" /&gt; &lt;/span&gt;&lt;span class="s5"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s6"&gt;body&lt;/span&gt;&lt;span class="s5"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l10" /&gt; &lt;/span&gt;&lt;span class="s5"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s6"&gt;f:view&lt;/span&gt;&lt;span class="s5"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l11" /&gt; &lt;/span&gt;&lt;span class="s5"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s6"&gt;output:OutputExample &lt;/span&gt;&lt;span class="s7"&gt;stringValue=&lt;/span&gt;&lt;span class="s8"&gt;&amp;quot;this is a test value&amp;quot;&lt;/span&gt;&lt;span class="s5"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l12" /&gt; &lt;/span&gt;&lt;span class="s5"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s6"&gt;f:view&lt;/span&gt;&lt;span class="s5"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l13" /&gt; &lt;/span&gt;&lt;span class="s5"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s6"&gt;body&lt;/span&gt;&lt;span class="s5"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l14" /&gt;&lt;/span&gt;&lt;span class="s5"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s6"&gt;html&lt;/span&gt;&lt;span class="s5"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;a name="l15" /&gt;&lt;/span&gt; 
&lt;/pre&gt; 
&lt;/code&gt; 

&lt;p&gt;That's It!!! Just run &lt;code&gt;mvn jetty:run&lt;/code&gt; from your sample app root directory. You may want to clean things up in 
your component project and in your sample by running &lt;code&gt;mvn clean install&lt;/code&gt; first.&lt;/p&gt; 
&lt;div class="dotted-grey-underline"&gt;&lt;/div&gt; 
&lt;p&gt;So what's the eagsiest way to develop your component then test it out? I usually keep 2 terminal windows open, one at 
my component project root, and the other at the sample project root. This will allow you to run mvn install if you make 
changes to your component that can't be picked up by jetty. Also, one great thing about jetty is that it allows you 
to make changes to your project (xhtml and JSPs) and will automatically pick the changes up and deploy.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Don't forget - &lt;/strong&gt; Look at other components if you need a reference. This guide is just to get you up and running.&lt;/p&gt; 

&lt;p&gt;The following documents were used as references: &lt;br/&gt; 
&lt;a href="http://labs.jboss.com/wiki/UsingCDKStartUp"&gt;Creating Components with Components Factory&lt;/a&gt;&lt;br/&gt; 
&lt;a href="http://docs.google.com/View?docid=ddmtrs6k_21dccrvp"&gt;Component Factory RoadMap&lt;/a&gt;&lt;br/&gt;&lt;/p&gt; 
&lt;div class="dotted-grey-underline"&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/yozP_7f7vlI" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/jsf_component_developmment_with_the</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/another_blog_layout</guid>
<title>Another blog layout</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/89UumKPjTzw/another_blog_layout</link>
<pubDate>Sun, 11 Mar 2007 22:01:24 -0400</pubDate> 
<category>Design</category> 
<description>&lt;p&gt;So my current design is serving the purpose, but it seems a little "bland". I finally nailed down a design that is a little more frameworked. What I mean is, most of the time websites are designed to serve the content at hand. Which is fine in most cases, but I am looking for something more than just a "nice look" out of my designs. For some reason I can't get away from grey and other neutral colors. Maybe cause it's just the trend right now, but it seems to work and no matter what other colors I try in my designs, I always come back to grey. Also, the graphite pattern on the banner is kind of in style now (although it has been for the past 6 months), but by the time I code the css for this and integrate it into jroller - it will be time to do another design ?!?!&lt;/p&gt; 
&lt;div style="width:100%; text-align:center;"&gt; 
&lt;a href="/resources/w/wesleyhales/new-layout2.jpg"&gt;&lt;img src="/resources/w/wesleyhales/new-layout2_small.jpg" alt=""/&gt;&lt;/a&gt; 
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/89UumKPjTzw" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/another_blog_layout</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/my_first_mountable_bass</guid>
<title>My First Mountable Bass</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/0ofgJJKTehc/my_first_mountable_bass</link>
<pubDate>Sat, 10 Mar 2007 21:09:30 -0500</pubDate> 
<category>Life</category> 
<description>&lt;img style="float:right;" src="/resources/w/wesleyhales/fishing_cropped.gif" alt="" /&gt; 
&lt;p&gt;Needless to say, not much coding was done today. This is definitely the largest freshwater fish I have ever reeled into shore. I caught it at my parent's 5 acre lake in North Ga. The awesome fish (Spotted large mouth bass) weighed in right at 10.9 pounds!&lt;/p&gt; 

&lt;p&gt;So after a nice "persuading" talk with my wife, she agreed with me on taking my trophy to the taxidermist for a beautiful driftwood mount. I joked with her about hanging it in between her &lt;a href="http://www.siddickens.com/en/tiles_new.php"&gt;Memory Block&lt;/a&gt; collection :)&lt;/p&gt; 


&lt;br style="clear:both;"/&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/0ofgJJKTehc" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/my_first_mountable_bass</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/g4jsf_and_gwt</guid>
<title>JSF, Ajax, and the Back Button</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/7sJhZt8dhyU/g4jsf_and_gwt</link>
<pubDate>Wed, 21 Feb 2007 13:30:12 -0500</pubDate> 
<category>Java</category> 
<description>&lt;p&gt;For the last few weeks I have been trying to integrate back button support into a JSF/Ajax app as an "Undo" feature. I have been using 2 approaches, 1) &lt;A href=""&gt;g4jsf&lt;/a&gt; (a subproject of Ajax4JSF) to enable use of GWT, and 2) &lt;a href="http://manual.dojotoolkit.org/WikiHome/DojoDotBook/Book0"&gt;dojo.undo.browser&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Currently, any engineer interacting with the back button through javascript only has access to a few methods. &lt;code&gt;window.history.current&lt;/code&gt;, &lt;code&gt;window.history.next&lt;/code&gt;, &lt;code&gt;window.history.previous&lt;/code&gt;, and an array of history items with &lt;code&gt;window.history[]&lt;/code&gt;. Gwt and dojo give us a much more accessible way to deal with these same methods through Java and javascript .(along with a few other features) &lt;/p&gt; 
&lt;p&gt;My largest existing hurdle is getting the history or state of each view to be stored in some kind of *history cache*. And when the back button is clicked, each of those view should be able to work as first rendered. Or, you could save the POST string somehow and just re-POST that string when the back button is clicked. I was chatting with my buddy Mert Çaliskan, and he suggested that a custom ViewHandler may work or to use client side state saving, but I have not gotten around to testing those theories.&lt;/p&gt; 
&lt;p class="pTitle"&gt; 
The g4jsf (Java) approach 
&lt;/p&gt; 
&lt;p&gt; 
G4jsf basically wraps GWT and makes it complementary to JSF. My only use for it as of now is back button support. 
&lt;/p&gt; 
&lt;p&gt;Currently, I have a standard facelets page with a datatable nested in the a4j:form which is nested in a gwt:page. All I did was run through this &lt;a href="http://www.theserverside.com/tt/articles/article.tss?l=GWTandJSF"&gt;tutorial&lt;/a&gt;, created a basic widget that calls &lt;code&gt;History.newItem('my history item string')&lt;/code&gt; during &lt;code&gt;...new AsyncCallback(){...&lt;/code&gt;, and now I have a history widget that writes to the browser's back button. My main question now is, what do I store as 'my history item string'? Should it be (as mentioned above) a POST string that I can call later, or do I store my rendered view somewhere?&lt;/p&gt; 

&lt;p class="pTitle"&gt; 
The dojo.undo.browser (Javascript) approach 
&lt;/p&gt; 
&lt;p&gt; 
The dojo stuff is pretty straight forward. It obviously works in conjunction with dojo.io.bind, so my hopes were not very high when I started researching this. The results were suprising and gave me almost the same functionality as GWT. Another reason for going with this JSF/dojo approach is that g4jsf is not backwards compatible with JSF 1.1/Myfaces current version. 
&lt;/p&gt; 
&lt;p&gt; 
So, I am basically calling &lt;code&gt;dojo.undo.browser.addToHistory(state);&lt;/code&gt; during my a4j:form onsubmit. 
&lt;/p&gt; 
&lt;p&gt;Just as in the examples &lt;a href="http://manual.dojotoolkit.org/WikiHome/DojoDotBook/Book0"&gt;here&lt;/a&gt;, I am using a state object that gets called and then queues/calls another function when the back button is clicked. I'm still stuck with the same scenario of how to store the rendered JSF view, but now atleast I have started the ball rolling, and have 2 totally different aproaches doing the same thing. 
&lt;/p&gt; 
&lt;p&gt;If anyone has done something similar, please chime in :)&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/7sJhZt8dhyU" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/g4jsf_and_gwt</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/jsf_ajaxslider_component</guid>
<title>JSF AjaxSlider Component</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/g4Id6qwtIJM/jsf_ajaxslider_component</link>
<pubDate>Sun, 7 Jan 2007 17:21:41 -0500</pubDate> 
<category>Java</category> 
<description>&lt;p&gt;This is the first release of my AjaxSlider component. This version works with JSP and Facelets and also extends FacesEvent to provide it's own event/listener. Many thanks to Jonas Jacobi and John Fallows for putting together a great book (&lt;a href="http://apress.com/book/bookDisplay.html?bID=10044"&gt;Pro JSF and Ajax&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;I'm also using the &lt;a href="http://wiki.script.aculo.us/scriptaculous/show/SliderDemo"&gt;slider functions&lt;/a&gt; from the Script.aculo.us library&lt;/p&gt; 

&lt;p style="overflow:auto;"&gt; 
&lt;object width="425" height="350"&gt;&lt;param name="movie" value="http://www.youtube.com/v/Uy26gDkC3CQ"&gt;&lt;/param&gt;&lt;embed src="http://www.youtube.com/v/Uy26gDkC3CQ" type="application/x-shockwave-flash" width="425" height="350"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/p&gt; 
&lt;br/&gt; 
&lt;p&gt;This component in hardly complete and bug free, so any help in debugging is appreciated&lt;/p&gt; 
&lt;p&gt;Download the component source, examples, and all necessary resources &lt;a href="http://sourceforge.net/project/showfiles.php?group_id=137466"&gt;here&lt;/a&gt;(I also included my Idea project file in the download). I will be adding this code to JSF-Comp repository hopefully within the next day or two.&lt;/p&gt; 

&lt;p class="pTitle"&gt;Usage Option 1&lt;p&gt; 
&lt;p&gt;You can use AjaxSlider with the following options. This will only use listeners or submit the SliderEvent to a backing bean. It will give you more control in case you do not want to store the list, used in your datatable, in the session (described in option 2). Both listeners are not required, I just added them here to show examples on usage.&lt;/p&gt; 

&lt;pre&gt; 
&lt;code&gt; 
&lt;a name="l10"&gt; &lt;span class="s2"&gt;xmlns:hc=&lt;/span&gt;&lt;span class="s3"&gt;"http://www.halesconsulting.com/jsf"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l11"&gt; &lt;span class="s2"&gt;xmlns:ac=&lt;/span&gt;&lt;span class="s3"&gt;"http://ac"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l12"&gt; 
&lt;/a&gt;&lt;a name="l13"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;style&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l14"&gt; .&lt;span class="s5"&gt;range&lt;/span&gt;&lt;span class="s4"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l15"&gt; &lt;span class="s6"&gt;width&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;200&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l16"&gt; &lt;span class="s6"&gt;background&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s8"&gt;transparent &lt;/span&gt;&lt;span class="s5"&gt;url&lt;/span&gt;&lt;span class="s4"&gt;(&lt;/span&gt;&lt;span class="s8"&gt;"/facelet-sandbox/images/demo_bg.gif"&lt;/span&gt;&lt;span class="s4"&gt;) &lt;/span&gt;&lt;span class="s8"&gt;no-repeat &lt;/span&gt;&lt;span class="s5"&gt;center&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l17"&gt; &lt;span class="s6"&gt;height&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;20&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l18"&gt; } 
&lt;/a&gt;&lt;a name="l19"&gt; 
&lt;/a&gt;&lt;a name="l20"&gt; .&lt;span class="s5"&gt;Mytest&lt;/span&gt;&lt;span class="s4"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l21"&gt; &lt;span class="s6"&gt;background-color&lt;/span&gt;&lt;span class="s4"&gt;:&lt;/span&gt;&lt;span class="s8"&gt;transparent&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l22"&gt; } 
&lt;/a&gt;&lt;a name="l23"&gt; 
&lt;/a&gt;&lt;a name="l24"&gt; .&lt;span class="s5"&gt;trailer&lt;/span&gt;&lt;span class="s4"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l25"&gt; &lt;span class="s6"&gt;background&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s8"&gt;transparent &lt;/span&gt;&lt;span class="s5"&gt;url&lt;/span&gt;&lt;span class="s4"&gt;(&lt;/span&gt;&lt;span class="s8"&gt;"/facelet-sandbox/images/demo_bg_over.gif"&lt;/span&gt;&lt;span class="s4"&gt;) &lt;/span&gt;&lt;span class="s8"&gt;no-repeat &lt;/span&gt;&lt;span class="s7"&gt;0 7&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l26"&gt; &lt;span class="s6"&gt;height&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;20&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l27"&gt; &lt;span class="s6"&gt;width&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;114&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l28"&gt; } 
&lt;/a&gt;&lt;a name="l29"&gt; 
&lt;/a&gt;&lt;a name="l30"&gt; .&lt;span class="s5"&gt;track&lt;/span&gt;&lt;span class="s4"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l31"&gt; &lt;span class="s6"&gt;width&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;200&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l32"&gt; &lt;span class="s6"&gt;height&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;20&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l33"&gt; &lt;span class="s6"&gt;position&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s8"&gt;absolute&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l34"&gt; } 
&lt;/a&gt;&lt;a name="l35"&gt; 
&lt;/a&gt;&lt;a name="l36"&gt; .&lt;span class="s5"&gt;handle&lt;/span&gt;&lt;span class="s4"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l37"&gt; &lt;span class="s6"&gt;position&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s8"&gt;absolute&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l38"&gt; &lt;span class="s6"&gt;width&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;10&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l39"&gt; &lt;span class="s6"&gt;height&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;25&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l40"&gt; &lt;span class="s6"&gt;background&lt;/span&gt;&lt;span class="s4"&gt;:&lt;/span&gt;&lt;span class="s5"&gt;url&lt;/span&gt;&lt;span class="s4"&gt;(&lt;/span&gt;&lt;span class="s8"&gt;"/facelet-sandbox/images/demo_arrow.gif"&lt;/span&gt;&lt;span class="s4"&gt;) &lt;/span&gt;&lt;span class="s8"&gt;no-repeat &lt;/span&gt;&lt;span class="s5"&gt;center&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l41"&gt; &lt;span class="s6"&gt;cursor&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s5"&gt;col-resize&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l42"&gt; &lt;span class="s6"&gt;left&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;114&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l43"&gt; } 
&lt;/a&gt;&lt;a name="l44"&gt; 
&lt;/a&gt;&lt;a name="l45"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;style&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l46"&gt; 
&lt;/a&gt;&lt;a name="l47"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;a4j:form &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"form1" &lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l48"&gt; 
&lt;/a&gt;&lt;a name="l49"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;hc:ajaxSlider &lt;/span&gt;&lt;span class="s2"&gt;sliderListener=&lt;/span&gt;&lt;span class="s3"&gt;"#{sliderBean.doShow}"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l50"&gt; &lt;span class="s2"&gt;onSlide=&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s5"&gt;true&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l51"&gt; &lt;span class="s2"&gt;onChange=&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s5"&gt;true&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l52"&gt; &lt;span class="s2"&gt;storeResults=&lt;/span&gt;&lt;span class="s3"&gt;"false"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l53"&gt; &lt;span class="s2"&gt;trackStyleClass=&lt;/span&gt;&lt;span class="s3"&gt;"track"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l54"&gt; &lt;span class="s2"&gt;styleClass=&lt;/span&gt;&lt;span class="s3"&gt;"Mytest"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l55"&gt; &lt;span class="s2"&gt;startRange=&lt;/span&gt;&lt;span class="s3"&gt;"0"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l56"&gt; &lt;span class="s2"&gt;endRange=&lt;/span&gt;&lt;span class="s3"&gt;"50000"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l57"&gt; &lt;span class="s2"&gt;increment=&lt;/span&gt;&lt;span class="s3"&gt;"10000"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l58"&gt; &lt;span class="s2"&gt;rangeStyleClass=&lt;/span&gt;&lt;span class="s3"&gt;"range"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l59"&gt; &lt;span class="s2"&gt;trailer=&lt;/span&gt;&lt;span class="s3"&gt;"true"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l60"&gt; &lt;span class="s2"&gt;trailerStyleClass=&lt;/span&gt;&lt;span class="s3"&gt;"trailer"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l61"&gt; &lt;span class="s2"&gt;handleStyleClass=&lt;/span&gt;&lt;span class="s3"&gt;"handle"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l62"&gt; &lt;span class="s2"&gt;handleValue=&lt;/span&gt;&lt;span class="s3"&gt;"1"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l63"&gt; &lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"slider_1" &lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;hc:sliderListener &lt;/span&gt;&lt;span class="s2"&gt;type=&lt;/span&gt;&lt;span class="s3"&gt;"com.halesconsulting.web.action.MySliderListener" &lt;/span&gt;&lt;span class="s0"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;hc:ajaxSlider&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l64"&gt; 
&lt;/a&gt;&lt;a name="l65"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;a4j:form&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/a&gt; 
&lt;/code&gt; 
&lt;/pre&gt; 

&lt;p class="pTitle"&gt;Usage Option 2&lt;p&gt; 

&lt;p&gt;Here we store the list from the UIData object in the session by setting storeResults="true". Obviously, using this option will depend on your situation. But to get the best user experience out of the slider interaction, this was the only way.&lt;/p&gt; 

&lt;pre&gt; 
&lt;code&gt;&lt;a name="l10"&gt; &lt;span class="s2"&gt;xmlns:hc=&lt;/span&gt;&lt;span class="s3"&gt;"http://www.halesconsulting.com/jsf"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l11"&gt; &lt;span class="s2"&gt;xmlns:ac=&lt;/span&gt;&lt;span class="s3"&gt;"http://ac"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l12"&gt; 
&lt;/a&gt;&lt;a name="l13"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;style&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l14"&gt; .&lt;span class="s5"&gt;range&lt;/span&gt;&lt;span class="s4"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l15"&gt; &lt;span class="s6"&gt;width&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;200&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l16"&gt; &lt;span class="s6"&gt;background&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s8"&gt;transparent &lt;/span&gt;&lt;span class="s5"&gt;url&lt;/span&gt;&lt;span class="s4"&gt;(&lt;/span&gt;&lt;span class="s8"&gt;"/facelet-sandbox/images/demo_bg.gif"&lt;/span&gt;&lt;span class="s4"&gt;) &lt;/span&gt;&lt;span class="s8"&gt;no-repeat &lt;/span&gt;&lt;span class="s5"&gt;center&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l17"&gt; &lt;span class="s6"&gt;height&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;20&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l18"&gt; } 
&lt;/a&gt;&lt;a name="l19"&gt; 
&lt;/a&gt;&lt;a name="l20"&gt; .&lt;span class="s5"&gt;Mytest&lt;/span&gt;&lt;span class="s4"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l21"&gt; &lt;span class="s6"&gt;background-color&lt;/span&gt;&lt;span class="s4"&gt;:&lt;/span&gt;&lt;span class="s8"&gt;transparent&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l22"&gt; } 
&lt;/a&gt;&lt;a name="l23"&gt; 
&lt;/a&gt;&lt;a name="l24"&gt; .&lt;span class="s5"&gt;trailer&lt;/span&gt;&lt;span class="s4"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l25"&gt; &lt;span class="s6"&gt;background&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s8"&gt;transparent &lt;/span&gt;&lt;span class="s5"&gt;url&lt;/span&gt;&lt;span class="s4"&gt;(&lt;/span&gt;&lt;span class="s8"&gt;"/facelet-sandbox/images/demo_bg_over.gif"&lt;/span&gt;&lt;span class="s4"&gt;) &lt;/span&gt;&lt;span class="s8"&gt;no-repeat &lt;/span&gt;&lt;span class="s7"&gt;0 7&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l26"&gt; &lt;span class="s6"&gt;height&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;20&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l27"&gt; &lt;span class="s6"&gt;width&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;114&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l28"&gt; } 
&lt;/a&gt;&lt;a name="l29"&gt; 
&lt;/a&gt;&lt;a name="l30"&gt; .&lt;span class="s5"&gt;track&lt;/span&gt;&lt;span class="s4"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l31"&gt; &lt;span class="s6"&gt;width&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;200&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l32"&gt; &lt;span class="s6"&gt;height&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;20&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l33"&gt; &lt;span class="s6"&gt;position&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s8"&gt;absolute&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l34"&gt; } 
&lt;/a&gt;&lt;a name="l35"&gt; 
&lt;/a&gt;&lt;a name="l36"&gt; .&lt;span class="s5"&gt;handle&lt;/span&gt;&lt;span class="s4"&gt;{ 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l37"&gt; &lt;span class="s6"&gt;position&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s8"&gt;absolute&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l38"&gt; &lt;span class="s6"&gt;width&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;10&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l39"&gt; &lt;span class="s6"&gt;height&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;25&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l40"&gt; &lt;span class="s6"&gt;background&lt;/span&gt;&lt;span class="s4"&gt;:&lt;/span&gt;&lt;span class="s5"&gt;url&lt;/span&gt;&lt;span class="s4"&gt;(&lt;/span&gt;&lt;span class="s8"&gt;"/facelet-sandbox/images/demo_arrow.gif"&lt;/span&gt;&lt;span class="s4"&gt;) &lt;/span&gt;&lt;span class="s8"&gt;no-repeat &lt;/span&gt;&lt;span class="s5"&gt;center&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l41"&gt; &lt;span class="s6"&gt;cursor&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s5"&gt;col-resize&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l42"&gt; &lt;span class="s6"&gt;left&lt;/span&gt;&lt;span class="s4"&gt;: &lt;/span&gt;&lt;span class="s7"&gt;114&lt;/span&gt;&lt;span class="s8"&gt;px&lt;/span&gt;&lt;span class="s4"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l43"&gt; } 
&lt;/a&gt;&lt;a name="l44"&gt; 
&lt;/a&gt;&lt;a name="l45"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;style&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l46"&gt; 
&lt;/a&gt;&lt;a name="l47"&gt; 
&lt;/a&gt;&lt;a name="l48"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;a4j:form &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"form1" &lt;/span&gt;&lt;span class="s2"&gt;reRender=&lt;/span&gt;&lt;span class="s3"&gt;"list-body" &lt;/span&gt;&lt;span class="s2"&gt;ajaxSubmit=&lt;/span&gt;&lt;span class="s3"&gt;"true"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l49"&gt; 
&lt;/a&gt;&lt;a name="l50"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;a4j:region &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"stat1"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l51"&gt; 
&lt;/a&gt;&lt;a name="l52"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;a4j:outputPanel &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"slider-body"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l53"&gt; 
&lt;/a&gt;&lt;a name="l54"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;hc:ajaxSlider &lt;/span&gt;&lt;span class="s2"&gt;sliderListener=&lt;/span&gt;&lt;span class="s3"&gt;"#{sliderBean.doShow}"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l55"&gt; &lt;span class="s2"&gt;for=&lt;/span&gt;&lt;span class="s3"&gt;"carList"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l56"&gt; &lt;span class="s2"&gt;forValRef=&lt;/span&gt;&lt;span class="s3"&gt;"inventoryList.carInventory"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l57"&gt; &lt;span class="s2"&gt;filterBy=&lt;/span&gt;&lt;span class="s3"&gt;"getMileage"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l58"&gt; &lt;span class="s2"&gt;onSlide=&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s5"&gt;true&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l59"&gt; &lt;span class="s2"&gt;onChange=&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s5"&gt;true&lt;/span&gt;&lt;span class="s3"&gt;"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l60"&gt; &lt;span class="s2"&gt;storeResults=&lt;/span&gt;&lt;span class="s3"&gt;"true"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l61"&gt; &lt;span class="s2"&gt;trackStyleClass=&lt;/span&gt;&lt;span class="s3"&gt;"track"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l62"&gt; &lt;span class="s2"&gt;styleClass=&lt;/span&gt;&lt;span class="s3"&gt;"Mytest"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l63"&gt; &lt;span class="s2"&gt;startRange=&lt;/span&gt;&lt;span class="s3"&gt;"0"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l64"&gt; &lt;span class="s2"&gt;endRange=&lt;/span&gt;&lt;span class="s3"&gt;"50000"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l65"&gt; &lt;span class="s2"&gt;increment=&lt;/span&gt;&lt;span class="s3"&gt;"10000"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l66"&gt; &lt;span class="s2"&gt;rangeStyleClass=&lt;/span&gt;&lt;span class="s3"&gt;"range"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l67"&gt; &lt;span class="s2"&gt;trailer=&lt;/span&gt;&lt;span class="s3"&gt;"true"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l68"&gt; &lt;span class="s2"&gt;trailerStyleClass=&lt;/span&gt;&lt;span class="s3"&gt;"trailer"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l69"&gt; &lt;span class="s2"&gt;handleStyleClass=&lt;/span&gt;&lt;span class="s3"&gt;"handle"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l70"&gt; &lt;span class="s2"&gt;handleValue=&lt;/span&gt;&lt;span class="s3"&gt;"1"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l71"&gt; &lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"slider_1" &lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;hc:sliderListener &lt;/span&gt;&lt;span class="s2"&gt;type=&lt;/span&gt;&lt;span class="s3"&gt;"com.halesconsulting.web.action.MySliderListener" &lt;/span&gt;&lt;span class="s0"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;hc:ajaxSlider&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l72"&gt; 
&lt;/a&gt;&lt;a name="l73"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;a4j:outputPanel&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l74"&gt; 
&lt;/a&gt;&lt;a name="l75"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;a4j:outputPanel &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"list-body"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l76"&gt; 
&lt;/a&gt;&lt;a name="l77"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;t:dataTable &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"carIndex"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l94"&gt; 
&lt;/a&gt;&lt;a name="l95"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;t:dataTable&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l96"&gt; 
&lt;/a&gt;&lt;a name="l97"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;t:dataTable &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"carList"&lt;/span&gt;&amp;nbsp;&lt;span class="s2"&gt;value=&lt;/span&gt;&lt;span class="s3"&gt;#{inventoryList.carInventory}&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l141"&gt; 
&lt;/a&gt;&lt;a name="l142"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;ac:ajaxDataScroller &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"scroll_1"&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l146"&gt; 
&lt;/a&gt;&lt;a name="l147"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;a4j:outputPanel&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l148"&gt; 
&lt;/a&gt;&lt;a name="l149"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;a4j:status &lt;/span&gt;&lt;span class="s2"&gt;for=&lt;/span&gt;&lt;span class="s3"&gt;"stat1" &lt;/span&gt;&lt;span class="s2"&gt;forceId=&lt;/span&gt;&lt;span class="s3"&gt;"true" &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"ajaxStatus"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l150"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;f:facet &lt;/span&gt;&lt;span class="s2"&gt;name=&lt;/span&gt;&lt;span class="s3"&gt;"start"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l151"&gt; &lt;span class="s0"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s1"&gt;div &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s3"&gt;"loading-modal"&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l152"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;f:facet&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l153"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;a4j:status&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l154"&gt; 
&lt;/a&gt;&lt;a name="l155"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;a4j:region&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s4"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l156"&gt; 
&lt;/a&gt;&lt;a name="l157"&gt; &lt;span class="s0"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s1"&gt;a4j:form&lt;/span&gt;&lt;span class="s0"&gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt; 
&lt;/pre&gt; 

&lt;p&gt;All of the attribute descriptions are available in the faces-config.xml file if you have any questions. Feedback is more than welcomed and appreciated.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/g4Id6qwtIJM" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/jsf_ajaxslider_component</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/jsf_ajax_filter_slider_with</guid>
<title>JSF Ajax Filter/Slider with UIData</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/z1c2pAOGx-0/jsf_ajax_filter_slider_with</link> 
<pubDate>Sun, 31 Dec 2006 22:38:50 -0500</pubDate> 
<category>Java</category> 
<description>&lt;p&gt;In any RIA where h:dataTable is used, probably 90% of the time, you will need a filter in the same view/page as the dataTable. A Filter can be anything from a list of links, a select many list, or in this example, a slider.&lt;/p&gt; 

&lt;p&gt;At first, I thought about just creating the component and have it add the value of the slider to a request parameter so that the backing bean could have access to the value. The backing bean could then loop through the list and compare the slider value to the object, then present the filtered data. This is probably the most common and easiest option in most cases, but it seems there are too many drawbacks in developing this way.&lt;/p&gt; 

&lt;ol&gt; 
&lt;li&gt;This custom config leads to repeated code scattered throughout each backing bean that makes use of the filter.&lt;/li&gt; 
&lt;li&gt;Even if you abstract this functionality, it would be just as easy, and beneficial, to create a custom component to handle this. You could create a component that could filter any other component that makes use of UIData.&lt;/li&gt; 
&lt;li&gt;If you have 5 filters in 1 view, and they all create a combined criteria for your dataTable list, it would be nice if this logic was hidden under the hood of the component and everything played well together.&lt;/li&gt; 
&lt;/ol&gt; 

&lt;p&gt;A UIData filtering component should be much like the dataScroller component. It should have a "for" attribute with the id of your component to be filtered. We can provide attributes like range, start position, and all other common component attributes. It would also be nice to have a "depends" attribute that would allow a comma delimeted list of other filter component id's that would provide a state or limits for this components functionality.&lt;/p&gt; 

&lt;p&gt;Although my slider component is 95% complete, I guess I'm using this post as a semi-blueprint/laying some thoughts on paper. Filtering is an important part of displaying tabular, or any, data and I haven't seen any open source components addressing it. If anyone reading knows of JSF filtering, please leave a url. I plan on submitting the slider to JSF-Comp or any other project willing to take it within the next week.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/z1c2pAOGx-0" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/jsf_ajax_filter_slider_with</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/adding_lightbox_to_ajax4jsf_and</guid>
<title>Ajax4Jsf Modal Loading Windows</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/vUI46GeU54A/adding_lightbox_to_ajax4jsf_and</link>
<pubDate>Tue, 26 Dec 2006 16:59:10 -0500</pubDate> 
<category>Java</category> 
<description>&lt;p&gt;Ajax4Jsf's status tag (&lt;a href="https://ajax4jsf.dev.java.net/nonav/documentation/ajax-documentation/ch06s11.html"&gt;a4j:status&lt;/a&gt;) has alot of potential, but currently it's functionality is limited. With the combination of &lt;a href="http://www.huddletogether.com/projects/lightbox2/"&gt;Lightbox 2.0&lt;/a&gt;, or basically any javascript developed to build the dom, you can achieve the look of any modal "Loading..." window.&lt;/p&gt; 

&lt;p&gt;Since the status tag does not include capability to fire javascript events(&lt;a href="https://ajax4jsf.dev.java.net/servlets/ReadMsg?list=users&amp;msgNo=1893"&gt;as of yet&lt;/a&gt;), we will use the modified lightbox script to go ahead and write everything to the dom, then let the a4j:status tag to hide it until we make an Ajax call.&lt;/p&gt; 

&lt;p&gt;*Update - I recently created a &lt;a href="http://code.google.com/p/seam-2-sandbox/"&gt;working demo application&lt;/a&gt; for this modal. Read the updated blog entry &lt;a href=" http://www.jroller.com/wesleyhales/entry/richfaces_loading_modal_with_a4j"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pTitle"&gt;Facelet Source&lt;/p&gt; 
&lt;p&gt;This just shows basic usage with the A4J framework&lt;/p&gt; 
&lt;pre&gt; 
&lt;code&gt; 

&lt;/a&gt;&lt;a name="l26"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;script &lt;/span&gt;&lt;span class="s2"&gt;type=&lt;/span&gt;&lt;span class="s4"&gt;"text/javascript" &lt;/span&gt;&lt;span class="s2"&gt;src=&lt;/span&gt;&lt;span class="s4"&gt;"/facelet-sandbox/js/scriptaculous-js-1.6.5/lib/prototype.js"&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;script&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l27"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;script &lt;/span&gt;&lt;span class="s2"&gt;type=&lt;/span&gt;&lt;span class="s4"&gt;"text/javascript" &lt;/span&gt;&lt;span class="s2"&gt;src=&lt;/span&gt;&lt;span class="s4"&gt;"/facelet-sandbox/js/scriptaculous-js-1.6.5/src/scriptaculous.js?load=effects"&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;script&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l28"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;script &lt;/span&gt;&lt;span class="s2"&gt;type=&lt;/span&gt;&lt;span class="s4"&gt;"text/javascript" &lt;/span&gt;&lt;span class="s2"&gt;src=&lt;/span&gt;&lt;span class="s4"&gt;"/facelet-sandbox/js/modal.js"&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;script&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l29"&gt; 
&lt;/a&gt;&lt;a name="l30"&gt; 
&lt;/a&gt;&lt;a name="l31"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;style &lt;/span&gt;&lt;span class="s2"&gt;type=&lt;/span&gt;&lt;span class="s4"&gt;"text/css"&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l32"&gt; 
&lt;/a&gt;&lt;a name="l33"&gt; &lt;span class="s6"&gt;@import &lt;/span&gt;&lt;span class="s7"&gt;"/facelet-sandbox/css/modal.css"&lt;/span&gt;&lt;span class="s3"&gt;; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l34"&gt; 
&lt;/a&gt;&lt;a name="l35"&gt; &lt;span class="s1"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;style&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l36"&gt; 
&lt;/a&gt;&lt;a name="l37"&gt; 
&lt;/a&gt;&lt;a name="l38"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;a4j:region &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s4"&gt;"stat1"&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l39"&gt; 
&lt;/a&gt;&lt;a name="l40"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;a4j:outputPanel &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s4"&gt;"list-body"&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l41"&gt; 
&lt;/a&gt;&lt;a name="l42"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;t:dataTable &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s4"&gt;"carIndex"&lt;/span&gt;&lt;span class="s1"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l43"&gt; &lt;span class="s8"&gt;...&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l44"&gt; &lt;span class="s1"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;t:dataTable&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l45"&gt; 
&lt;/a&gt;&lt;a name="l46"&gt; &lt;span class="s1"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;a4j:outputPanel&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l47"&gt; 
&lt;/a&gt;&lt;a name="l48"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;ac:ajaxDataScroller &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s4"&gt;"scroll_1"&lt;/span&gt;&lt;span class="s1"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l49"&gt; &lt;span class="s2"&gt;for=&lt;/span&gt;&lt;span class="s4"&gt;"carList"&lt;/span&gt;&lt;span class="s1"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l50"&gt; &lt;span class="s2"&gt;maxPages=&lt;/span&gt;&lt;span class="s4"&gt;"9"&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l51"&gt; &lt;span class="s1"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;ac:ajaxDataScroller&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l52"&gt; 
&lt;/a&gt;&lt;a name="l53"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;a4j:status &lt;/span&gt;&lt;span class="s2"&gt;for=&lt;/span&gt;&lt;span class="s4"&gt;"stat1" &lt;/span&gt;&lt;span class="s2"&gt;forceId=&lt;/span&gt;&lt;span class="s4"&gt;"true" &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s4"&gt;"ajaxStatus"&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l54"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;f:facet &lt;/span&gt;&lt;span class="s2"&gt;name=&lt;/span&gt;&lt;span class="s4"&gt;"start"&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l55"&gt; &lt;span class="s1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s5"&gt;div &lt;/span&gt;&lt;span class="s2"&gt;id=&lt;/span&gt;&lt;span class="s4"&gt;"loading-modal"&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;div&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l56"&gt; &lt;span class="s1"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;f:facet&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l57"&gt; &lt;span class="s1"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;a4j:status&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 

&lt;/span&gt;&lt;/a&gt;&lt;a name="l58"&gt; 
&lt;/a&gt;&lt;a name="l59"&gt; &lt;span class="s1"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="s5"&gt;a4j:region&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s3"&gt; 
&lt;/span&gt;&lt;/a&gt;&lt;a name="l60"&gt; 
&lt;/a&gt;&lt;a name="l61"&gt; 

&lt;/code&gt; 
&lt;/pre&gt; 

&lt;p class="pTitle"&gt;Css Source&lt;/p&gt; 
&lt;p&gt;Some generic css and important background styles at bottom:&lt;/p&gt; 
&lt;pre&gt; 
&lt;code&gt; 

&lt;a name="l1"&gt;&lt;span class="s0"&gt; 
&lt;a name="l2"&gt;&lt;/span&gt;&lt;span class="s1"&gt;/**************************************************************/&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;a name="l3"&gt;&lt;/span&gt;&lt;span class="s1"&gt;/*Modal Window*/&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;a name="l4"&gt; 
&lt;a name="l5"&gt;&lt;/span&gt;&lt;span class="s2"&gt;#modal &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;a name="l6"&gt; &lt;/span&gt;&lt;span class="s3"&gt;background-color&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s2"&gt;#eee&lt;/span&gt;&lt;span class="s0"&gt;; 
&lt;a name="l7"&gt; &lt;/span&gt;&lt;span class="s3"&gt;padding&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;10&lt;/span&gt;&lt;span class="s5"&gt;px&lt;/span&gt;&lt;span class="s0"&gt;; 

&lt;a name="l8"&gt; &lt;/span&gt;&lt;span class="s3"&gt;border-bottom&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;2&lt;/span&gt;&lt;span class="s5"&gt;px solid &lt;/span&gt;&lt;span class="s2"&gt;#666&lt;/span&gt;&lt;span class="s0"&gt;; 
&lt;a name="l9"&gt; &lt;/span&gt;&lt;span class="s3"&gt;border-right&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;2&lt;/span&gt;&lt;span class="s5"&gt;px solid &lt;/span&gt;&lt;span class="s2"&gt;#666&lt;/span&gt;&lt;span class="s0"&gt;; 
&lt;a name="l10"&gt; } 
&lt;a name="l11"&gt; 

&lt;a name="l12"&gt;&lt;/span&gt;&lt;span class="s2"&gt;#modal-details &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;a name="l13"&gt; &lt;/span&gt;&lt;span class="s3"&gt;font-size&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;8&lt;/span&gt;&lt;span class="s5"&gt;px&lt;/span&gt;&lt;span class="s0"&gt;; &lt;/span&gt;&lt;span class="s1"&gt;/* originally 8px */&lt;/span&gt;&lt;span class="s0"&gt; 
&lt;a name="l14"&gt; &lt;/span&gt;&lt;span class="s3"&gt;padding-top&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s4"&gt;4&lt;/span&gt;&lt;span class="s5"&gt;px&lt;/span&gt;&lt;span class="s0"&gt;; 
&lt;a name="l15"&gt; } 

&lt;a name="l16"&gt; 
&lt;a name="l17"&gt;&lt;/span&gt;&lt;span class="s2"&gt;#modal-caption &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;a name="l18"&gt; &lt;/span&gt;&lt;span class="s3"&gt;float&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;left&lt;/span&gt;&lt;span class="s0"&gt;; 
&lt;a name="l19"&gt;} 
&lt;a name="l20"&gt; 
&lt;a name="l21"&gt;&lt;/span&gt;&lt;span class="s2"&gt;#loadingMsg &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;a name="l22"&gt; &lt;/span&gt;&lt;span class="s3"&gt;float&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s3"&gt;right&lt;/span&gt;&lt;span class="s0"&gt;; 

&lt;a name="l23"&gt;} 
&lt;a name="l24"&gt; 
&lt;a name="l25"&gt;&lt;/span&gt;&lt;span class="s2"&gt;#modal img &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;a name="l26"&gt; &lt;/span&gt;&lt;span class="s3"&gt;border&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s5"&gt;none&lt;/span&gt;&lt;span class="s0"&gt;; 
&lt;a name="l27"&gt; &lt;/span&gt;&lt;span class="s3"&gt;clear&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s5"&gt;both&lt;/span&gt;&lt;span class="s0"&gt;; 
&lt;a name="l28"&gt;} 
&lt;a name="l29"&gt; 
&lt;a name="l30"&gt;&lt;/span&gt;&lt;span class="s2"&gt;#overlay img &lt;/span&gt;&lt;span class="s0"&gt;{ 

&lt;a name="l31"&gt; &lt;/span&gt;&lt;span class="s3"&gt;border&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s5"&gt;none&lt;/span&gt;&lt;span class="s0"&gt;; 
&lt;a name="l32"&gt;} 
&lt;a name="l33"&gt; 
&lt;a name="l34"&gt;&lt;/span&gt;&lt;span class="s2"&gt;#overlay &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;a name="l35"&gt; &lt;/span&gt;&lt;span class="s3"&gt;background-image&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s2"&gt;url&lt;/span&gt;&lt;span class="s0"&gt;(&lt;/span&gt;&lt;span class="s5"&gt;/facelet-sandbox/images/modal/overlay-black.png&lt;/span&gt;&lt;span class="s0"&gt;); 
&lt;a name="l36"&gt;} 

&lt;a name="l37"&gt; 
&lt;a name="l38"&gt;* &lt;/span&gt;&lt;span class="s2"&gt;html #overlay &lt;/span&gt;&lt;span class="s0"&gt;{ 
&lt;a name="l39"&gt; &lt;/span&gt;&lt;span class="s3"&gt;background-color&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s5"&gt;transparent&lt;/span&gt;&lt;span class="s0"&gt;; 
&lt;a name="l40"&gt; &lt;/span&gt;&lt;span class="s3"&gt;background-image&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s2"&gt;url&lt;/span&gt;&lt;span class="s0"&gt;(&lt;/span&gt;&lt;span class="s5"&gt;blank.gif&lt;/span&gt;&lt;span class="s0"&gt;); 
&lt;a name="l41"&gt; &lt;/span&gt;&lt;span class="s2"&gt;filter&lt;/span&gt;&lt;span class="s0"&gt;: &lt;/span&gt;&lt;span class="s2"&gt;progid&lt;/span&gt;&lt;span class="s0"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;DXImageTransform&lt;/span&gt;&lt;span class="s0"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;Microsoft&lt;/span&gt;&lt;span class="s0"&gt;.&lt;/span&gt;&lt;span class="s2"&gt;AlphaImageLoader&lt;/span&gt;&lt;span class="s0"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="s0"&gt;=&lt;/span&gt;&lt;span class="s5"&gt;&amp;quot;/facelet-sandbox/images/modal/overlay-black.png&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;, &lt;/span&gt;&lt;span class="s2"&gt;sizingMethod&lt;/span&gt;&lt;span class="s0"&gt;=&lt;/span&gt;&lt;span class="s5"&gt;&amp;quot;scale&amp;quot;&lt;/span&gt;&lt;span class="s0"&gt;); 

&lt;a name="l42"&gt;} 
&lt;a name="l43"&gt; 
&lt;a name="l44"&gt;&lt;/span&gt;&lt;span class="s1"&gt;/**************************************************************/&lt;/span&gt;

&lt;/code&gt; 
&lt;/pre&gt; 


&lt;p&gt;This is our end result when you rerender a component using A4J. Btw, (you can modify the AjaxAnywhere js to do the same thing)&lt;/p&gt; 
&lt;p&gt; 
&lt;a href="http://www.jroller.com/resources/w/wesleyhales/modal_large.gif"&gt;&lt;img src="http://www.jroller.com/resources/w/wesleyhales/modal_small.gif"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/vUI46GeU54A" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/adding_lightbox_to_ajax4jsf_and</feedburner:origLink>
</item> 
<item> 
<guid isPermaLink="false">http://www.jroller.com/wesleyhales/entry/my_jroller_blog_extreme_makeover</guid>
<title>My Jroller Blog Extreme Makeover</title> 
<dc:creator>Wesley Hales</dc:creator> 
<link>http://feedproxy.google.com/~r/WesleyHales/~3/n-e1Y6aTyIk/my_jroller_blog_extreme_makeover</link> 
<pubDate>Mon, 18 Dec 2006 21:01:34 -0500</pubDate> 
<category>Design</category> 
<description>&lt;p&gt;I need a new design badly (the little British car in the tunnel is getting old, quick), and after coding for x number of months, I feel like my design skillz are getting a little stale. So here are the candidates for my new look.&lt;/p&gt; 

&lt;p class="pTitle"&gt;Layout #1&lt;/p&gt; 
&lt;p&gt;&lt;a href="/resources/w/wesleyhales/blogLayout_2.jpg"&gt;&lt;img src="/resources/w/wesleyhales/blogLayout_2_small.jpg" width="400" height="300"/&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p class="pTitle"&gt;Layout #2&lt;/p&gt; 
&lt;p&gt;&lt;a href="/resources/w/wesleyhales/blogLayout.jpg"&gt;&lt;img src="/resources/w/wesleyhales/blogLayout_small.jpg" width="400" height="357"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/WesleyHales/~4/n-e1Y6aTyIk" height="1" width="1"/&gt;</description> 
<feedburner:origLink>http://www.jroller.com/wesleyhales/entry/my_jroller_blog_extreme_makeover</feedburner:origLink>
</item> 
</channel> 
</rss>